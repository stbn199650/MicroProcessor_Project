

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Jan 03 23:01:17 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40  0000                     
    41                           ; Version 1.44
    42                           ; Generated 14/09/2017 GMT
    43                           ; 
    44                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4520 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	mediumconst
    77  0076FC                     __pmediumconst:
    78                           	opt stack 0
    79  0076FC  00                 	db	0
    80  0076FD                     _arrow:
    81                           	opt stack 0
    82  0076FD  00                 	db	0
    83  0076FE  64                 	db	100
    84  0076FF  64                 	db	100
    85  007700  64                 	db	100
    86  007701  01                 	db	1
    87  007702  04                 	db	4
    88  007703  05                 	db	5
    89  007704  64                 	db	100
    90  007705  06                 	db	6
    91  007706  09                 	db	9
    92  007707  0A                 	db	10
    93  007708  64                 	db	100
    94  007709  0B                 	db	11
    95  00770A  0E                 	db	14
    96  00770B  0F                 	db	15
    97  00770C  64                 	db	100
    98  00770D  01                 	db	1
    99  00770E  64                 	db	100
   100  00770F  64                 	db	100
   101  007710  64                 	db	100
   102  007711  00                 	db	0
   103  007712  02                 	db	2
   104  007713  05                 	db	5
   105  007714  64                 	db	100
   106  007715  04                 	db	4
   107  007716  06                 	db	6
   108  007717  09                 	db	9
   109  007718  64                 	db	100
   110  007719  08                 	db	8
   111  00771A  0A                 	db	10
   112  00771B  0D                 	db	13
   113  00771C  64                 	db	100
   114  00771D  02                 	db	2
   115  00771E  64                 	db	100
   116  00771F  64                 	db	100
   117  007720  64                 	db	100
   118  007721  01                 	db	1
   119  007722  03                 	db	3
   120  007723  06                 	db	6
   121  007724  64                 	db	100
   122  007725  05                 	db	5
   123  007726  07                 	db	7
   124  007727  0A                 	db	10
   125  007728  64                 	db	100
   126  007729  09                 	db	9
   127  00772A  0B                 	db	11
   128  00772B  0E                 	db	14
   129  00772C  64                 	db	100
   130  00772D  03                 	db	3
   131  00772E  64                 	db	100
   132  00772F  64                 	db	100
   133  007730  64                 	db	100
   134  007731  02                 	db	2
   135  007732  06                 	db	6
   136  007733  07                 	db	7
   137  007734  64                 	db	100
   138  007735  05                 	db	5
   139  007736  09                 	db	9
   140  007737  0A                 	db	10
   141  007738  64                 	db	100
   142  007739  08                 	db	8
   143  00773A  0C                 	db	12
   144  00773B  0D                 	db	13
   145  00773C  64                 	db	100
   146  00773D  04                 	db	4
   147  00773E  64                 	db	100
   148  00773F  64                 	db	100
   149  007740  64                 	db	100
   150  007741  00                 	db	0
   151  007742  05                 	db	5
   152  007743  08                 	db	8
   153  007744  64                 	db	100
   154  007745  01                 	db	1
   155  007746  06                 	db	6
   156  007747  09                 	db	9
   157  007748  64                 	db	100
   158  007749  02                 	db	2
   159  00774A  07                 	db	7
   160  00774B  0A                 	db	10
   161  00774C  64                 	db	100
   162  00774D  05                 	db	5
   163  00774E  64                 	db	100
   164  00774F  64                 	db	100
   165  007750  64                 	db	100
   166  007751  01                 	db	1
   167  007752  04                 	db	4
   168  007753  06                 	db	6
   169  007754  09                 	db	9
   170  007755  07                 	db	7
   171  007756  0D                 	db	13
   172  007757  64                 	db	100
   173  007758  64                 	db	100
   174  007759  64                 	db	100
   175  00775A  64                 	db	100
   176  00775B  64                 	db	100
   177  00775C  64                 	db	100
   178  00775D  06                 	db	6
   179  00775E  64                 	db	100
   180  00775F  64                 	db	100
   181  007760  64                 	db	100
   182  007761  02                 	db	2
   183  007762  05                 	db	5
   184  007763  07                 	db	7
   185  007764  0A                 	db	10
   186  007765  04                 	db	4
   187  007766  0E                 	db	14
   188  007767  64                 	db	100
   189  007768  64                 	db	100
   190  007769  64                 	db	100
   191  00776A  64                 	db	100
   192  00776B  64                 	db	100
   193  00776C  64                 	db	100
   194  00776D  07                 	db	7
   195  00776E  64                 	db	100
   196  00776F  64                 	db	100
   197  007770  64                 	db	100
   198  007771  03                 	db	3
   199  007772  06                 	db	6
   200  007773  0B                 	db	11
   201  007774  64                 	db	100
   202  007775  02                 	db	2
   203  007776  05                 	db	5
   204  007777  0A                 	db	10
   205  007778  64                 	db	100
   206  007779  01                 	db	1
   207  00777A  04                 	db	4
   208  00777B  09                 	db	9
   209  00777C  64                 	db	100
   210  00777D  08                 	db	8
   211  00777E  64                 	db	100
   212  00777F  64                 	db	100
   213  007780  64                 	db	100
   214  007781  04                 	db	4
   215  007782  09                 	db	9
   216  007783  0C                 	db	12
   217  007784  64                 	db	100
   218  007785  05                 	db	5
   219  007786  0A                 	db	10
   220  007787  0D                 	db	13
   221  007788  64                 	db	100
   222  007789  06                 	db	6
   223  00778A  0B                 	db	11
   224  00778B  0E                 	db	14
   225  00778C  64                 	db	100
   226  00778D  09                 	db	9
   227  00778E  64                 	db	100
   228  00778F  64                 	db	100
   229  007790  64                 	db	100
   230  007791  05                 	db	5
   231  007792  08                 	db	8
   232  007793  0A                 	db	10
   233  007794  0D                 	db	13
   234  007795  01                 	db	1
   235  007796  0B                 	db	11
   236  007797  64                 	db	100
   237  007798  64                 	db	100
   238  007799  64                 	db	100
   239  00779A  64                 	db	100
   240  00779B  64                 	db	100
   241  00779C  64                 	db	100
   242  00779D  0A                 	db	10
   243  00779E  64                 	db	100
   244  00779F  64                 	db	100
   245  0077A0  64                 	db	100
   246  0077A1  06                 	db	6
   247  0077A2  09                 	db	9
   248  0077A3  0B                 	db	11
   249  0077A4  0E                 	db	14
   250  0077A5  02                 	db	2
   251  0077A6  08                 	db	8
   252  0077A7  64                 	db	100
   253  0077A8  64                 	db	100
   254  0077A9  64                 	db	100
   255  0077AA  64                 	db	100
   256  0077AB  64                 	db	100
   257  0077AC  64                 	db	100
   258  0077AD  0B                 	db	11
   259  0077AE  64                 	db	100
   260  0077AF  64                 	db	100
   261  0077B0  64                 	db	100
   262  0077B1  07                 	db	7
   263  0077B2  0A                 	db	10
   264  0077B3  0F                 	db	15
   265  0077B4  64                 	db	100
   266  0077B5  06                 	db	6
   267  0077B6  09                 	db	9
   268  0077B7  0E                 	db	14
   269  0077B8  64                 	db	100
   270  0077B9  05                 	db	5
   271  0077BA  08                 	db	8
   272  0077BB  0D                 	db	13
   273  0077BC  64                 	db	100
   274  0077BD  0C                 	db	12
   275  0077BE  64                 	db	100
   276  0077BF  64                 	db	100
   277  0077C0  64                 	db	100
   278  0077C1  08                 	db	8
   279  0077C2  09                 	db	9
   280  0077C3  0D                 	db	13
   281  0077C4  64                 	db	100
   282  0077C5  05                 	db	5
   283  0077C6  06                 	db	6
   284  0077C7  0A                 	db	10
   285  0077C8  64                 	db	100
   286  0077C9  02                 	db	2
   287  0077CA  03                 	db	3
   288  0077CB  07                 	db	7
   289  0077CC  64                 	db	100
   290  0077CD  0D                 	db	13
   291  0077CE  64                 	db	100
   292  0077CF  64                 	db	100
   293  0077D0  64                 	db	100
   294  0077D1  09                 	db	9
   295  0077D2  0C                 	db	12
   296  0077D3  0E                 	db	14
   297  0077D4  64                 	db	100
   298  0077D5  05                 	db	5
   299  0077D6  08                 	db	8
   300  0077D7  0A                 	db	10
   301  0077D8  64                 	db	100
   302  0077D9  01                 	db	1
   303  0077DA  04                 	db	4
   304  0077DB  06                 	db	6
   305  0077DC  64                 	db	100
   306  0077DD  0E                 	db	14
   307  0077DE  64                 	db	100
   308  0077DF  64                 	db	100
   309  0077E0  64                 	db	100
   310  0077E1  0A                 	db	10
   311  0077E2  0D                 	db	13
   312  0077E3  0F                 	db	15
   313  0077E4  64                 	db	100
   314  0077E5  06                 	db	6
   315  0077E6  09                 	db	9
   316  0077E7  0B                 	db	11
   317  0077E8  64                 	db	100
   318  0077E9  02                 	db	2
   319  0077EA  05                 	db	5
   320  0077EB  07                 	db	7
   321  0077EC  64                 	db	100
   322  0077ED  0F                 	db	15
   323  0077EE  64                 	db	100
   324  0077EF  64                 	db	100
   325  0077F0  64                 	db	100
   326  0077F1  0A                 	db	10
   327  0077F2  0B                 	db	11
   328  0077F3  0E                 	db	14
   329  0077F4  64                 	db	100
   330  0077F5  05                 	db	5
   331  0077F6  06                 	db	6
   332  0077F7  09                 	db	9
   333  0077F8  64                 	db	100
   334  0077F9  00                 	db	0
   335  0077FA  01                 	db	1
   336  0077FB  04                 	db	4
   337  0077FC  64                 	db	100
   338  0077FD                     __end_of_arrow:
   339                           	opt stack 0
   340  0077FD                     _show7_2:
   341                           	opt stack 0
   342  0077FD  00                 	db	0
   343  0077FE  05                 	db	5
   344  0077FF  0A                 	db	10
   345  007800  0F                 	db	15
   346  007801  13                 	db	19
   347  007802  16                 	db	22
   348  007803  19                 	db	25
   349  007804  1C                 	db	28
   350  007805  23                 	db	35
   351  007806  26                 	db	38
   352  007807  29                 	db	41
   353  007808  2C                 	db	44
   354  007809  30                 	db	48
   355  00780A  35                 	db	53
   356  00780B  3A                 	db	58
   357  00780C  3F                 	db	63
   358  00780D  64                 	db	100
   359  00780E  64                 	db	100
   360  00780F  64                 	db	100
   361  007810  64                 	db	100
   362  007811  64                 	db	100
   363  007812  64                 	db	100
   364  007813  64                 	db	100
   365  007814  64                 	db	100
   366  007815  04                 	db	4
   367  007816  09                 	db	9
   368  007817  0E                 	db	14
   369  007818  23                 	db	35
   370  007819  30                 	db	48
   371  00781A  27                 	db	39
   372  00781B  2A                 	db	42
   373  00781C  2D                 	db	45
   374  00781D  1C                 	db	28
   375  00781E  31                 	db	49
   376  00781F  36                 	db	54
   377  007820  3B                 	db	59
   378  007821  0F                 	db	15
   379  007822  18                 	db	24
   380  007823  15                 	db	21
   381  007824  12                 	db	18
   382  007825  64                 	db	100
   383  007826  64                 	db	100
   384  007827  64                 	db	100
   385  007828  64                 	db	100
   386  007829  64                 	db	100
   387  00782A  64                 	db	100
   388  00782B  64                 	db	100
   389  00782C  64                 	db	100
   390  00782D  03                 	db	3
   391  00782E  10                 	db	16
   392  00782F  06                 	db	6
   393  007830  07                 	db	7
   394  007831  0A                 	db	10
   395  007832  0B                 	db	11
   396  007833  0C                 	db	12
   397  007834  20                 	db	32
   398  007835  21                 	db	33
   399  007836  25                 	db	37
   400  007837  22                 	db	34
   401  007838  26                 	db	38
   402  007839  2F                 	db	47
   403  00783A  3C                 	db	60
   404  00783B  38                 	db	56
   405  00783C  39                 	db	57
   406  00783D  34                 	db	52
   407  00783E  35                 	db	53
   408  00783F  1F                 	db	31
   409  007840  33                 	db	51
   410  007841  1A                 	db	26
   411  007842  1E                 	db	30
   412  007843  19                 	db	25
   413  007844  1D                 	db	29
   414  007845  03                 	db	3
   415  007846  10                 	db	16
   416  007847  06                 	db	6
   417  007848  07                 	db	7
   418  007849  0A                 	db	10
   419  00784A  0C                 	db	12
   420  00784B  20                 	db	32
   421  00784C  21                 	db	33
   422  00784D  25                 	db	37
   423  00784E  26                 	db	38
   424  00784F  2F                 	db	47
   425  007850  3C                 	db	60
   426  007851  38                 	db	56
   427  007852  39                 	db	57
   428  007853  35                 	db	53
   429  007854  1F                 	db	31
   430  007855  33                 	db	51
   431  007856  1E                 	db	30
   432  007857  19                 	db	25
   433  007858  1A                 	db	26
   434  007859  0F                 	db	15
   435  00785A  1C                 	db	28
   436  00785B  23                 	db	35
   437  00785C  30                 	db	48
   438  00785D  02                 	db	2
   439  00785E  03                 	db	3
   440  00785F  05                 	db	5
   441  007860  06                 	db	6
   442  007861  0B                 	db	11
   443  007862  18                 	db	24
   444  007863  20                 	db	32
   445  007864  24                 	db	36
   446  007865  25                 	db	37
   447  007866  29                 	db	41
   448  007867  0E                 	db	14
   449  007868  22                 	db	34
   450  007869  3C                 	db	60
   451  00786A  3D                 	db	61
   452  00786B  39                 	db	57
   453  00786C  3A                 	db	58
   454  00786D  34                 	db	52
   455  00786E  27                 	db	39
   456  00786F  1B                 	db	27
   457  007870  1F                 	db	31
   458  007871  16                 	db	22
   459  007872  1A                 	db	26
   460  007873  1D                 	db	29
   461  007874  31                 	db	49
   462  007875  00                 	db	0
   463  007876  01                 	db	1
   464  007877  05                 	db	5
   465  007878  06                 	db	6
   466  007879  0A                 	db	10
   467  00787A  13                 	db	19
   468  00787B  17                 	db	23
   469  00787C  16                 	db	22
   470  00787D  1A                 	db	26
   471  00787E  19                 	db	25
   472  00787F  28                 	db	40
   473  007880  2C                 	db	44
   474  007881  25                 	db	37
   475  007882  29                 	db	41
   476  007883  26                 	db	38
   477  007884  3E                 	db	62
   478  007885  3F                 	db	63
   479  007886  39                 	db	57
   480  007887  3A                 	db	58
   481  007888  35                 	db	53
   482  007889  64                 	db	100
   483  00788A  64                 	db	100
   484  00788B  64                 	db	100
   485  00788C  64                 	db	100
   486  00788D  00                 	db	0
   487  00788E  01                 	db	1
   488  00788F  06                 	db	6
   489  007890  28                 	db	40
   490  007891  2C                 	db	44
   491  007892  25                 	db	37
   492  007893  39                 	db	57
   493  007894  3E                 	db	62
   494  007895  3F                 	db	63
   495  007896  13                 	db	19
   496  007897  17                 	db	23
   497  007898  1A                 	db	26
   498  007899  64                 	db	100
   499  00789A  64                 	db	100
   500  00789B  64                 	db	100
   501  00789C  64                 	db	100
   502  00789D  64                 	db	100
   503  00789E  64                 	db	100
   504  00789F  64                 	db	100
   505  0078A0  64                 	db	100
   506  0078A1  64                 	db	100
   507  0078A2  64                 	db	100
   508  0078A3  64                 	db	100
   509  0078A4  64                 	db	100
   510  0078A5  00                 	db	0
   511  0078A6  01                 	db	1
   512  0078A7  28                 	db	40
   513  0078A8  2C                 	db	44
   514  0078A9  3E                 	db	62
   515  0078AA  3F                 	db	63
   516  0078AB  13                 	db	19
   517  0078AC  17                 	db	23
   518  0078AD  64                 	db	100
   519  0078AE  64                 	db	100
   520  0078AF  64                 	db	100
   521  0078B0  64                 	db	100
   522  0078B1  64                 	db	100
   523  0078B2  64                 	db	100
   524  0078B3  64                 	db	100
   525  0078B4  64                 	db	100
   526  0078B5  64                 	db	100
   527  0078B6  64                 	db	100
   528  0078B7  64                 	db	100
   529  0078B8  64                 	db	100
   530  0078B9  64                 	db	100
   531  0078BA  64                 	db	100
   532  0078BB  64                 	db	100
   533  0078BC  64                 	db	100
   534  0078BD  00                 	db	0
   535  0078BE  2C                 	db	44
   536  0078BF  3F                 	db	63
   537  0078C0  13                 	db	19
   538  0078C1  64                 	db	100
   539  0078C2  64                 	db	100
   540  0078C3  64                 	db	100
   541  0078C4  64                 	db	100
   542  0078C5  64                 	db	100
   543  0078C6  64                 	db	100
   544  0078C7  64                 	db	100
   545  0078C8  64                 	db	100
   546  0078C9  64                 	db	100
   547  0078CA  64                 	db	100
   548  0078CB  64                 	db	100
   549  0078CC  64                 	db	100
   550  0078CD  64                 	db	100
   551  0078CE  64                 	db	100
   552  0078CF  64                 	db	100
   553  0078D0  64                 	db	100
   554  0078D1  64                 	db	100
   555  0078D2  64                 	db	100
   556  0078D3  64                 	db	100
   557  0078D4  64                 	db	100
   558  0078D5                     __end_of_show7_2:
   559                           	opt stack 0
   560  0078D5                     _show0_3:
   561                           	opt stack 0
   562  0078D5  0F                 	db	15
   563  0078D6  1C                 	db	28
   564  0078D7  23                 	db	35
   565  0078D8  30                 	db	48
   566  0078D9  64                 	db	100
   567  0078DA  64                 	db	100
   568  0078DB  64                 	db	100
   569  0078DC  64                 	db	100
   570  0078DD  64                 	db	100
   571  0078DE  64                 	db	100
   572  0078DF  64                 	db	100
   573  0078E0  64                 	db	100
   574  0078E1  64                 	db	100
   575  0078E2  64                 	db	100
   576  0078E3  64                 	db	100
   577  0078E4  64                 	db	100
   578  0078E5  64                 	db	100
   579  0078E6  64                 	db	100
   580  0078E7  64                 	db	100
   581  0078E8  64                 	db	100
   582  0078E9  0B                 	db	11
   583  0078EA  0E                 	db	14
   584  0078EB  22                 	db	34
   585  0078EC  27                 	db	39
   586  0078ED  18                 	db	24
   587  0078EE  1D                 	db	29
   588  0078EF  31                 	db	49
   589  0078F0  34                 	db	52
   590  0078F1  64                 	db	100
   591  0078F2  64                 	db	100
   592  0078F3  64                 	db	100
   593  0078F4  64                 	db	100
   594  0078F5  64                 	db	100
   595  0078F6  64                 	db	100
   596  0078F7  64                 	db	100
   597  0078F8  64                 	db	100
   598  0078F9  64                 	db	100
   599  0078FA  64                 	db	100
   600  0078FB  64                 	db	100
   601  0078FC  64                 	db	100
   602  0078FD  0A                 	db	10
   603  0078FE  0B                 	db	11
   604  0078FF  18                 	db	24
   605  007900  19                 	db	25
   606  007901  0E                 	db	14
   607  007902  22                 	db	34
   608  007903  26                 	db	38
   609  007904  27                 	db	39
   610  007905  34                 	db	52
   611  007906  35                 	db	53
   612  007907  1D                 	db	29
   613  007908  31                 	db	49
   614  007909  64                 	db	100
   615  00790A  64                 	db	100
   616  00790B  64                 	db	100
   617  00790C  64                 	db	100
   618  00790D  64                 	db	100
   619  00790E  64                 	db	100
   620  00790F  64                 	db	100
   621  007910  64                 	db	100
   622  007911  07                 	db	7
   623  007912  0A                 	db	10
   624  007913  0D                 	db	13
   625  007914  21                 	db	33
   626  007915  26                 	db	38
   627  007916  2B                 	db	43
   628  007917  14                 	db	20
   629  007918  19                 	db	25
   630  007919  1E                 	db	30
   631  00791A  32                 	db	50
   632  00791B  35                 	db	53
   633  00791C  38                 	db	56
   634  00791D  64                 	db	100
   635  00791E  64                 	db	100
   636  00791F  64                 	db	100
   637  007920  64                 	db	100
   638  007921  64                 	db	100
   639  007922  64                 	db	100
   640  007923  64                 	db	100
   641  007924  64                 	db	100
   642  007925  05                 	db	5
   643  007926  06                 	db	6
   644  007927  07                 	db	7
   645  007928  14                 	db	20
   646  007929  15                 	db	21
   647  00792A  16                 	db	22
   648  00792B  09                 	db	9
   649  00792C  0D                 	db	13
   650  00792D  21                 	db	33
   651  00792E  25                 	db	37
   652  00792F  29                 	db	41
   653  007930  2A                 	db	42
   654  007931  2B                 	db	43
   655  007932  38                 	db	56
   656  007933  39                 	db	57
   657  007934  3A                 	db	58
   658  007935  1A                 	db	26
   659  007936  1E                 	db	30
   660  007937  32                 	db	50
   661  007938  36                 	db	54
   662  007939  02                 	db	2
   663  00793A  05                 	db	5
   664  00793B  08                 	db	8
   665  00793C  24                 	db	36
   666  00793D  29                 	db	41
   667  00793E  2E                 	db	46
   668  00793F  37                 	db	55
   669  007940  3A                 	db	58
   670  007941  3D                 	db	61
   671  007942  11                 	db	17
   672  007943  16                 	db	22
   673  007944  1B                 	db	27
   674  007945  64                 	db	100
   675  007946  64                 	db	100
   676  007947  64                 	db	100
   677  007948  64                 	db	100
   678  007949  64                 	db	100
   679  00794A  64                 	db	100
   680  00794B  64                 	db	100
   681  00794C  64                 	db	100
   682  00794D                     __end_of_show0_3:
   683                           	opt stack 0
   684  00794D                     _show7_1:
   685                           	opt stack 0
   686  00794D  0F                 	db	15
   687  00794E  1C                 	db	28
   688  00794F  23                 	db	35
   689  007950  30                 	db	48
   690  007951  64                 	db	100
   691  007952  64                 	db	100
   692  007953  64                 	db	100
   693  007954  64                 	db	100
   694  007955  64                 	db	100
   695  007956  64                 	db	100
   696  007957  64                 	db	100
   697  007958  64                 	db	100
   698  007959  64                 	db	100
   699  00795A  64                 	db	100
   700  00795B  64                 	db	100
   701  00795C  64                 	db	100
   702  00795D  64                 	db	100
   703  00795E  64                 	db	100
   704  00795F  64                 	db	100
   705  007960  64                 	db	100
   706  007961  64                 	db	100
   707  007962  64                 	db	100
   708  007963  64                 	db	100
   709  007964  64                 	db	100
   710  007965  64                 	db	100
   711  007966  64                 	db	100
   712  007967  64                 	db	100
   713  007968  64                 	db	100
   714  007969  64                 	db	100
   715  00796A  0A                 	db	10
   716  00796B  0B                 	db	11
   717  00796C  0E                 	db	14
   718  00796D  22                 	db	34
   719  00796E  26                 	db	38
   720  00796F  27                 	db	39
   721  007970  34                 	db	52
   722  007971  35                 	db	53
   723  007972  31                 	db	49
   724  007973  1D                 	db	29
   725  007974  19                 	db	25
   726  007975  18                 	db	24
   727  007976  0B                 	db	11
   728  007977  64                 	db	100
   729  007978  64                 	db	100
   730  007979  64                 	db	100
   731  00797A  64                 	db	100
   732  00797B  64                 	db	100
   733  00797C  64                 	db	100
   734  00797D  64                 	db	100
   735  00797E  64                 	db	100
   736  00797F  64                 	db	100
   737  007980  64                 	db	100
   738  007981  64                 	db	100
   739  007982  64                 	db	100
   740  007983  64                 	db	100
   741  007984  64                 	db	100
   742  007985  64                 	db	100
   743  007986  64                 	db	100
   744  007987  05                 	db	5
   745  007988  06                 	db	6
   746  007989  07                 	db	7
   747  00798A  14                 	db	20
   748  00798B  15                 	db	21
   749  00798C  09                 	db	9
   750  00798D  0D                 	db	13
   751  00798E  21                 	db	33
   752  00798F  25                 	db	37
   753  007990  29                 	db	41
   754  007991  2A                 	db	42
   755  007992  2B                 	db	43
   756  007993  38                 	db	56
   757  007994  39                 	db	57
   758  007995  3A                 	db	58
   759  007996  36                 	db	54
   760  007997  32                 	db	50
   761  007998  1E                 	db	30
   762  007999  1A                 	db	26
   763  00799A  16                 	db	22
   764  00799B  64                 	db	100
   765  00799C  64                 	db	100
   766  00799D  64                 	db	100
   767  00799E  64                 	db	100
   768  00799F  64                 	db	100
   769  0079A0  64                 	db	100
   770  0079A1  64                 	db	100
   771  0079A2  64                 	db	100
   772  0079A3  64                 	db	100
   773  0079A4  00                 	db	0
   774  0079A5  01                 	db	1
   775  0079A6  02                 	db	2
   776  0079A7  03                 	db	3
   777  0079A8  10                 	db	16
   778  0079A9  11                 	db	17
   779  0079AA  12                 	db	18
   780  0079AB  13                 	db	19
   781  0079AC  04                 	db	4
   782  0079AD  08                 	db	8
   783  0079AE  0C                 	db	12
   784  0079AF  20                 	db	32
   785  0079B0  24                 	db	36
   786  0079B1  28                 	db	40
   787  0079B2  2C                 	db	44
   788  0079B3  2D                 	db	45
   789  0079B4  2E                 	db	46
   790  0079B5  2F                 	db	47
   791  0079B6  3C                 	db	60
   792  0079B7  3D                 	db	61
   793  0079B8  3E                 	db	62
   794  0079B9  3F                 	db	63
   795  0079BA  17                 	db	23
   796  0079BB  1B                 	db	27
   797  0079BC  1F                 	db	31
   798  0079BD  33                 	db	51
   799  0079BE  37                 	db	55
   800  0079BF  3B                 	db	59
   801  0079C0  3F                 	db	63
   802  0079C1                     __end_of_show7_1:
   803                           	opt stack 0
   804  0079C1                     _circle:
   805                           	opt stack 0
   806  0079C1  00                 	db	0
   807  0079C2  01                 	db	1
   808  0079C3  02                 	db	2
   809  0079C4  03                 	db	3
   810  0079C5  10                 	db	16
   811  0079C6  11                 	db	17
   812  0079C7  12                 	db	18
   813  0079C8  16                 	db	22
   814  0079C9  1A                 	db	26
   815  0079CA  1E                 	db	30
   816  0079CB  32                 	db	50
   817  0079CC  36                 	db	54
   818  0079CD  3A                 	db	58
   819  0079CE  04                 	db	4
   820  0079CF  08                 	db	8
   821  0079D0  0C                 	db	12
   822  0079D1  20                 	db	32
   823  0079D2  24                 	db	36
   824  0079D3  28                 	db	40
   825  0079D4  2C                 	db	44
   826  0079D5  2D                 	db	45
   827  0079D6  2E                 	db	46
   828  0079D7  2F                 	db	47
   829  0079D8  3C                 	db	60
   830  0079D9  3D                 	db	61
   831  0079DA  3E                 	db	62
   832  0079DB  05                 	db	5
   833  0079DC  06                 	db	6
   834  0079DD  07                 	db	7
   835  0079DE  14                 	db	20
   836  0079DF  15                 	db	21
   837  0079E0  19                 	db	25
   838  0079E1  1D                 	db	29
   839  0079E2  31                 	db	49
   840  0079E3  35                 	db	53
   841  0079E4  39                 	db	57
   842  0079E5  09                 	db	9
   843  0079E6  0D                 	db	13
   844  0079E7  21                 	db	33
   845  0079E8  25                 	db	37
   846  0079E9  29                 	db	41
   847  0079EA  2A                 	db	42
   848  0079EB  2B                 	db	43
   849  0079EC  38                 	db	56
   850  0079ED  64                 	db	100
   851  0079EE  64                 	db	100
   852  0079EF  64                 	db	100
   853  0079F0  64                 	db	100
   854  0079F1  64                 	db	100
   855  0079F2  64                 	db	100
   856  0079F3  64                 	db	100
   857  0079F4  64                 	db	100
   858  0079F5  0A                 	db	10
   859  0079F6  0B                 	db	11
   860  0079F7  18                 	db	24
   861  0079F8  1C                 	db	28
   862  0079F9  0E                 	db	14
   863  0079FA  22                 	db	34
   864  0079FB  26                 	db	38
   865  0079FC  27                 	db	39
   866  0079FD  34                 	db	52
   867  0079FE  30                 	db	48
   868  0079FF  64                 	db	100
   869  007A00  64                 	db	100
   870  007A01  64                 	db	100
   871  007A02  64                 	db	100
   872  007A03  64                 	db	100
   873  007A04  64                 	db	100
   874  007A05  64                 	db	100
   875  007A06  64                 	db	100
   876  007A07  64                 	db	100
   877  007A08  64                 	db	100
   878  007A09  64                 	db	100
   879  007A0A  64                 	db	100
   880  007A0B  64                 	db	100
   881  007A0C  64                 	db	100
   882  007A0D  64                 	db	100
   883  007A0E  64                 	db	100
   884  007A0F  0F                 	db	15
   885  007A10  23                 	db	35
   886  007A11  64                 	db	100
   887  007A12  64                 	db	100
   888  007A13  64                 	db	100
   889  007A14  64                 	db	100
   890  007A15  64                 	db	100
   891  007A16  64                 	db	100
   892  007A17  64                 	db	100
   893  007A18  64                 	db	100
   894  007A19  64                 	db	100
   895  007A1A  64                 	db	100
   896  007A1B  64                 	db	100
   897  007A1C  64                 	db	100
   898  007A1D  64                 	db	100
   899  007A1E  64                 	db	100
   900  007A1F  64                 	db	100
   901  007A20  64                 	db	100
   902  007A21  64                 	db	100
   903  007A22  64                 	db	100
   904  007A23  64                 	db	100
   905  007A24  64                 	db	100
   906  007A25  64                 	db	100
   907  007A26  64                 	db	100
   908  007A27  64                 	db	100
   909  007A28  64                 	db	100
   910  007A29                     __end_of_circle:
   911                           	opt stack 0
   912  007A29                     _show4_3:
   913                           	opt stack 0
   914  007A29  37                 	db	55
   915  007A2A  3A                 	db	58
   916  007A2B  3D                 	db	61
   917  007A2C  3B                 	db	59
   918  007A2D  3E                 	db	62
   919  007A2E  3F                 	db	63
   920  007A2F  64                 	db	100
   921  007A30  64                 	db	100
   922  007A31  33                 	db	51
   923  007A32  36                 	db	54
   924  007A33  39                 	db	57
   925  007A34  3C                 	db	60
   926  007A35  37                 	db	55
   927  007A36  3A                 	db	58
   928  007A37  3D                 	db	61
   929  007A38  64                 	db	100
   930  007A39  1F                 	db	31
   931  007A3A  32                 	db	50
   932  007A3B  35                 	db	53
   933  007A3C  38                 	db	56
   934  007A3D  33                 	db	51
   935  007A3E  36                 	db	54
   936  007A3F  39                 	db	57
   937  007A40  3C                 	db	60
   938  007A41  1B                 	db	27
   939  007A42  1E                 	db	30
   940  007A43  31                 	db	49
   941  007A44  34                 	db	52
   942  007A45  1F                 	db	31
   943  007A46  32                 	db	50
   944  007A47  35                 	db	53
   945  007A48  38                 	db	56
   946  007A49  17                 	db	23
   947  007A4A  1A                 	db	26
   948  007A4B  1D                 	db	29
   949  007A4C  30                 	db	48
   950  007A4D  1B                 	db	27
   951  007A4E  1E                 	db	30
   952  007A4F  31                 	db	49
   953  007A50  34                 	db	52
   954  007A51  13                 	db	19
   955  007A52  16                 	db	22
   956  007A53  19                 	db	25
   957  007A54  1C                 	db	28
   958  007A55  17                 	db	23
   959  007A56  1A                 	db	26
   960  007A57  1D                 	db	29
   961  007A58  30                 	db	48
   962  007A59  12                 	db	18
   963  007A5A  15                 	db	21
   964  007A5B  18                 	db	24
   965  007A5C  0F                 	db	15
   966  007A5D  13                 	db	19
   967  007A5E  16                 	db	22
   968  007A5F  19                 	db	25
   969  007A60  1C                 	db	28
   970  007A61  11                 	db	17
   971  007A62  14                 	db	20
   972  007A63  0B                 	db	11
   973  007A64  0E                 	db	14
   974  007A65  12                 	db	18
   975  007A66  15                 	db	21
   976  007A67  18                 	db	24
   977  007A68  0F                 	db	15
   978  007A69  10                 	db	16
   979  007A6A  07                 	db	7
   980  007A6B  0A                 	db	10
   981  007A6C  0D                 	db	13
   982  007A6D  11                 	db	17
   983  007A6E  14                 	db	20
   984  007A6F  0B                 	db	11
   985  007A70  0E                 	db	14
   986  007A71  03                 	db	3
   987  007A72  06                 	db	6
   988  007A73  09                 	db	9
   989  007A74  0C                 	db	12
   990  007A75  10                 	db	16
   991  007A76  07                 	db	7
   992  007A77  0A                 	db	10
   993  007A78  0D                 	db	13
   994  007A79  02                 	db	2
   995  007A7A  05                 	db	5
   996  007A7B  08                 	db	8
   997  007A7C  03                 	db	3
   998  007A7D  06                 	db	6
   999  007A7E  09                 	db	9
  1000  007A7F  0C                 	db	12
  1001  007A80  64                 	db	100
  1002  007A81  00                 	db	0
  1003  007A82  01                 	db	1
  1004  007A83  02                 	db	2
  1005  007A84  04                 	db	4
  1006  007A85  05                 	db	5
  1007  007A86  08                 	db	8
  1008  007A87  64                 	db	100
  1009  007A88  64                 	db	100
  1010  007A89                     __end_of_show4_3:
  1011                           	opt stack 0
  1012  007A89                     _show4_2:
  1013                           	opt stack 0
  1014  007A89  00                 	db	0
  1015  007A8A  01                 	db	1
  1016  007A8B  02                 	db	2
  1017  007A8C  04                 	db	4
  1018  007A8D  05                 	db	5
  1019  007A8E  08                 	db	8
  1020  007A8F  64                 	db	100
  1021  007A90  64                 	db	100
  1022  007A91  02                 	db	2
  1023  007A92  05                 	db	5
  1024  007A93  08                 	db	8
  1025  007A94  03                 	db	3
  1026  007A95  06                 	db	6
  1027  007A96  09                 	db	9
  1028  007A97  0C                 	db	12
  1029  007A98  64                 	db	100
  1030  007A99  03                 	db	3
  1031  007A9A  06                 	db	6
  1032  007A9B  09                 	db	9
  1033  007A9C  0C                 	db	12
  1034  007A9D  07                 	db	7
  1035  007A9E  0A                 	db	10
  1036  007A9F  0D                 	db	13
  1037  007AA0  20                 	db	32
  1038  007AA1  07                 	db	7
  1039  007AA2  0A                 	db	10
  1040  007AA3  0D                 	db	13
  1041  007AA4  20                 	db	32
  1042  007AA5  0B                 	db	11
  1043  007AA6  0E                 	db	14
  1044  007AA7  21                 	db	33
  1045  007AA8  24                 	db	36
  1046  007AA9  0B                 	db	11
  1047  007AAA  0E                 	db	14
  1048  007AAB  21                 	db	33
  1049  007AAC  24                 	db	36
  1050  007AAD  0F                 	db	15
  1051  007AAE  22                 	db	34
  1052  007AAF  25                 	db	37
  1053  007AB0  28                 	db	40
  1054  007AB1  0F                 	db	15
  1055  007AB2  22                 	db	34
  1056  007AB3  25                 	db	37
  1057  007AB4  28                 	db	40
  1058  007AB5  23                 	db	35
  1059  007AB6  26                 	db	38
  1060  007AB7  29                 	db	41
  1061  007AB8  2C                 	db	44
  1062  007AB9  23                 	db	35
  1063  007ABA  26                 	db	38
  1064  007ABB  29                 	db	41
  1065  007ABC  2C                 	db	44
  1066  007ABD  30                 	db	48
  1067  007ABE  27                 	db	39
  1068  007ABF  2A                 	db	42
  1069  007AC0  2D                 	db	45
  1070  007AC1  30                 	db	48
  1071  007AC2  27                 	db	39
  1072  007AC3  2A                 	db	42
  1073  007AC4  2D                 	db	45
  1074  007AC5  31                 	db	49
  1075  007AC6  34                 	db	52
  1076  007AC7  2B                 	db	43
  1077  007AC8  2E                 	db	46
  1078  007AC9  31                 	db	49
  1079  007ACA  34                 	db	52
  1080  007ACB  2B                 	db	43
  1081  007ACC  2E                 	db	46
  1082  007ACD  32                 	db	50
  1083  007ACE  35                 	db	53
  1084  007ACF  38                 	db	56
  1085  007AD0  2F                 	db	47
  1086  007AD1  32                 	db	50
  1087  007AD2  35                 	db	53
  1088  007AD3  38                 	db	56
  1089  007AD4  2F                 	db	47
  1090  007AD5  33                 	db	51
  1091  007AD6  36                 	db	54
  1092  007AD7  39                 	db	57
  1093  007AD8  3C                 	db	60
  1094  007AD9  33                 	db	51
  1095  007ADA  36                 	db	54
  1096  007ADB  39                 	db	57
  1097  007ADC  3C                 	db	60
  1098  007ADD  37                 	db	55
  1099  007ADE  3A                 	db	58
  1100  007ADF  3D                 	db	61
  1101  007AE0  64                 	db	100
  1102  007AE1  37                 	db	55
  1103  007AE2  3A                 	db	58
  1104  007AE3  3D                 	db	61
  1105  007AE4  3B                 	db	59
  1106  007AE5  3E                 	db	62
  1107  007AE6  3F                 	db	63
  1108  007AE7  64                 	db	100
  1109  007AE8  64                 	db	100
  1110  007AE9                     __end_of_show4_2:
  1111                           	opt stack 0
  1112  007AE9                     _show3_1:
  1113                           	opt stack 0
  1114  007AE9  00                 	db	0
  1115  007AEA  01                 	db	1
  1116  007AEB  02                 	db	2
  1117  007AEC  03                 	db	3
  1118  007AED  2F                 	db	47
  1119  007AEE  3C                 	db	60
  1120  007AEF  3D                 	db	61
  1121  007AF0  3E                 	db	62
  1122  007AF1  01                 	db	1
  1123  007AF2  02                 	db	2
  1124  007AF3  03                 	db	3
  1125  007AF4  10                 	db	16
  1126  007AF5  2E                 	db	46
  1127  007AF6  2F                 	db	47
  1128  007AF7  3C                 	db	60
  1129  007AF8  3D                 	db	61
  1130  007AF9  02                 	db	2
  1131  007AFA  03                 	db	3
  1132  007AFB  10                 	db	16
  1133  007AFC  11                 	db	17
  1134  007AFD  2D                 	db	45
  1135  007AFE  2E                 	db	46
  1136  007AFF  2F                 	db	47
  1137  007B00  3C                 	db	60
  1138  007B01  03                 	db	3
  1139  007B02  10                 	db	16
  1140  007B03  11                 	db	17
  1141  007B04  12                 	db	18
  1142  007B05  2C                 	db	44
  1143  007B06  2D                 	db	45
  1144  007B07  2E                 	db	46
  1145  007B08  2F                 	db	47
  1146  007B09  10                 	db	16
  1147  007B0A  11                 	db	17
  1148  007B0B  12                 	db	18
  1149  007B0C  16                 	db	22
  1150  007B0D  28                 	db	40
  1151  007B0E  2C                 	db	44
  1152  007B0F  2D                 	db	45
  1153  007B10  2E                 	db	46
  1154  007B11  11                 	db	17
  1155  007B12  12                 	db	18
  1156  007B13  16                 	db	22
  1157  007B14  1A                 	db	26
  1158  007B15  24                 	db	36
  1159  007B16  28                 	db	40
  1160  007B17  2C                 	db	44
  1161  007B18  2D                 	db	45
  1162  007B19  12                 	db	18
  1163  007B1A  16                 	db	22
  1164  007B1B  1A                 	db	26
  1165  007B1C  1E                 	db	30
  1166  007B1D  20                 	db	32
  1167  007B1E  24                 	db	36
  1168  007B1F  28                 	db	40
  1169  007B20  2C                 	db	44
  1170  007B21  16                 	db	22
  1171  007B22  1A                 	db	26
  1172  007B23  1E                 	db	30
  1173  007B24  32                 	db	50
  1174  007B25  0C                 	db	12
  1175  007B26  20                 	db	32
  1176  007B27  24                 	db	36
  1177  007B28  28                 	db	40
  1178  007B29  1A                 	db	26
  1179  007B2A  1E                 	db	30
  1180  007B2B  32                 	db	50
  1181  007B2C  36                 	db	54
  1182  007B2D  08                 	db	8
  1183  007B2E  0C                 	db	12
  1184  007B2F  20                 	db	32
  1185  007B30  24                 	db	36
  1186  007B31  1E                 	db	30
  1187  007B32  32                 	db	50
  1188  007B33  36                 	db	54
  1189  007B34  3A                 	db	58
  1190  007B35  04                 	db	4
  1191  007B36  08                 	db	8
  1192  007B37  0C                 	db	12
  1193  007B38  20                 	db	32
  1194  007B39                     __end_of_show3_1:
  1195                           	opt stack 0
  1196  007B39                     _show5:
  1197                           	opt stack 0
  1198  007B39  00                 	db	0
  1199  007B3A  01                 	db	1
  1200  007B3B  04                 	db	4
  1201  007B3C  05                 	db	5
  1202  007B3D  01                 	db	1
  1203  007B3E  02                 	db	2
  1204  007B3F  05                 	db	5
  1205  007B40  06                 	db	6
  1206  007B41  02                 	db	2
  1207  007B42  03                 	db	3
  1208  007B43  06                 	db	6
  1209  007B44  07                 	db	7
  1210  007B45  03                 	db	3
  1211  007B46  07                 	db	7
  1212  007B47  10                 	db	16
  1213  007B48  14                 	db	20
  1214  007B49  04                 	db	4
  1215  007B4A  05                 	db	5
  1216  007B4B  08                 	db	8
  1217  007B4C  09                 	db	9
  1218  007B4D  05                 	db	5
  1219  007B4E  06                 	db	6
  1220  007B4F  09                 	db	9
  1221  007B50  0A                 	db	10
  1222  007B51  06                 	db	6
  1223  007B52  07                 	db	7
  1224  007B53  0A                 	db	10
  1225  007B54  0B                 	db	11
  1226  007B55  07                 	db	7
  1227  007B56  0B                 	db	11
  1228  007B57  14                 	db	20
  1229  007B58  18                 	db	24
  1230  007B59  08                 	db	8
  1231  007B5A  09                 	db	9
  1232  007B5B  0C                 	db	12
  1233  007B5C  0D                 	db	13
  1234  007B5D  09                 	db	9
  1235  007B5E  0A                 	db	10
  1236  007B5F  0D                 	db	13
  1237  007B60  0E                 	db	14
  1238  007B61  0A                 	db	10
  1239  007B62  0B                 	db	11
  1240  007B63  0E                 	db	14
  1241  007B64  0F                 	db	15
  1242  007B65  0B                 	db	11
  1243  007B66  18                 	db	24
  1244  007B67  0F                 	db	15
  1245  007B68  1C                 	db	28
  1246  007B69  0C                 	db	12
  1247  007B6A  0D                 	db	13
  1248  007B6B  20                 	db	32
  1249  007B6C  21                 	db	33
  1250  007B6D  0D                 	db	13
  1251  007B6E  0E                 	db	14
  1252  007B6F  21                 	db	33
  1253  007B70  22                 	db	34
  1254  007B71  0E                 	db	14
  1255  007B72  0F                 	db	15
  1256  007B73  22                 	db	34
  1257  007B74  23                 	db	35
  1258  007B75  0F                 	db	15
  1259  007B76  1C                 	db	28
  1260  007B77  23                 	db	35
  1261  007B78  30                 	db	48
  1262  007B79                     __end_of_show5:
  1263                           	opt stack 0
  1264  007B79                     _show4_4:
  1265                           	opt stack 0
  1266  007B79  13                 	db	19
  1267  007B7A  2C                 	db	44
  1268  007B7B  64                 	db	100
  1269  007B7C  64                 	db	100
  1270  007B7D  64                 	db	100
  1271  007B7E  64                 	db	100
  1272  007B7F  64                 	db	100
  1273  007B80  64                 	db	100
  1274  007B81  12                 	db	18
  1275  007B82  17                 	db	23
  1276  007B83  28                 	db	40
  1277  007B84  2D                 	db	45
  1278  007B85  64                 	db	100
  1279  007B86  64                 	db	100
  1280  007B87  64                 	db	100
  1281  007B88  64                 	db	100
  1282  007B89  11                 	db	17
  1283  007B8A  16                 	db	22
  1284  007B8B  1B                 	db	27
  1285  007B8C  24                 	db	36
  1286  007B8D  29                 	db	41
  1287  007B8E  2E                 	db	46
  1288  007B8F  64                 	db	100
  1289  007B90  64                 	db	100
  1290  007B91  10                 	db	16
  1291  007B92  15                 	db	21
  1292  007B93  1A                 	db	26
  1293  007B94  1F                 	db	31
  1294  007B95  20                 	db	32
  1295  007B96  25                 	db	37
  1296  007B97  2A                 	db	42
  1297  007B98  2F                 	db	47
  1298  007B99  03                 	db	3
  1299  007B9A  14                 	db	20
  1300  007B9B  19                 	db	25
  1301  007B9C  1E                 	db	30
  1302  007B9D  21                 	db	33
  1303  007B9E  26                 	db	38
  1304  007B9F  2B                 	db	43
  1305  007BA0  0C                 	db	12
  1306  007BA1  02                 	db	2
  1307  007BA2  07                 	db	7
  1308  007BA3  18                 	db	24
  1309  007BA4  1D                 	db	29
  1310  007BA5  08                 	db	8
  1311  007BA6  0D                 	db	13
  1312  007BA7  22                 	db	34
  1313  007BA8  27                 	db	39
  1314  007BA9  01                 	db	1
  1315  007BAA  06                 	db	6
  1316  007BAB  0B                 	db	11
  1317  007BAC  1C                 	db	28
  1318  007BAD  04                 	db	4
  1319  007BAE  09                 	db	9
  1320  007BAF  0E                 	db	14
  1321  007BB0  23                 	db	35
  1322  007BB1  00                 	db	0
  1323  007BB2  05                 	db	5
  1324  007BB3  0A                 	db	10
  1325  007BB4  0F                 	db	15
  1326  007BB5  64                 	db	100
  1327  007BB6  64                 	db	100
  1328  007BB7  64                 	db	100
  1329  007BB8  64                 	db	100
  1330  007BB9                     __end_of_show4_4:
  1331                           	opt stack 0
  1332  007BB9                     _show4_1:
  1333                           	opt stack 0
  1334  007BB9  13                 	db	19
  1335  007BBA  2C                 	db	44
  1336  007BBB  64                 	db	100
  1337  007BBC  64                 	db	100
  1338  007BBD  64                 	db	100
  1339  007BBE  64                 	db	100
  1340  007BBF  64                 	db	100
  1341  007BC0  64                 	db	100
  1342  007BC1  12                 	db	18
  1343  007BC2  17                 	db	23
  1344  007BC3  28                 	db	40
  1345  007BC4  2D                 	db	45
  1346  007BC5  64                 	db	100
  1347  007BC6  64                 	db	100
  1348  007BC7  64                 	db	100
  1349  007BC8  64                 	db	100
  1350  007BC9  11                 	db	17
  1351  007BCA  16                 	db	22
  1352  007BCB  1B                 	db	27
  1353  007BCC  24                 	db	36
  1354  007BCD  29                 	db	41
  1355  007BCE  2E                 	db	46
  1356  007BCF  64                 	db	100
  1357  007BD0  64                 	db	100
  1358  007BD1  10                 	db	16
  1359  007BD2  15                 	db	21
  1360  007BD3  1A                 	db	26
  1361  007BD4  1F                 	db	31
  1362  007BD5  20                 	db	32
  1363  007BD6  25                 	db	37
  1364  007BD7  2A                 	db	42
  1365  007BD8  2F                 	db	47
  1366  007BD9  14                 	db	20
  1367  007BDA  19                 	db	25
  1368  007BDB  1E                 	db	30
  1369  007BDC  33                 	db	51
  1370  007BDD  21                 	db	33
  1371  007BDE  26                 	db	38
  1372  007BDF  2B                 	db	43
  1373  007BE0  3C                 	db	60
  1374  007BE1  18                 	db	24
  1375  007BE2  1D                 	db	29
  1376  007BE3  32                 	db	50
  1377  007BE4  37                 	db	55
  1378  007BE5  22                 	db	34
  1379  007BE6  27                 	db	39
  1380  007BE7  38                 	db	56
  1381  007BE8  3D                 	db	61
  1382  007BE9  1C                 	db	28
  1383  007BEA  31                 	db	49
  1384  007BEB  36                 	db	54
  1385  007BEC  3B                 	db	59
  1386  007BED  23                 	db	35
  1387  007BEE  34                 	db	52
  1388  007BEF  39                 	db	57
  1389  007BF0  3E                 	db	62
  1390  007BF1  30                 	db	48
  1391  007BF2  35                 	db	53
  1392  007BF3  3A                 	db	58
  1393  007BF4  3F                 	db	63
  1394  007BF5  64                 	db	100
  1395  007BF6  64                 	db	100
  1396  007BF7  64                 	db	100
  1397  007BF8  64                 	db	100
  1398  007BF9                     __end_of_show4_1:
  1399                           	opt stack 0
  1400  007BF9                     _Buttons:
  1401                           	opt stack 0
  1402  007BF9  00                 	db	0
  1403  007BFA  01                 	db	1
  1404  007BFB  02                 	db	2
  1405  007BFC  03                 	db	3
  1406  007BFD  10                 	db	16
  1407  007BFE  11                 	db	17
  1408  007BFF  12                 	db	18
  1409  007C00  13                 	db	19
  1410  007C01  04                 	db	4
  1411  007C02  05                 	db	5
  1412  007C03  06                 	db	6
  1413  007C04  07                 	db	7
  1414  007C05  14                 	db	20
  1415  007C06  15                 	db	21
  1416  007C07  16                 	db	22
  1417  007C08  17                 	db	23
  1418  007C09  08                 	db	8
  1419  007C0A  09                 	db	9
  1420  007C0B  0A                 	db	10
  1421  007C0C  0B                 	db	11
  1422  007C0D  18                 	db	24
  1423  007C0E  19                 	db	25
  1424  007C0F  1A                 	db	26
  1425  007C10  1B                 	db	27
  1426  007C11  0C                 	db	12
  1427  007C12  0D                 	db	13
  1428  007C13  0E                 	db	14
  1429  007C14  0F                 	db	15
  1430  007C15  1C                 	db	28
  1431  007C16  1D                 	db	29
  1432  007C17  1E                 	db	30
  1433  007C18  1F                 	db	31
  1434  007C19  20                 	db	32
  1435  007C1A  21                 	db	33
  1436  007C1B  22                 	db	34
  1437  007C1C  23                 	db	35
  1438  007C1D  30                 	db	48
  1439  007C1E  31                 	db	49
  1440  007C1F  32                 	db	50
  1441  007C20  33                 	db	51
  1442  007C21  24                 	db	36
  1443  007C22  25                 	db	37
  1444  007C23  26                 	db	38
  1445  007C24  27                 	db	39
  1446  007C25  34                 	db	52
  1447  007C26  35                 	db	53
  1448  007C27  36                 	db	54
  1449  007C28  37                 	db	55
  1450  007C29  28                 	db	40
  1451  007C2A  29                 	db	41
  1452  007C2B  2A                 	db	42
  1453  007C2C  2B                 	db	43
  1454  007C2D  38                 	db	56
  1455  007C2E  39                 	db	57
  1456  007C2F  3A                 	db	58
  1457  007C30  3B                 	db	59
  1458  007C31  2C                 	db	44
  1459  007C32  2D                 	db	45
  1460  007C33  2E                 	db	46
  1461  007C34  2F                 	db	47
  1462  007C35  3C                 	db	60
  1463  007C36  3D                 	db	61
  1464  007C37  3E                 	db	62
  1465  007C38  3F                 	db	63
  1466  007C39                     __end_of_Buttons:
  1467                           	opt stack 0
  1468  007C39                     _show3_2:
  1469                           	opt stack 0
  1470  007C39  05                 	db	5
  1471  007C3A  06                 	db	6
  1472  007C3B  07                 	db	7
  1473  007C3C  2B                 	db	43
  1474  007C3D  38                 	db	56
  1475  007C3E  39                 	db	57
  1476  007C3F  06                 	db	6
  1477  007C40  07                 	db	7
  1478  007C41  14                 	db	20
  1479  007C42  2A                 	db	42
  1480  007C43  2B                 	db	43
  1481  007C44  38                 	db	56
  1482  007C45  07                 	db	7
  1483  007C46  14                 	db	20
  1484  007C47  15                 	db	21
  1485  007C48  29                 	db	41
  1486  007C49  2A                 	db	42
  1487  007C4A  2B                 	db	43
  1488  007C4B  14                 	db	20
  1489  007C4C  15                 	db	21
  1490  007C4D  19                 	db	25
  1491  007C4E  25                 	db	37
  1492  007C4F  29                 	db	41
  1493  007C50  2A                 	db	42
  1494  007C51  15                 	db	21
  1495  007C52  19                 	db	25
  1496  007C53  1D                 	db	29
  1497  007C54  21                 	db	33
  1498  007C55  25                 	db	37
  1499  007C56  29                 	db	41
  1500  007C57  19                 	db	25
  1501  007C58  1D                 	db	29
  1502  007C59  31                 	db	49
  1503  007C5A  0D                 	db	13
  1504  007C5B  21                 	db	33
  1505  007C5C  25                 	db	37
  1506  007C5D  1D                 	db	29
  1507  007C5E  31                 	db	49
  1508  007C5F  35                 	db	53
  1509  007C60  09                 	db	9
  1510  007C61  0D                 	db	13
  1511  007C62  21                 	db	33
  1512  007C63                     __end_of_show3_2:
  1513                           	opt stack 0
  1514  007C63                     _show0_2:
  1515                           	opt stack 0
  1516  007C63  00                 	db	0
  1517  007C64  04                 	db	4
  1518  007C65  08                 	db	8
  1519  007C66  0C                 	db	12
  1520  007C67  20                 	db	32
  1521  007C68  24                 	db	36
  1522  007C69  28                 	db	40
  1523  007C6A  2C                 	db	44
  1524  007C6B  29                 	db	41
  1525  007C6C  25                 	db	37
  1526  007C6D  21                 	db	33
  1527  007C6E  0D                 	db	13
  1528  007C6F  09                 	db	9
  1529  007C70  05                 	db	5
  1530  007C71  0A                 	db	10
  1531  007C72  0E                 	db	14
  1532  007C73  22                 	db	34
  1533  007C74  26                 	db	38
  1534  007C75  23                 	db	35
  1535  007C76  0F                 	db	15
  1536  007C77  1C                 	db	28
  1537  007C78  30                 	db	48
  1538  007C79  35                 	db	53
  1539  007C7A  31                 	db	49
  1540  007C7B  1D                 	db	29
  1541  007C7C  19                 	db	25
  1542  007C7D  16                 	db	22
  1543  007C7E  1A                 	db	26
  1544  007C7F  1E                 	db	30
  1545  007C80  32                 	db	50
  1546  007C81  36                 	db	54
  1547  007C82  3A                 	db	58
  1548  007C83  3F                 	db	63
  1549  007C84  3B                 	db	59
  1550  007C85  37                 	db	55
  1551  007C86  33                 	db	51
  1552  007C87  1F                 	db	31
  1553  007C88  1B                 	db	27
  1554  007C89  17                 	db	23
  1555  007C8A  13                 	db	19
  1556  007C8B                     __end_of_show0_2:
  1557                           	opt stack 0
  1558  007C8B                     _show0_1:
  1559                           	opt stack 0
  1560  007C8B  00                 	db	0
  1561  007C8C  01                 	db	1
  1562  007C8D  02                 	db	2
  1563  007C8E  03                 	db	3
  1564  007C8F  10                 	db	16
  1565  007C90  11                 	db	17
  1566  007C91  12                 	db	18
  1567  007C92  13                 	db	19
  1568  007C93  16                 	db	22
  1569  007C94  15                 	db	21
  1570  007C95  14                 	db	20
  1571  007C96  07                 	db	7
  1572  007C97  06                 	db	6
  1573  007C98  05                 	db	5
  1574  007C99  0A                 	db	10
  1575  007C9A  0B                 	db	11
  1576  007C9B  18                 	db	24
  1577  007C9C  19                 	db	25
  1578  007C9D  1C                 	db	28
  1579  007C9E  0F                 	db	15
  1580  007C9F  23                 	db	35
  1581  007CA0  30                 	db	48
  1582  007CA1  35                 	db	53
  1583  007CA2  34                 	db	52
  1584  007CA3  27                 	db	39
  1585  007CA4  26                 	db	38
  1586  007CA5  29                 	db	41
  1587  007CA6  2A                 	db	42
  1588  007CA7  2B                 	db	43
  1589  007CA8  38                 	db	56
  1590  007CA9  39                 	db	57
  1591  007CAA  3A                 	db	58
  1592  007CAB  3F                 	db	63
  1593  007CAC  3E                 	db	62
  1594  007CAD  3D                 	db	61
  1595  007CAE  3C                 	db	60
  1596  007CAF  2F                 	db	47
  1597  007CB0  2E                 	db	46
  1598  007CB1  2D                 	db	45
  1599  007CB2  2C                 	db	44
  1600  007CB3                     __end_of_show0_1:
  1601                           	opt stack 0
  1602  007CB3                     _horizental_flash:
  1603                           	opt stack 0
  1604  007CB3  00                 	db	0
  1605  007CB4  01                 	db	1
  1606  007CB5  02                 	db	2
  1607  007CB6  01                 	db	1
  1608  007CB7  02                 	db	2
  1609  007CB8  03                 	db	3
  1610  007CB9  02                 	db	2
  1611  007CBA  03                 	db	3
  1612  007CBB  10                 	db	16
  1613  007CBC  03                 	db	3
  1614  007CBD  10                 	db	16
  1615  007CBE  11                 	db	17
  1616  007CBF  10                 	db	16
  1617  007CC0  11                 	db	17
  1618  007CC1  12                 	db	18
  1619  007CC2  11                 	db	17
  1620  007CC3  12                 	db	18
  1621  007CC4  13                 	db	19
  1622  007CC5  12                 	db	18
  1623  007CC6  13                 	db	19
  1624  007CC7  64                 	db	100
  1625  007CC8  13                 	db	19
  1626  007CC9  64                 	db	100
  1627  007CCA  64                 	db	100
  1628  007CCB                     __end_of_horizental_flash:
  1629                           	opt stack 0
  1630  007CCB                     _show3_3:
  1631                           	opt stack 0
  1632  007CCB  0A                 	db	10
  1633  007CCC  0B                 	db	11
  1634  007CCD  27                 	db	39
  1635  007CCE  34                 	db	52
  1636  007CCF  0B                 	db	11
  1637  007CD0  18                 	db	24
  1638  007CD1  26                 	db	38
  1639  007CD2  27                 	db	39
  1640  007CD3  18                 	db	24
  1641  007CD4  1C                 	db	28
  1642  007CD5  22                 	db	34
  1643  007CD6  26                 	db	38
  1644  007CD7  1C                 	db	28
  1645  007CD8  30                 	db	48
  1646  007CD9  0E                 	db	14
  1647  007CDA  22                 	db	34
  1648  007CDB  0A                 	db	10
  1649  007CDC  0E                 	db	14
  1650  007CDD  30                 	db	48
  1651  007CDE  34                 	db	52
  1652  007CDF                     __end_of_show3_3:
  1653                           	opt stack 0
  1654  007CDF                     _buttonLUT:
  1655                           	opt stack 0
  1656  007CDF  07                 	db	7
  1657  007CE0  04                 	db	4
  1658  007CE1  02                 	db	2
  1659  007CE2  22                 	db	34
  1660  007CE3  05                 	db	5
  1661  007CE4  06                 	db	6
  1662  007CE5  00                 	db	0
  1663  007CE6  01                 	db	1
  1664  007CE7  03                 	db	3
  1665  007CE8  10                 	db	16
  1666  007CE9  30                 	db	48
  1667  007CEA  21                 	db	33
  1668  007CEB  13                 	db	19
  1669  007CEC  12                 	db	18
  1670  007CED  11                 	db	17
  1671  007CEE  31                 	db	49
  1672  007CEF                     __end_of_buttonLUT:
  1673                           	opt stack 0
  1674  007CEF                     _ledLUT:
  1675                           	opt stack 0
  1676  007CEF  3A                 	db	58
  1677  007CF0  37                 	db	55
  1678  007CF1  35                 	db	53
  1679  007CF2  34                 	db	52
  1680  007CF3  28                 	db	40
  1681  007CF4  29                 	db	41
  1682  007CF5  23                 	db	35
  1683  007CF6  24                 	db	36
  1684  007CF7  16                 	db	22
  1685  007CF8  1B                 	db	27
  1686  007CF9  11                 	db	17
  1687  007CFA  10                 	db	16
  1688  007CFB  0E                 	db	14
  1689  007CFC  0D                 	db	13
  1690  007CFD  0C                 	db	12
  1691  007CFE  02                 	db	2
  1692  007CFF                     __end_of_ledLUT:
  1693                           	opt stack 0
  1694  0000                     _TRISCbits	set	3988
  1695  0000                     _RCONbits	set	4048
  1696  0000                     _IPR1bits	set	3999
  1697  0000                     _PIE1bits	set	3997
  1698  0000                     _PIR2bits	set	4001
  1699  0000                     _SSPSTAT	set	4039
  1700  0000                     _PIR1bits	set	3998
  1701  0000                     _SSPSTATbits	set	4039
  1702  0000                     _SSPCON2	set	4037
  1703  0000                     _SSPCON1	set	4038
  1704  0000                     _SSPCON2bits	set	4037
  1705  0000                     _SSPADD	set	4040
  1706  0000                     _OSCCONbits	set	4051
  1707  0000                     _SSPCON1bits	set	4038
  1708  0000                     _SSPBUF	set	4041
  1709  0000                     _INTCONbits	set	4082
  1710                           
  1711                           ; #config settings
  1712  007CFF  00                 	db	0	; dummy byte at the end
  1713  0000                     
  1714                           	psect	cinit
  1715  004686                     __pcinit:
  1716                           	opt stack 0
  1717  004686                     start_initialization:
  1718                           	opt stack 0
  1719  004686                     __initialization:
  1720                           	opt stack 0
  1721                           
  1722                           ; Clear objects allocated to BANK0 (116 bytes)
  1723  004686  EE00  F080         	lfsr	0,__pbssBANK0
  1724  00468A  0E74               	movlw	116
  1725  00468C                     clear_0:
  1726  00468C  6AEE               	clrf	postinc0,c
  1727  00468E  06E8               	decf	wreg,f,c
  1728  004690  E1FD               	bnz	clear_0
  1729                           
  1730                           ; Clear objects allocated to COMRAM (66 bytes)
  1731  004692  EE00  F001         	lfsr	0,__pbssCOMRAM
  1732  004696  0E42               	movlw	66
  1733  004698                     clear_1:
  1734  004698  6AEE               	clrf	postinc0,c
  1735  00469A  06E8               	decf	wreg,f,c
  1736  00469C  E1FD               	bnz	clear_1
  1737  00469E                     end_of_initialization:
  1738                           	opt stack 0
  1739  00469E                     __end_of__initialization:
  1740                           	opt stack 0
  1741  00469E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1742  0046A0  6EF8               	movwf	tblptru,c
  1743  0046A2  0100               	movlb	0
  1744  0046A4  EF46  F034         	goto	_main	;jump to C main() function
  1745                           tblptru	equ	0xFF8
  1746                           postinc0	equ	0xFEE
  1747                           wreg	equ	0xFE8
  1748                           
  1749                           	psect	bssCOMRAM
  1750  000001                     __pbssCOMRAM:
  1751                           	opt stack 0
  1752  000001                     _temp:
  1753                           	opt stack 0
  1754  000001                     	ds	64
  1755  000041                     _count:
  1756                           	opt stack 0
  1757  000041                     	ds	2
  1758                           tblptru	equ	0xFF8
  1759                           postinc0	equ	0xFEE
  1760                           wreg	equ	0xFE8
  1761                           
  1762                           	psect	bssBANK0
  1763  000080                     __pbssBANK0:
  1764                           	opt stack 0
  1765  000080                     _matrices:
  1766                           	opt stack 0
  1767  000080                     	ds	116
  1768                           tblptru	equ	0xFF8
  1769                           postinc0	equ	0xFEE
  1770                           wreg	equ	0xFE8
  1771                           
  1772                           	psect	cstackCOMRAM
  1773  000043                     __pcstackCOMRAM:
  1774                           	opt stack 0
  1775  000043                     ??_MyIdleI2C:
  1776  000043                     ?___wmul:
  1777                           	opt stack 0
  1778  000043                     ?___awdiv:
  1779                           	opt stack 0
  1780  000043                     MyOpenI2C@slew:
  1781                           	opt stack 0
  1782  000043                     ___wmul@multiplier:
  1783                           	opt stack 0
  1784  000043                     ___awdiv@dividend:
  1785                           	opt stack 0
  1786                           
  1787                           ; 2 bytes @ 0x0
  1788  000043                     	ds	1
  1789  000044                     MyWriteI2C@data_out:
  1790                           	opt stack 0
  1791  000044                     MyOpenI2C@sync_mode:
  1792                           	opt stack 0
  1793                           
  1794                           ; 1 bytes @ 0x1
  1795  000044                     	ds	1
  1796  000045                     write@data:
  1797                           	opt stack 0
  1798  000045                     ___wmul@multiplicand:
  1799                           	opt stack 0
  1800  000045                     ___awdiv@divisor:
  1801                           	opt stack 0
  1802                           
  1803                           ; 2 bytes @ 0x2
  1804  000045                     	ds	1
  1805  000046                     write@data_out:
  1806                           	opt stack 0
  1807                           
  1808                           ; 1 bytes @ 0x3
  1809  000046                     	ds	1
  1810  000047                     ___awdiv@counter:
  1811                           	opt stack 0
  1812  000047                     write@status:
  1813                           	opt stack 0
  1814  000047                     ___wmul@product:
  1815                           	opt stack 0
  1816                           
  1817                           ; 2 bytes @ 0x4
  1818  000047                     	ds	1
  1819  000048                     ___awdiv@sign:
  1820                           	opt stack 0
  1821                           
  1822                           ; 1 bytes @ 0x5
  1823  000048                     	ds	1
  1824  000049                     ??_set_led:
  1825  000049                     ??_write_display:
  1826  000049                     ??_clr_led:
  1827  000049                     ??_is_key_pressed:
  1828  000049                     ??_was_key_pressed:
  1829  000049                     MygetsI2C@rdptr:
  1830                           	opt stack 0
  1831  000049                     ___awdiv@quotient:
  1832                           	opt stack 0
  1833  000049                     memcpy@d1:
  1834                           	opt stack 0
  1835                           
  1836                           ; 2 bytes @ 0x6
  1837  000049                     	ds	2
  1838  00004B                     MygetsI2C@length:
  1839                           	opt stack 0
  1840  00004B                     memcpy@s1:
  1841                           	opt stack 0
  1842                           
  1843                           ; 2 bytes @ 0x8
  1844  00004B                     	ds	1
  1845  00004C                     
  1846                           ; 1 bytes @ 0x9
  1847  00004C                     	ds	1
  1848  00004D                     memcpy@n:
  1849                           	opt stack 0
  1850                           
  1851                           ; 2 bytes @ 0xA
  1852  00004D                     	ds	2
  1853  00004F                     write_display@j:
  1854                           	opt stack 0
  1855  00004F                     memcpy@d:
  1856                           	opt stack 0
  1857                           
  1858                           ; 2 bytes @ 0xC
  1859  00004F                     	ds	2
  1860  000051                     write_display@i:
  1861                           	opt stack 0
  1862  000051                     set_led@matrix:
  1863                           	opt stack 0
  1864  000051                     is_key_pressed@matrix:
  1865                           	opt stack 0
  1866  000051                     was_key_pressed@matrix:
  1867                           	opt stack 0
  1868  000051                     memcpy@s:
  1869                           	opt stack 0
  1870                           
  1871                           ; 2 bytes @ 0xE
  1872  000051                     	ds	2
  1873  000053                     memcpy@tmp:
  1874                           	opt stack 0
  1875  000053                     clr_led@matrix:
  1876                           	opt stack 0
  1877  000053                     set_led@led:
  1878                           	opt stack 0
  1879  000053                     is_key_pressed@led:
  1880                           	opt stack 0
  1881  000053                     was_key_pressed@led:
  1882                           	opt stack 0
  1883                           
  1884                           ; 2 bytes @ 0x10
  1885  000053                     	ds	1
  1886  000054                     ??_read_switch:
  1887                           
  1888                           ; 1 bytes @ 0x11
  1889  000054                     	ds	1
  1890  000055                     set_led@i:
  1891                           	opt stack 0
  1892  000055                     is_key_pressed@k:
  1893                           	opt stack 0
  1894  000055                     was_key_pressed@k:
  1895                           	opt stack 0
  1896  000055                     clr_led@led:
  1897                           	opt stack 0
  1898                           
  1899                           ; 2 bytes @ 0x12
  1900  000055                     	ds	2
  1901  000057                     clr_led@i:
  1902                           	opt stack 0
  1903                           
  1904                           ; 1 bytes @ 0x14
  1905  000057                     	ds	1
  1906  000058                     ??_animation3:
  1907  000058                     ??_animation7:
  1908  000058                     animation0@n:
  1909                           	opt stack 0
  1910  000058                     animation1@n:
  1911                           	opt stack 0
  1912  000058                     animation2@n:
  1913                           	opt stack 0
  1914  000058                     animation4@h:
  1915                           	opt stack 0
  1916  000058                     animation5@n:
  1917                           	opt stack 0
  1918  000058                     animation6@n:
  1919                           	opt stack 0
  1920                           
  1921                           ; 1 bytes @ 0x15
  1922  000058                     	ds	1
  1923  000059                     ??_animation0:
  1924  000059                     ??_animation1:
  1925  000059                     ??_animation4:
  1926  000059                     ??_animation6:
  1927  000059                     animation2@h:
  1928                           	opt stack 0
  1929  000059                     animation5@h:
  1930                           	opt stack 0
  1931                           
  1932                           ; 1 bytes @ 0x16
  1933  000059                     	ds	1
  1934  00005A                     ??_animation2:
  1935  00005A                     ??_animation5:
  1936  00005A                     animation7@h:
  1937                           	opt stack 0
  1938                           
  1939                           ; 1 bytes @ 0x17
  1940  00005A                     	ds	1
  1941  00005B                     animation4@m:
  1942                           	opt stack 0
  1943  00005B                     animation7@i:
  1944                           	opt stack 0
  1945                           
  1946                           ; 2 bytes @ 0x18
  1947  00005B                     	ds	1
  1948  00005C                     animation1@m:
  1949                           	opt stack 0
  1950  00005C                     animation3@m:
  1951                           	opt stack 0
  1952  00005C                     animation4@i:
  1953                           	opt stack 0
  1954  00005C                     animation5@m:
  1955                           	opt stack 0
  1956                           
  1957                           ; 1 bytes @ 0x19
  1958  00005C                     	ds	1
  1959  00005D                     animation1@x:
  1960                           	opt stack 0
  1961  00005D                     animation4@j:
  1962                           	opt stack 0
  1963  00005D                     animation5@j:
  1964                           	opt stack 0
  1965  00005D                     animation6@x:
  1966                           	opt stack 0
  1967  00005D                     animation3@i:
  1968                           	opt stack 0
  1969  00005D                     animation7@j:
  1970                           	opt stack 0
  1971                           
  1972                           ; 2 bytes @ 0x1A
  1973  00005D                     	ds	1
  1974  00005E                     animation0@m:
  1975                           	opt stack 0
  1976  00005E                     animation1@i:
  1977                           	opt stack 0
  1978  00005E                     animation5@i:
  1979                           	opt stack 0
  1980  00005E                     animation2@col:
  1981                           	opt stack 0
  1982  00005E                     animation6@a:
  1983                           	opt stack 0
  1984  00005E                     read_switch@i:
  1985                           	opt stack 0
  1986                           
  1987                           ; 2 bytes @ 0x1B
  1988  00005E                     	ds	1
  1989  00005F                     animation0@j:
  1990                           	opt stack 0
  1991  00005F                     animation1@j:
  1992                           	opt stack 0
  1993  00005F                     animation5@x:
  1994                           	opt stack 0
  1995  00005F                     animation3@j:
  1996                           	opt stack 0
  1997                           
  1998                           ; 2 bytes @ 0x1C
  1999  00005F                     	ds	1
  2000  000060                     animation0@i:
  2001                           	opt stack 0
  2002  000060                     animation2@m:
  2003                           	opt stack 0
  2004  000060                     animation6@b:
  2005                           	opt stack 0
  2006  000060                     read_switch@j:
  2007                           	opt stack 0
  2008                           
  2009                           ; 2 bytes @ 0x1D
  2010  000060                     	ds	1
  2011  000061                     animation2@row:
  2012                           	opt stack 0
  2013                           
  2014                           ; 2 bytes @ 0x1E
  2015  000061                     	ds	1
  2016  000062                     animation6@c:
  2017                           	opt stack 0
  2018                           
  2019                           ; 2 bytes @ 0x1F
  2020  000062                     	ds	1
  2021  000063                     animation2@x:
  2022                           	opt stack 0
  2023                           
  2024                           ; 2 bytes @ 0x20
  2025  000063                     	ds	1
  2026  000064                     animation6@d:
  2027                           	opt stack 0
  2028                           
  2029                           ; 2 bytes @ 0x21
  2030  000064                     	ds	1
  2031  000065                     animation2@i:
  2032                           	opt stack 0
  2033                           
  2034                           ; 2 bytes @ 0x22
  2035  000065                     	ds	1
  2036  000066                     animation6@m:
  2037                           	opt stack 0
  2038                           
  2039                           ; 1 bytes @ 0x23
  2040  000066                     	ds	1
  2041  000067                     animation2@j:
  2042                           	opt stack 0
  2043                           
  2044                           ; 2 bytes @ 0x24
  2045  000067                     	ds	2
  2046  000069                     ??_main:
  2047                           
  2048                           ; 1 bytes @ 0x26
  2049  000069                     	ds	4
  2050  00006D                     main@sync_mode:
  2051                           	opt stack 0
  2052                           
  2053                           ; 1 bytes @ 0x2A
  2054  00006D                     	ds	1
  2055  00006E                     main@slew:
  2056                           	opt stack 0
  2057                           
  2058                           ; 1 bytes @ 0x2B
  2059  00006E                     	ds	1
  2060  00006F                     main@n:
  2061                           	opt stack 0
  2062                           
  2063                           ; 1 bytes @ 0x2C
  2064  00006F                     	ds	1
  2065  000070                     main@rightbutton:
  2066                           	opt stack 0
  2067                           
  2068                           ; 1 bytes @ 0x2D
  2069  000070                     	ds	1
  2070  000071                     main@column:
  2071                           	opt stack 0
  2072                           
  2073                           ; 1 bytes @ 0x2E
  2074  000071                     	ds	1
  2075  000072                     main@m:
  2076                           	opt stack 0
  2077                           
  2078                           ; 1 bytes @ 0x2F
  2079  000072                     	ds	1
  2080  000073                     main@j:
  2081                           	opt stack 0
  2082                           
  2083                           ; 2 bytes @ 0x30
  2084  000073                     	ds	2
  2085  000075                     main@h:
  2086                           	opt stack 0
  2087                           
  2088                           ; 1 bytes @ 0x32
  2089  000075                     	ds	1
  2090  000076                     main@i:
  2091                           	opt stack 0
  2092                           
  2093                           ; 2 bytes @ 0x33
  2094  000076                     	ds	2
  2095                           tblptru	equ	0xFF8
  2096                           postinc0	equ	0xFEE
  2097                           wreg	equ	0xFE8
  2098                           
  2099 ;;
  2100 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2101 ;;
  2102 ;; *************** function _main *****************
  2103 ;; Defined at:
  2104 ;;		line 393 in file "newmain.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;		None
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  data_buffer     8    0        unsigned char [8]
  2109 ;;  i               2   51[COMRAM] int 
  2110 ;;  j               2   48[COMRAM] int 
  2111 ;;  h               1   50[COMRAM] unsigned char 
  2112 ;;  m               1   47[COMRAM] unsigned char 
  2113 ;;  column          1   46[COMRAM] unsigned char 
  2114 ;;  rightbutton     1   45[COMRAM] unsigned char 
  2115 ;;  n               1   44[COMRAM] unsigned char 
  2116 ;;  slew            1   43[COMRAM] unsigned char 
  2117 ;;  sync_mode       1   42[COMRAM] unsigned char 
  2118 ;;  status          1    0        unsigned char 
  2119 ;;  data            1    0        unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2129 ;;      Params:         0       0       0       0       0       0       0
  2130 ;;      Locals:        11       0       0       0       0       0       0
  2131 ;;      Temps:          4       0       0       0       0       0       0
  2132 ;;      Totals:        15       0       0       0       0       0       0
  2133 ;;Total ram usage:       15 bytes
  2134 ;; Hardware stack levels required when called:    5
  2135 ;; This function calls:
  2136 ;;		_MyCloseI2C
  2137 ;;		_MyIdleI2C
  2138 ;;		_MyOpenI2C
  2139 ;;		_MyStartI2C
  2140 ;;		_MyStopI2C
  2141 ;;		___awdiv
  2142 ;;		___wmul
  2143 ;;		_animation0
  2144 ;;		_animation1
  2145 ;;		_animation2
  2146 ;;		_animation3
  2147 ;;		_animation4
  2148 ;;		_animation5
  2149 ;;		_animation6
  2150 ;;		_animation7
  2151 ;;		_clr_led
  2152 ;;		_is_key_pressed
  2153 ;;		_read_switch
  2154 ;;		_set_led
  2155 ;;		_was_key_pressed
  2156 ;;		_write
  2157 ;;		_write_display
  2158 ;; This function is called by:
  2159 ;;		Startup code after reset
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           	psect	text0
  2164  00688C                     __ptext0:
  2165                           	opt stack 0
  2166  00688C                     _main:
  2167                           	opt stack 26
  2168                           
  2169                           ;newmain.c: 395: unsigned char sync_mode=0, slew=0,data,status,data_buffer[8];
  2170                           
  2171                           ;incstack = 0
  2172  00688C  0E00               	movlw	0
  2173  00688E  6E6D               	movwf	main@sync_mode,c
  2174  006890  0E00               	movlw	0
  2175  006892  6E6E               	movwf	main@slew,c
  2176                           
  2177                           ;newmain.c: 396: int i,j;
  2178                           ;newmain.c: 397: matrices[0].address= 0x70<<1;
  2179  006894  0EE0               	movlw	224
  2180  006896  0100               	movlb	0	; () banked
  2181  006898  6F80               	movwf	_matrices& (0+255),b
  2182                           
  2183                           ;newmain.c: 398: matrices[1].address= 0x71<<1;
  2184  00689A  0EE2               	movlw	226
  2185  00689C  6F9D               	movwf	(_matrices+29)& (0+255),b
  2186                           
  2187                           ;newmain.c: 399: matrices[2].address= 0x72<<1;
  2188  00689E  0EE4               	movlw	228
  2189  0068A0  6FBA               	movwf	(_matrices+58)& (0+255),b
  2190                           
  2191                           ;newmain.c: 400: matrices[3].address= 0x73<<1;
  2192  0068A2  0EE6               	movlw	230
  2193  0068A4  6FD7               	movwf	(_matrices+87)& (0+255),b
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;newmain.c: 402: MyCloseI2C();
  2197  0068A6  EC14  F023         	call	_MyCloseI2C	;wreg free
  2198                           
  2199                           ;newmain.c: 404: sync_mode = 0b00001000;
  2200  0068AA  0E08               	movlw	8
  2201  0068AC  6E6D               	movwf	main@sync_mode,c
  2202                           
  2203                           ;newmain.c: 405: slew = 0b10000000;
  2204  0068AE  0E80               	movlw	128
  2205  0068B0  6E6E               	movwf	main@slew,c
  2206                           
  2207                           ;newmain.c: 406: MyOpenI2C(sync_mode,slew);
  2208  0068B2  C06E  F043         	movff	main@slew,MyOpenI2C@slew
  2209  0068B6  506D               	movf	main@sync_mode,w,c
  2210  0068B8  EC34  F023         	call	_MyOpenI2C
  2211                           
  2212                           ;newmain.c: 408: OSCCONbits.IRCF=6;
  2213  0068BC  50D3               	movf	4051,w,c	;volatile
  2214  0068BE  0B8F               	andlw	-113
  2215  0068C0  0960               	iorlw	96
  2216  0068C2  6ED3               	movwf	4051,c	;volatile
  2217                           
  2218                           ;newmain.c: 409: SSPADD=9;
  2219  0068C4  0E09               	movlw	9
  2220  0068C6  6EC8               	movwf	4040,c	;volatile
  2221                           
  2222                           ;newmain.c: 411: _delay((unsigned long)((1)*(4000000/4000.0)));
  2223  0068C8  0EC8               	movlw	200
  2224  0068CA                     u6697:
  2225  0068CA  D000               	nop2	
  2226  0068CC  2EE8               	decfsz	wreg,f,c
  2227  0068CE  D7FD               	bra	u6697
  2228                           
  2229                           ;newmain.c: 412: for(i=0;i<4;i++)
  2230  0068D0  0E00               	movlw	0
  2231  0068D2  6E77               	movwf	main@i+1,c
  2232  0068D4  0E00               	movlw	0
  2233  0068D6  6E76               	movwf	main@i,c
  2234  0068D8                     l4584:
  2235  0068D8  BE77               	btfsc	main@i+1,7,c
  2236  0068DA  D006               	goto	l133
  2237  0068DC  5077               	movf	main@i+1,w,c
  2238  0068DE  E14B               	bnz	l4622
  2239  0068E0  0E04               	movlw	4
  2240  0068E2  5C76               	subwf	main@i,w,c
  2241  0068E4  B0D8               	btfsc	status,0,c
  2242  0068E6  D047               	goto	u6020
  2243  0068E8                     l133:
  2244                           
  2245                           ;newmain.c: 413: {
  2246                           ;newmain.c: 415: MyIdleI2C();
  2247  0068E8  EC1D  F023         	call	_MyIdleI2C	;wreg free
  2248                           
  2249                           ;newmain.c: 416: MyStartI2C();
  2250  0068EC  EC16  F023         	call	_MyStartI2C	;wreg free
  2251                           
  2252                           ;newmain.c: 417: MyIdleI2C();
  2253  0068F0  EC1D  F023         	call	_MyIdleI2C	;wreg free
  2254                           
  2255                           ;newmain.c: 418: write(matrices[i].address|0x00);
  2256  0068F4  C076  F043         	movff	main@i,___wmul@multiplier
  2257  0068F8  C077  F044         	movff	main@i+1,___wmul@multiplier+1
  2258  0068FC  0E00               	movlw	0
  2259  0068FE  6E46               	movwf	___wmul@multiplicand+1,c
  2260  006900  0E1D               	movlw	29
  2261  006902  6E45               	movwf	___wmul@multiplicand,c
  2262  006904  EC54  F023         	call	___wmul	;wreg free
  2263  006908  0E80               	movlw	low _matrices
  2264  00690A  2443               	addwf	?___wmul,w,c
  2265  00690C  6ED9               	movwf	fsr2l,c
  2266  00690E  0E00               	movlw	high _matrices
  2267  006910  2044               	addwfc	?___wmul+1,w,c
  2268  006912  6EDA               	movwf	fsr2h,c
  2269  006914  50DF               	movf	indf2,w,c
  2270  006916  EC67  F023         	call	_write
  2271                           
  2272                           ;newmain.c: 419: MyIdleI2C();
  2273  00691A  EC1D  F023         	call	_MyIdleI2C	;wreg free
  2274                           
  2275                           ;newmain.c: 420: write(0x21);
  2276  00691E  0E21               	movlw	33
  2277  006920  EC67  F023         	call	_write
  2278                           
  2279                           ;newmain.c: 421: MyIdleI2C();
  2280  006924  EC1D  F023         	call	_MyIdleI2C	;wreg free
  2281                           
  2282                           ;newmain.c: 422: MyStopI2C();
  2283  006928  EC18  F023         	call	_MyStopI2C	;wreg free
  2284                           
  2285                           ;newmain.c: 425: MyIdleI2C();
  2286  00692C  EC1D  F023         	call	_MyIdleI2C	;wreg free
  2287                           
  2288                           ;newmain.c: 426: MyStartI2C();
  2289  006930  EC16  F023         	call	_MyStartI2C	;wreg free
  2290                           
  2291                           ;newmain.c: 427: MyIdleI2C();
  2292  006934  EC1D  F023         	call	_MyIdleI2C	;wreg free
  2293                           
  2294                           ;newmain.c: 428: write(matrices[i].address| 0x00);
  2295  006938  C076  F043         	movff	main@i,___wmul@multiplier
  2296  00693C  C077  F044         	movff	main@i+1,___wmul@multiplier+1
  2297  006940  0E00               	movlw	0
  2298  006942  6E46               	movwf	___wmul@multiplicand+1,c
  2299  006944  0E1D               	movlw	29
  2300  006946  6E45               	movwf	___wmul@multiplicand,c
  2301  006948  EC54  F023         	call	___wmul	;wreg free
  2302  00694C  0E80               	movlw	low _matrices
  2303  00694E  2443               	addwf	?___wmul,w,c
  2304  006950  6ED9               	movwf	fsr2l,c
  2305  006952  0E00               	movlw	high _matrices
  2306  006954  2044               	addwfc	?___wmul+1,w,c
  2307  006956  6EDA               	movwf	fsr2h,c
  2308  006958  50DF               	movf	indf2,w,c
  2309  00695A  EC67  F023         	call	_write
  2310                           
  2311                           ;newmain.c: 429: MyIdleI2C();
  2312  00695E  EC1D  F023         	call	_MyIdleI2C	;wreg free
  2313                           
  2314                           ;newmain.c: 430: write(0b10000001);
  2315  006962  0E81               	movlw	129
  2316  006964  EC67  F023         	call	_write
  2317                           
  2318                           ;newmain.c: 431: MyIdleI2C();
  2319  006968  EC1D  F023         	call	_MyIdleI2C	;wreg free
  2320                           
  2321                           ;newmain.c: 432: MyStopI2C();
  2322  00696C  EC18  F023         	call	_MyStopI2C	;wreg free
  2323  006970  4A76               	infsnz	main@i,f,c
  2324  006972  2A77               	incf	main@i+1,f,c
  2325  006974  D7B1               	goto	l4584
  2326  006976                     u6020:
  2327  006976                     l4622:
  2328                           
  2329                           ;newmain.c: 433: }
  2330                           ;newmain.c: 435: uint8_t column = 0, rightbutton = 0, m = 0, n = 0, h = 0;
  2331  006976  0E00               	movlw	0
  2332  006978  6E71               	movwf	main@column,c
  2333  00697A  0E00               	movlw	0
  2334  00697C  6E70               	movwf	main@rightbutton,c
  2335  00697E  0E00               	movlw	0
  2336  006980  6E72               	movwf	main@m,c
  2337  006982  0E00               	movlw	0
  2338  006984  6E6F               	movwf	main@n,c
  2339  006986  0E00               	movlw	0
  2340  006988  6E75               	movwf	main@h,c
  2341                           
  2342                           ;newmain.c: 437: for(i=0;i<8;i++)
  2343  00698A  0E00               	movlw	0
  2344  00698C  6E77               	movwf	main@i+1,c
  2345  00698E  0E00               	movlw	0
  2346  006990  6E76               	movwf	main@i,c
  2347  006992                     l4624:
  2348  006992  BE77               	btfsc	main@i+1,7,c
  2349  006994  D006               	goto	l135
  2350  006996  5077               	movf	main@i+1,w,c
  2351  006998  E137               	bnz	l4644
  2352  00699A  0E08               	movlw	8
  2353  00699C  5C76               	subwf	main@i,w,c
  2354  00699E  B0D8               	btfsc	status,0,c
  2355  0069A0  D033               	goto	u6060
  2356  0069A2                     l135:
  2357                           
  2358                           ;newmain.c: 438: for(j=0;j<8;j++)
  2359  0069A2  0E00               	movlw	0
  2360  0069A4  6E74               	movwf	main@j+1,c
  2361  0069A6  0E00               	movlw	0
  2362  0069A8  6E73               	movwf	main@j,c
  2363  0069AA                     l4630:
  2364  0069AA  BE74               	btfsc	main@j+1,7,c
  2365  0069AC  D006               	goto	l137
  2366  0069AE  5074               	movf	main@j+1,w,c
  2367  0069B0  E128               	bnz	l4640
  2368  0069B2  0E08               	movlw	8
  2369  0069B4  5C73               	subwf	main@j,w,c
  2370  0069B6  B0D8               	btfsc	status,0,c
  2371  0069B8  D024               	goto	u6050
  2372  0069BA                     l137:
  2373                           
  2374                           ;newmain.c: 439: set_led(Buttons[i][j]);
  2375  0069BA  C076  F069         	movff	main@i,??_main
  2376  0069BE  C077  F06A         	movff	main@i+1,??_main+1
  2377  0069C2  90D8               	bcf	status,0,c
  2378  0069C4  3669               	rlcf	??_main,f,c
  2379  0069C6  366A               	rlcf	??_main+1,f,c
  2380  0069C8  90D8               	bcf	status,0,c
  2381  0069CA  3669               	rlcf	??_main,f,c
  2382  0069CC  366A               	rlcf	??_main+1,f,c
  2383  0069CE  90D8               	bcf	status,0,c
  2384  0069D0  3669               	rlcf	??_main,f,c
  2385  0069D2  366A               	rlcf	??_main+1,f,c
  2386  0069D4  0EF9               	movlw	low _Buttons
  2387  0069D6  6E6B               	movwf	(??_main+2)& (0+255),c
  2388  0069D8  0E7B               	movlw	high _Buttons
  2389  0069DA  6E6C               	movwf	(??_main+3)& (0+255),c
  2390  0069DC  5069               	movf	??_main,w,c
  2391  0069DE  266B               	addwf	??_main+2,f,c
  2392  0069E0  506A               	movf	??_main+1,w,c
  2393  0069E2  226C               	addwfc	??_main+3,f,c
  2394  0069E4  5073               	movf	main@j,w,c
  2395  0069E6  266B               	addwf	??_main+2,f,c
  2396  0069E8  5074               	movf	main@j+1,w,c
  2397  0069EA  226C               	addwfc	??_main+3,f,c
  2398  0069EC  C06B  FFF6         	movff	??_main+2,tblptrl
  2399  0069F0  C06C  FFF7         	movff	??_main+3,tblptrh
  2400  0069F4                     	if	0	;tblptru may be non-zero
  2401  0069F4                     	endif
  2402  0069F4                     	if	0	;tblptru may be non-zero
  2403  0069F4                     	endif
  2404  0069F4  0008               	tblrd		*
  2405  0069F6  50F5               	movf	tablat,w,c
  2406  0069F8  ECDA  F024         	call	_set_led
  2407  0069FC  4A73               	infsnz	main@j,f,c
  2408  0069FE  2A74               	incf	main@j+1,f,c
  2409  006A00  D7D4               	goto	l4630
  2410  006A02                     u6050:
  2411  006A02                     l4640:
  2412  006A02  4A76               	infsnz	main@i,f,c
  2413  006A04  2A77               	incf	main@i+1,f,c
  2414  006A06  D7C5               	goto	l4624
  2415  006A08                     u6060:
  2416  006A08                     l4644:
  2417                           
  2418                           ;newmain.c: 440: write_display();
  2419  006A08  EC8C  F025         	call	_write_display	;wreg free
  2420                           
  2421                           ;newmain.c: 441: _delay((unsigned long)((50)*(4000000/4000.0)));
  2422  006A0C  0E41               	movlw	65
  2423  006A0E  6E69               	movwf	??_main& (0+255),c
  2424  006A10  0EEE               	movlw	238
  2425  006A12                     u6707:
  2426  006A12  2EE8               	decfsz	wreg,f,c
  2427  006A14  D7FE               	bra	u6707
  2428  006A16  2E69               	decfsz	??_main& (0+255),f,c
  2429  006A18  D7FC               	bra	u6707
  2430  006A1A  D000               	nop2	
  2431                           
  2432                           ;newmain.c: 442: for(i=0;i<64;i++)
  2433  006A1C  0E00               	movlw	0
  2434  006A1E  6E77               	movwf	main@i+1,c
  2435  006A20  0E00               	movlw	0
  2436  006A22  6E76               	movwf	main@i,c
  2437  006A24                     l4650:
  2438  006A24  BE77               	btfsc	main@i+1,7,c
  2439  006A26  D006               	goto	l139
  2440  006A28  5077               	movf	main@i+1,w,c
  2441  006A2A  E10A               	bnz	l4660
  2442  006A2C  0E40               	movlw	64
  2443  006A2E  5C76               	subwf	main@i,w,c
  2444  006A30  B0D8               	btfsc	status,0,c
  2445  006A32  D006               	goto	u6080
  2446  006A34                     l139:
  2447                           
  2448                           ;newmain.c: 443: clr_led(i);
  2449  006A34  5076               	movf	main@i,w,c
  2450  006A36  EC31  F025         	call	_clr_led
  2451  006A3A  4A76               	infsnz	main@i,f,c
  2452  006A3C  2A77               	incf	main@i+1,f,c
  2453  006A3E  D7F2               	goto	l4650
  2454  006A40                     u6080:
  2455  006A40                     l4660:
  2456                           
  2457                           ;newmain.c: 444: write_display();
  2458  006A40  EC8C  F025         	call	_write_display	;wreg free
  2459  006A44                     
  2460                           ;newmain.c: 447: {
  2461                           ;newmain.c: 448: _delay((unsigned long)((30)*(4000000/4000.0)));
  2462  006A44  0E27               	movlw	39
  2463  006A46  6E69               	movwf	??_main& (0+255),c
  2464  006A48  0EF5               	movlw	245
  2465  006A4A                     u6717:
  2466  006A4A  2EE8               	decfsz	wreg,f,c
  2467  006A4C  D7FE               	bra	u6717
  2468  006A4E  2E69               	decfsz	??_main& (0+255),f,c
  2469  006A50  D7FC               	bra	u6717
  2470  006A52  F000               	nop	
  2471                           
  2472                           ;newmain.c: 449: if(read_switch())
  2473  006A54  ECD9  F026         	call	_read_switch	;wreg free
  2474  006A58  0900               	iorlw	0
  2475  006A5A  B4D8               	btfsc	status,2,c
  2476  006A5C  D7F3               	goto	l141
  2477                           
  2478                           ;newmain.c: 450: {
  2479                           ;newmain.c: 451: for (h = 0; h < 64; h++) {
  2480  006A5E  0E00               	movlw	0
  2481  006A60  6E75               	movwf	main@h,c
  2482  006A62                     l4668:
  2483  006A62  0E3F               	movlw	63
  2484  006A64  6475               	cpfsgt	main@h,c
  2485  006A66  D001               	goto	l143
  2486  006A68  D28D               	goto	u6620
  2487  006A6A                     l143:
  2488                           
  2489                           ;newmain.c: 452: if (is_key_pressed(h)&&(!was_key_pressed(h))) {
  2490  006A6A  5075               	movf	main@h,w,c
  2491  006A6C  EC38  F024         	call	_is_key_pressed
  2492  006A70  0900               	iorlw	0
  2493  006A72  B4D8               	btfsc	status,2,c
  2494  006A74  D285               	goto	l197
  2495  006A76  5075               	movf	main@h,w,c
  2496  006A78  EC89  F024         	call	_was_key_pressed
  2497  006A7C  0900               	iorlw	0
  2498  006A7E  A4D8               	btfss	status,2,c
  2499  006A80  D27F               	goto	l197
  2500                           
  2501                           ;newmain.c: 453: for (i = 0; i < 8; i++) {
  2502  006A82  0E00               	movlw	0
  2503  006A84  6E77               	movwf	main@i+1,c
  2504  006A86  0E00               	movlw	0
  2505  006A88  6E76               	movwf	main@i,c
  2506  006A8A                     l4678:
  2507  006A8A  BE77               	btfsc	main@i+1,7,c
  2508  006A8C  D006               	goto	l146
  2509  006A8E  5077               	movf	main@i+1,w,c
  2510  006A90  E131               	bnz	l4690
  2511  006A92  0E08               	movlw	8
  2512  006A94  5C76               	subwf	main@i,w,c
  2513  006A96  B0D8               	btfsc	status,0,c
  2514  006A98  D02D               	goto	u6150
  2515  006A9A                     l146:
  2516                           
  2517                           ;newmain.c: 454: if (h == Buttons[i][7]) {
  2518  006A9A  C076  F069         	movff	main@i,??_main
  2519  006A9E  C077  F06A         	movff	main@i+1,??_main+1
  2520  006AA2  90D8               	bcf	status,0,c
  2521  006AA4  3669               	rlcf	??_main,f,c
  2522  006AA6  366A               	rlcf	??_main+1,f,c
  2523  006AA8  90D8               	bcf	status,0,c
  2524  006AAA  3669               	rlcf	??_main,f,c
  2525  006AAC  366A               	rlcf	??_main+1,f,c
  2526  006AAE  90D8               	bcf	status,0,c
  2527  006AB0  3669               	rlcf	??_main,f,c
  2528  006AB2  366A               	rlcf	??_main+1,f,c
  2529  006AB4  0E07               	movlw	7
  2530  006AB6  2669               	addwf	??_main,f,c
  2531  006AB8  0E00               	movlw	0
  2532  006ABA  226A               	addwfc	??_main+1,f,c
  2533  006ABC  0EF9               	movlw	low _Buttons
  2534  006ABE  2469               	addwf	??_main,w,c
  2535  006AC0  6EF6               	movwf	tblptrl,c
  2536  006AC2  0E7B               	movlw	high _Buttons
  2537  006AC4  206A               	addwfc	??_main+1,w,c
  2538  006AC6  6EF7               	movwf	tblptrh,c
  2539  006AC8                     	if	0	;There are less than 3 active tblptr bytes
  2540  006AC8                     	endif
  2541  006AC8  0008               	tblrd		*
  2542  006ACA  50F5               	movf	tablat,w,c
  2543  006ACC  1875               	xorwf	main@h,w,c
  2544  006ACE  A4D8               	btfss	status,2,c
  2545  006AD0  D00E               	goto	l148
  2546                           
  2547                           ;newmain.c: 455: rightbutton = (h - 19) / 4;
  2548  006AD2  0EED               	movlw	237
  2549  006AD4  2475               	addwf	main@h,w,c
  2550  006AD6  6E43               	movwf	___awdiv@dividend,c
  2551  006AD8  6A44               	clrf	___awdiv@dividend+1,c
  2552  006ADA  0EFF               	movlw	255
  2553  006ADC  2244               	addwfc	___awdiv@dividend+1,f,c
  2554  006ADE  0E00               	movlw	0
  2555  006AE0  6E46               	movwf	___awdiv@divisor+1,c
  2556  006AE2  0E04               	movlw	4
  2557  006AE4  6E45               	movwf	___awdiv@divisor,c
  2558  006AE6  ECF6  F023         	call	___awdiv	;wreg free
  2559  006AEA  5043               	movf	?___awdiv,w,c
  2560  006AEC  6E70               	movwf	main@rightbutton,c
  2561  006AEE                     l148:
  2562  006AEE  4A76               	infsnz	main@i,f,c
  2563  006AF0  2A77               	incf	main@i+1,f,c
  2564  006AF2  D7CB               	goto	l4678
  2565  006AF4                     u6150:
  2566  006AF4                     l4690:
  2567                           
  2568                           ;newmain.c: 456: }
  2569                           ;newmain.c: 457: }
  2570                           ;newmain.c: 459: for (i = 0; i < 8; i++) {
  2571  006AF4  0E00               	movlw	0
  2572  006AF6  6E77               	movwf	main@i+1,c
  2573  006AF8  0E00               	movlw	0
  2574  006AFA  6E76               	movwf	main@i,c
  2575  006AFC                     l4692:
  2576  006AFC  BE77               	btfsc	main@i+1,7,c
  2577  006AFE  D006               	goto	l149
  2578  006B00  5077               	movf	main@i+1,w,c
  2579  006B02  E141               	bnz	l4714
  2580  006B04  0E08               	movlw	8
  2581  006B06  5C76               	subwf	main@i,w,c
  2582  006B08  B0D8               	btfsc	status,0,c
  2583  006B0A  D03D               	goto	u6200
  2584  006B0C                     l149:
  2585                           
  2586                           ;newmain.c: 460: for (j = 0; j < 8; j++) {
  2587  006B0C  0E00               	movlw	0
  2588  006B0E  6E74               	movwf	main@j+1,c
  2589  006B10  0E00               	movlw	0
  2590  006B12  6E73               	movwf	main@j,c
  2591  006B14                     l4698:
  2592  006B14  BE74               	btfsc	main@j+1,7,c
  2593  006B16  D006               	goto	l151
  2594  006B18  5074               	movf	main@j+1,w,c
  2595  006B1A  E132               	bnz	l4710
  2596  006B1C  0E08               	movlw	8
  2597  006B1E  5C73               	subwf	main@j,w,c
  2598  006B20  B0D8               	btfsc	status,0,c
  2599  006B22  D02E               	goto	u6190
  2600  006B24                     l151:
  2601                           
  2602                           ;newmain.c: 461: if (h == Buttons[i][j]) {
  2603  006B24  C076  F069         	movff	main@i,??_main
  2604  006B28  C077  F06A         	movff	main@i+1,??_main+1
  2605  006B2C  90D8               	bcf	status,0,c
  2606  006B2E  3669               	rlcf	??_main,f,c
  2607  006B30  366A               	rlcf	??_main+1,f,c
  2608  006B32  90D8               	bcf	status,0,c
  2609  006B34  3669               	rlcf	??_main,f,c
  2610  006B36  366A               	rlcf	??_main+1,f,c
  2611  006B38  90D8               	bcf	status,0,c
  2612  006B3A  3669               	rlcf	??_main,f,c
  2613  006B3C  366A               	rlcf	??_main+1,f,c
  2614  006B3E  0EF9               	movlw	low _Buttons
  2615  006B40  6E6B               	movwf	(??_main+2)& (0+255),c
  2616  006B42  0E7B               	movlw	high _Buttons
  2617  006B44  6E6C               	movwf	(??_main+3)& (0+255),c
  2618  006B46  5069               	movf	??_main,w,c
  2619  006B48  266B               	addwf	??_main+2,f,c
  2620  006B4A  506A               	movf	??_main+1,w,c
  2621  006B4C  226C               	addwfc	??_main+3,f,c
  2622  006B4E  5073               	movf	main@j,w,c
  2623  006B50  266B               	addwf	??_main+2,f,c
  2624  006B52  5074               	movf	main@j+1,w,c
  2625  006B54  226C               	addwfc	??_main+3,f,c
  2626  006B56  C06B  FFF6         	movff	??_main+2,tblptrl
  2627  006B5A  C06C  FFF7         	movff	??_main+3,tblptrh
  2628  006B5E                     	if	0	;tblptru may be non-zero
  2629  006B5E                     	endif
  2630  006B5E                     	if	0	;tblptru may be non-zero
  2631  006B5E                     	endif
  2632  006B5E  0008               	tblrd		*
  2633  006B60  50F5               	movf	tablat,w,c
  2634  006B62  1875               	xorwf	main@h,w,c
  2635  006B64  A4D8               	btfss	status,2,c
  2636  006B66  D009               	goto	l153
  2637                           
  2638                           ;newmain.c: 462: column = Buttons[0][j];
  2639  006B68  0EF9               	movlw	low _Buttons
  2640  006B6A  2473               	addwf	main@j,w,c
  2641  006B6C  6EF6               	movwf	tblptrl,c
  2642  006B6E  0E7B               	movlw	high _Buttons
  2643  006B70  2074               	addwfc	main@j+1,w,c
  2644  006B72  6EF7               	movwf	tblptrh,c
  2645  006B74                     	if	0	;There are less than 3 active tblptr bytes
  2646  006B74                     	endif
  2647  006B74  0008               	tblrd		*
  2648  006B76  CFF5 F071          	movff	tablat,main@column
  2649  006B7A                     l153:
  2650  006B7A  4A73               	infsnz	main@j,f,c
  2651  006B7C  2A74               	incf	main@j+1,f,c
  2652  006B7E  D7CA               	goto	l4698
  2653  006B80                     u6190:
  2654  006B80                     l4710:
  2655  006B80  4A76               	infsnz	main@i,f,c
  2656  006B82  2A77               	incf	main@i+1,f,c
  2657  006B84  D7BB               	goto	l4692
  2658  006B86                     u6200:
  2659  006B86                     l4714:
  2660                           
  2661                           ;newmain.c: 463: }
  2662                           ;newmain.c: 464: }
  2663                           ;newmain.c: 465: }
  2664                           ;newmain.c: 468: if (column == 19) {
  2665  006B86  0E13               	movlw	19
  2666  006B88  1871               	xorwf	main@column,w,c
  2667  006B8A  A4D8               	btfss	status,2,c
  2668  006B8C  D014               	goto	l154
  2669                           
  2670                           ;newmain.c: 469: for (i = 0; i < 64; i++)
  2671  006B8E  0E00               	movlw	0
  2672  006B90  6E77               	movwf	main@i+1,c
  2673  006B92  0E00               	movlw	0
  2674  006B94  6E76               	movwf	main@i,c
  2675  006B96                     l4718:
  2676  006B96  BE77               	btfsc	main@i+1,7,c
  2677  006B98  D006               	goto	l155
  2678  006B9A  5077               	movf	main@i+1,w,c
  2679  006B9C  E10A               	bnz	l4728
  2680  006B9E  0E40               	movlw	64
  2681  006BA0  5C76               	subwf	main@i,w,c
  2682  006BA2  B0D8               	btfsc	status,0,c
  2683  006BA4  D006               	goto	u6230
  2684  006BA6                     l155:
  2685                           
  2686                           ;newmain.c: 470: clr_led(i);
  2687  006BA6  5076               	movf	main@i,w,c
  2688  006BA8  EC31  F025         	call	_clr_led
  2689  006BAC  4A76               	infsnz	main@i,f,c
  2690  006BAE  2A77               	incf	main@i+1,f,c
  2691  006BB0  D7F2               	goto	l4718
  2692  006BB2                     u6230:
  2693  006BB2                     l4728:
  2694                           
  2695                           ;newmain.c: 471: write_display();
  2696  006BB2  EC8C  F025         	call	_write_display	;wreg free
  2697  006BB6                     l154:
  2698                           
  2699                           ;newmain.c: 472: }
  2700                           ;newmain.c: 474: if (rightbutton == 0 && column != 19) {
  2701  006BB6  5070               	movf	main@rightbutton,w,c
  2702  006BB8  A4D8               	btfss	status,2,c
  2703  006BBA  D0AA               	goto	l157
  2704  006BBC  0E13               	movlw	19
  2705  006BBE  1871               	xorwf	main@column,w,c
  2706  006BC0  B4D8               	btfsc	status,2,c
  2707  006BC2  D0A6               	goto	l157
  2708                           
  2709                           ;newmain.c: 475: for (i = 0; i < 14; i++) {
  2710  006BC4  0E00               	movlw	0
  2711  006BC6  6E77               	movwf	main@i+1,c
  2712  006BC8  0E00               	movlw	0
  2713  006BCA  6E76               	movwf	main@i,c
  2714  006BCC                     l4736:
  2715  006BCC  BE77               	btfsc	main@i+1,7,c
  2716  006BCE  D006               	goto	l158
  2717  006BD0  5077               	movf	main@i+1,w,c
  2718  006BD2  E156               	bnz	l4774
  2719  006BD4  0E0E               	movlw	14
  2720  006BD6  5C76               	subwf	main@i,w,c
  2721  006BD8  B0D8               	btfsc	status,0,c
  2722  006BDA  D052               	goto	u6310
  2723  006BDC                     l158:
  2724                           
  2725                           ;newmain.c: 476: if (h == show0_1[i]) {
  2726  006BDC  0E8B               	movlw	low _show0_1
  2727  006BDE  2476               	addwf	main@i,w,c
  2728  006BE0  6EF6               	movwf	tblptrl,c
  2729  006BE2  0E7C               	movlw	high _show0_1
  2730  006BE4  2077               	addwfc	main@i+1,w,c
  2731  006BE6  6EF7               	movwf	tblptrh,c
  2732  006BE8                     	if	0	;There are less than 3 active tblptr bytes
  2733  006BE8                     	endif
  2734  006BE8  0008               	tblrd		*
  2735  006BEA  50F5               	movf	tablat,w,c
  2736  006BEC  1875               	xorwf	main@h,w,c
  2737  006BEE  A4D8               	btfss	status,2,c
  2738  006BF0  D002               	goto	l160
  2739                           
  2740                           ;newmain.c: 477: m = 1;
  2741  006BF2  0E01               	movlw	1
  2742  006BF4  D03E               	goto	L3
  2743  006BF6                     l160:
  2744  006BF6  C076  F069         	movff	main@i,??_main
  2745  006BFA  C077  F06A         	movff	main@i+1,??_main+1
  2746  006BFE  1E69               	comf	??_main,f,c
  2747  006C00  1E6A               	comf	??_main+1,f,c
  2748  006C02  4A69               	infsnz	??_main,f,c
  2749  006C04  2A6A               	incf	??_main+1,f,c
  2750  006C06  0E27               	movlw	39
  2751  006C08  2669               	addwf	??_main,f,c
  2752  006C0A  0E00               	movlw	0
  2753  006C0C  226A               	addwfc	??_main+1,f,c
  2754  006C0E  0E8B               	movlw	low _show0_1
  2755  006C10  2469               	addwf	??_main,w,c
  2756  006C12  6EF6               	movwf	tblptrl,c
  2757  006C14  0E7C               	movlw	high _show0_1
  2758  006C16  206A               	addwfc	??_main+1,w,c
  2759  006C18  6EF7               	movwf	tblptrh,c
  2760  006C1A                     	if	0	;There are less than 3 active tblptr bytes
  2761  006C1A                     	endif
  2762  006C1A  0008               	tblrd		*
  2763  006C1C  50F5               	movf	tablat,w,c
  2764  006C1E  1875               	xorwf	main@h,w,c
  2765  006C20  A4D8               	btfss	status,2,c
  2766  006C22  D002               	goto	l162
  2767                           
  2768                           ;newmain.c: 481: m = 2;
  2769  006C24  0E02               	movlw	2
  2770  006C26  D025               	goto	L3
  2771  006C28                     l162:
  2772  006C28  0E63               	movlw	low _show0_2
  2773  006C2A  2476               	addwf	main@i,w,c
  2774  006C2C  6EF6               	movwf	tblptrl,c
  2775  006C2E  0E7C               	movlw	high _show0_2
  2776  006C30  2077               	addwfc	main@i+1,w,c
  2777  006C32  6EF7               	movwf	tblptrh,c
  2778  006C34                     	if	0	;There are less than 3 active tblptr bytes
  2779  006C34                     	endif
  2780  006C34  0008               	tblrd		*
  2781  006C36  50F5               	movf	tablat,w,c
  2782  006C38  1875               	xorwf	main@h,w,c
  2783  006C3A  A4D8               	btfss	status,2,c
  2784  006C3C  D002               	goto	l164
  2785                           
  2786                           ;newmain.c: 485: m = 3;
  2787  006C3E  0E03               	movlw	3
  2788  006C40  D018               	goto	L3
  2789  006C42                     l164:
  2790  006C42  C076  F069         	movff	main@i,??_main
  2791  006C46  C077  F06A         	movff	main@i+1,??_main+1
  2792  006C4A  1E69               	comf	??_main,f,c
  2793  006C4C  1E6A               	comf	??_main+1,f,c
  2794  006C4E  4A69               	infsnz	??_main,f,c
  2795  006C50  2A6A               	incf	??_main+1,f,c
  2796  006C52  0E27               	movlw	39
  2797  006C54  2669               	addwf	??_main,f,c
  2798  006C56  0E00               	movlw	0
  2799  006C58  226A               	addwfc	??_main+1,f,c
  2800  006C5A  0E63               	movlw	low _show0_2
  2801  006C5C  2469               	addwf	??_main,w,c
  2802  006C5E  6EF6               	movwf	tblptrl,c
  2803  006C60  0E7C               	movlw	high _show0_2
  2804  006C62  206A               	addwfc	??_main+1,w,c
  2805  006C64  6EF7               	movwf	tblptrh,c
  2806  006C66                     	if	0	;There are less than 3 active tblptr bytes
  2807  006C66                     	endif
  2808  006C66  0008               	tblrd		*
  2809  006C68  50F5               	movf	tablat,w,c
  2810  006C6A  1875               	xorwf	main@h,w,c
  2811  006C6C  A4D8               	btfss	status,2,c
  2812  006C6E  D005               	goto	l166
  2813                           
  2814                           ;newmain.c: 489: m = 4;
  2815  006C70  0E04               	movlw	4
  2816  006C72                     L3:
  2817  006C72  6E72               	movwf	main@m,c
  2818                           
  2819                           ;newmain.c: 490: n = i;
  2820  006C74  C076  F06F         	movff	main@i,main@n
  2821                           
  2822                           ;newmain.c: 491: break;
  2823  006C78  D003               	goto	u6310
  2824  006C7A                     l166:
  2825  006C7A  4A76               	infsnz	main@i,f,c
  2826  006C7C  2A77               	incf	main@i+1,f,c
  2827  006C7E  D7A6               	goto	l4736
  2828  006C80                     u6310:
  2829  006C80                     l4774:
  2830                           
  2831                           ;newmain.c: 492: }
  2832                           ;newmain.c: 493: }
  2833                           ;newmain.c: 494: for (i = 0; i < 2; i++) {
  2834  006C80  0E00               	movlw	0
  2835  006C82  6E77               	movwf	main@i+1,c
  2836  006C84  0E00               	movlw	0
  2837  006C86  6E76               	movwf	main@i,c
  2838  006C88                     l4776:
  2839  006C88  BE77               	btfsc	main@i+1,7,c
  2840  006C8A  D006               	goto	l167
  2841  006C8C  5077               	movf	main@i+1,w,c
  2842  006C8E  E13A               	bnz	l4800
  2843  006C90  0E02               	movlw	2
  2844  006C92  5C76               	subwf	main@i,w,c
  2845  006C94  B0D8               	btfsc	status,0,c
  2846  006C96  D036               	goto	u6360
  2847  006C98                     l167:
  2848                           
  2849                           ;newmain.c: 495: for (j = 0; j < 8; j++) {
  2850  006C98  0E00               	movlw	0
  2851  006C9A  6E74               	movwf	main@j+1,c
  2852  006C9C  0E00               	movlw	0
  2853  006C9E  6E73               	movwf	main@j,c
  2854  006CA0                     l4782:
  2855  006CA0  BE74               	btfsc	main@j+1,7,c
  2856  006CA2  D006               	goto	l169
  2857  006CA4  5074               	movf	main@j+1,w,c
  2858  006CA6  E12B               	bnz	l4796
  2859  006CA8  0E08               	movlw	8
  2860  006CAA  5C73               	subwf	main@j,w,c
  2861  006CAC  B0D8               	btfsc	status,0,c
  2862  006CAE  D027               	goto	u6350
  2863  006CB0                     l169:
  2864                           
  2865                           ;newmain.c: 496: if (h == show0_3[i][j]) {
  2866  006CB0  C076  F043         	movff	main@i,___wmul@multiplier
  2867  006CB4  C077  F044         	movff	main@i+1,___wmul@multiplier+1
  2868  006CB8  0E00               	movlw	0
  2869  006CBA  6E46               	movwf	___wmul@multiplicand+1,c
  2870  006CBC  0E14               	movlw	20
  2871  006CBE  6E45               	movwf	___wmul@multiplicand,c
  2872  006CC0  EC54  F023         	call	___wmul	;wreg free
  2873  006CC4  0ED5               	movlw	low _show0_3
  2874  006CC6  6E69               	movwf	??_main& (0+255),c
  2875  006CC8  0E78               	movlw	high _show0_3
  2876  006CCA  6E6A               	movwf	(??_main+1)& (0+255),c
  2877  006CCC  5043               	movf	?___wmul,w,c
  2878  006CCE  2669               	addwf	??_main,f,c
  2879  006CD0  5044               	movf	?___wmul+1,w,c
  2880  006CD2  226A               	addwfc	??_main+1,f,c
  2881  006CD4  5073               	movf	main@j,w,c
  2882  006CD6  2669               	addwf	??_main,f,c
  2883  006CD8  5074               	movf	main@j+1,w,c
  2884  006CDA  226A               	addwfc	??_main+1,f,c
  2885  006CDC  C069  FFF6         	movff	??_main,tblptrl
  2886  006CE0  C06A  FFF7         	movff	??_main+1,tblptrh
  2887  006CE4                     	if	0	;tblptru may be non-zero
  2888  006CE4                     	endif
  2889  006CE4                     	if	0	;tblptru may be non-zero
  2890  006CE4                     	endif
  2891  006CE4  0008               	tblrd		*
  2892  006CE6  50F5               	movf	tablat,w,c
  2893  006CE8  1875               	xorwf	main@h,w,c
  2894  006CEA  A4D8               	btfss	status,2,c
  2895  006CEC  D005               	goto	l171
  2896                           
  2897                           ;newmain.c: 497: m = 5;
  2898  006CEE  0E05               	movlw	5
  2899  006CF0  6E72               	movwf	main@m,c
  2900                           
  2901                           ;newmain.c: 498: n = i;
  2902  006CF2  C076  F06F         	movff	main@i,main@n
  2903                           
  2904                           ;newmain.c: 499: break;
  2905  006CF6  D003               	goto	u6350
  2906  006CF8                     l171:
  2907  006CF8  4A73               	infsnz	main@j,f,c
  2908  006CFA  2A74               	incf	main@j+1,f,c
  2909  006CFC  D7D1               	goto	l4782
  2910  006CFE                     u6350:
  2911  006CFE                     l4796:
  2912  006CFE  4A76               	infsnz	main@i,f,c
  2913  006D00  2A77               	incf	main@i+1,f,c
  2914  006D02  D7C2               	goto	l4776
  2915  006D04                     u6360:
  2916  006D04                     l4800:
  2917                           
  2918                           ;newmain.c: 500: }
  2919                           ;newmain.c: 501: }
  2920                           ;newmain.c: 502: }
  2921                           ;newmain.c: 503: animation0(m, n);
  2922  006D04  C06F  F058         	movff	main@n,animation0@n
  2923  006D08  5072               	movf	main@m,w,c
  2924  006D0A  EC35  F029         	call	_animation0
  2925                           
  2926                           ;newmain.c: 504: } else if (rightbutton == 1 && column != 19) {
  2927  006D0E  D138               	goto	l197
  2928  006D10                     l157:
  2929  006D10  0470               	decf	main@rightbutton,w,c
  2930  006D12  A4D8               	btfss	status,2,c
  2931  006D14  D018               	goto	l173
  2932  006D16  0E13               	movlw	19
  2933  006D18  1871               	xorwf	main@column,w,c
  2934  006D1A  B4D8               	btfsc	status,2,c
  2935  006D1C  D014               	goto	l173
  2936                           
  2937                           ;newmain.c: 506: m = h / 16;
  2938  006D1E  C075  F043         	movff	main@h,___awdiv@dividend
  2939  006D22  6A44               	clrf	___awdiv@dividend+1,c
  2940  006D24  0E00               	movlw	0
  2941  006D26  6E46               	movwf	___awdiv@divisor+1,c
  2942  006D28  0E10               	movlw	16
  2943  006D2A  6E45               	movwf	___awdiv@divisor,c
  2944  006D2C  ECF6  F023         	call	___awdiv	;wreg free
  2945  006D30  5043               	movf	?___awdiv,w,c
  2946  006D32  6E72               	movwf	main@m,c
  2947                           
  2948                           ;newmain.c: 507: n = h % 16;
  2949  006D34  5075               	movf	main@h,w,c
  2950  006D36  0B0F               	andlw	15
  2951  006D38  6E6F               	movwf	main@n,c
  2952                           
  2953                           ;newmain.c: 508: animation1(m, n);
  2954  006D3A  C06F  F058         	movff	main@n,animation1@n
  2955  006D3E  5072               	movf	main@m,w,c
  2956  006D40  EC26  F026         	call	_animation1
  2957                           
  2958                           ;newmain.c: 509: } else if (rightbutton == 2 && column != 19) {
  2959  006D44  D11D               	goto	l197
  2960  006D46                     l173:
  2961  006D46  0E02               	movlw	2
  2962  006D48  1870               	xorwf	main@rightbutton,w,c
  2963  006D4A  A4D8               	btfss	status,2,c
  2964  006D4C  D01A               	goto	l175
  2965  006D4E  0E13               	movlw	19
  2966  006D50  1871               	xorwf	main@column,w,c
  2967  006D52  B4D8               	btfsc	status,2,c
  2968  006D54  D016               	goto	l175
  2969                           
  2970                           ;newmain.c: 510: m = h / 16;
  2971  006D56  C075  F043         	movff	main@h,___awdiv@dividend
  2972  006D5A  6A44               	clrf	___awdiv@dividend+1,c
  2973  006D5C  0E00               	movlw	0
  2974  006D5E  6E46               	movwf	___awdiv@divisor+1,c
  2975  006D60  0E10               	movlw	16
  2976  006D62  6E45               	movwf	___awdiv@divisor,c
  2977  006D64  ECF6  F023         	call	___awdiv	;wreg free
  2978  006D68  5043               	movf	?___awdiv,w,c
  2979  006D6A  6E72               	movwf	main@m,c
  2980                           
  2981                           ;newmain.c: 511: n = h % 16;
  2982  006D6C  5075               	movf	main@h,w,c
  2983  006D6E  0B0F               	andlw	15
  2984  006D70  6E6F               	movwf	main@n,c
  2985                           
  2986                           ;newmain.c: 512: animation2(m, n, h);
  2987  006D72  C06F  F058         	movff	main@n,animation2@n
  2988  006D76  C075  F059         	movff	main@h,animation2@h
  2989  006D7A  5072               	movf	main@m,w,c
  2990  006D7C  ECC7  F030         	call	_animation2
  2991                           
  2992                           ;newmain.c: 513: } else if (rightbutton == 3 && column != 19) {
  2993  006D80  D0FF               	goto	l197
  2994  006D82                     l175:
  2995  006D82  0E03               	movlw	3
  2996  006D84  1870               	xorwf	main@rightbutton,w,c
  2997  006D86  A4D8               	btfss	status,2,c
  2998  006D88  D067               	goto	l177
  2999  006D8A  0E13               	movlw	19
  3000  006D8C  1871               	xorwf	main@column,w,c
  3001  006D8E  B4D8               	btfsc	status,2,c
  3002  006D90  D063               	goto	l177
  3003                           
  3004                           ;newmain.c: 514: for (i = 0; i < 4; i++)
  3005  006D92  0E00               	movlw	0
  3006  006D94  6E77               	movwf	main@i+1,c
  3007  006D96  0E00               	movlw	0
  3008  006D98  6E76               	movwf	main@i,c
  3009  006D9A                     l4828:
  3010  006D9A  BE77               	btfsc	main@i+1,7,c
  3011  006D9C  D006               	goto	l178
  3012  006D9E  5077               	movf	main@i+1,w,c
  3013  006DA0  E157               	bnz	l4852
  3014  006DA2  0E04               	movlw	4
  3015  006DA4  5C76               	subwf	main@i,w,c
  3016  006DA6  B0D8               	btfsc	status,0,c
  3017  006DA8  D053               	goto	u6480
  3018  006DAA                     l178:
  3019                           
  3020                           ;newmain.c: 515: for (j = 0; j < 26; j++)
  3021  006DAA  0E00               	movlw	0
  3022  006DAC  6E74               	movwf	main@j+1,c
  3023  006DAE  0E00               	movlw	0
  3024  006DB0  6E73               	movwf	main@j,c
  3025  006DB2                     l4834:
  3026  006DB2  BE74               	btfsc	main@j+1,7,c
  3027  006DB4  D006               	goto	l180
  3028  006DB6  5074               	movf	main@j+1,w,c
  3029  006DB8  E148               	bnz	l4848
  3030  006DBA  0E1A               	movlw	26
  3031  006DBC  5C73               	subwf	main@j,w,c
  3032  006DBE  B0D8               	btfsc	status,0,c
  3033  006DC0  D044               	goto	u6470
  3034  006DC2                     l180:
  3035                           
  3036                           ;newmain.c: 516: if(circle[i][j]!=100){
  3037  006DC2  C076  F043         	movff	main@i,___wmul@multiplier
  3038  006DC6  C077  F044         	movff	main@i+1,___wmul@multiplier+1
  3039  006DCA  0E00               	movlw	0
  3040  006DCC  6E46               	movwf	___wmul@multiplicand+1,c
  3041  006DCE  0E1A               	movlw	26
  3042  006DD0  6E45               	movwf	___wmul@multiplicand,c
  3043  006DD2  EC54  F023         	call	___wmul	;wreg free
  3044  006DD6  0EC1               	movlw	low _circle
  3045  006DD8  6E69               	movwf	??_main& (0+255),c
  3046  006DDA  0E79               	movlw	high _circle
  3047  006DDC  6E6A               	movwf	(??_main+1)& (0+255),c
  3048  006DDE  5043               	movf	?___wmul,w,c
  3049  006DE0  2669               	addwf	??_main,f,c
  3050  006DE2  5044               	movf	?___wmul+1,w,c
  3051  006DE4  226A               	addwfc	??_main+1,f,c
  3052  006DE6  5073               	movf	main@j,w,c
  3053  006DE8  2669               	addwf	??_main,f,c
  3054  006DEA  5074               	movf	main@j+1,w,c
  3055  006DEC  226A               	addwfc	??_main+1,f,c
  3056  006DEE  C069  FFF6         	movff	??_main,tblptrl
  3057  006DF2  C06A  FFF7         	movff	??_main+1,tblptrh
  3058  006DF6                     	if	0	;tblptru may be non-zero
  3059  006DF6                     	endif
  3060  006DF6                     	if	0	;tblptru may be non-zero
  3061  006DF6                     	endif
  3062  006DF6  0008               	tblrd		*
  3063  006DF8  50F5               	movf	tablat,w,c
  3064  006DFA  0A64               	xorlw	100
  3065  006DFC  B4D8               	btfsc	status,2,c
  3066  006DFE  D022               	goto	l183
  3067                           
  3068                           ;newmain.c: 517: if (h == circle[i][j]){
  3069  006E00  C076  F043         	movff	main@i,___wmul@multiplier
  3070  006E04  C077  F044         	movff	main@i+1,___wmul@multiplier+1
  3071  006E08  0E00               	movlw	0
  3072  006E0A  6E46               	movwf	___wmul@multiplicand+1,c
  3073  006E0C  0E1A               	movlw	26
  3074  006E0E  6E45               	movwf	___wmul@multiplicand,c
  3075  006E10  EC54  F023         	call	___wmul	;wreg free
  3076  006E14  0EC1               	movlw	low _circle
  3077  006E16  6E69               	movwf	??_main& (0+255),c
  3078  006E18  0E79               	movlw	high _circle
  3079  006E1A  6E6A               	movwf	(??_main+1)& (0+255),c
  3080  006E1C  5043               	movf	?___wmul,w,c
  3081  006E1E  2669               	addwf	??_main,f,c
  3082  006E20  5044               	movf	?___wmul+1,w,c
  3083  006E22  226A               	addwfc	??_main+1,f,c
  3084  006E24  5073               	movf	main@j,w,c
  3085  006E26  2669               	addwf	??_main,f,c
  3086  006E28  5074               	movf	main@j+1,w,c
  3087  006E2A  226A               	addwfc	??_main+1,f,c
  3088  006E2C  C069  FFF6         	movff	??_main,tblptrl
  3089  006E30  C06A  FFF7         	movff	??_main+1,tblptrh
  3090  006E34                     	if	0	;tblptru may be non-zero
  3091  006E34                     	endif
  3092  006E34                     	if	0	;tblptru may be non-zero
  3093  006E34                     	endif
  3094  006E34  0008               	tblrd		*
  3095  006E36  50F5               	movf	tablat,w,c
  3096  006E38  1875               	xorwf	main@h,w,c
  3097  006E3A  A4D8               	btfss	status,2,c
  3098  006E3C  D003               	goto	l183
  3099                           
  3100                           ;newmain.c: 518: m = i;
  3101  006E3E  C076  F072         	movff	main@i,main@m
  3102                           
  3103                           ;newmain.c: 519: goto A;
  3104  006E42  D006               	goto	u6480
  3105  006E44                     l183:
  3106  006E44  4A73               	infsnz	main@j,f,c
  3107  006E46  2A74               	incf	main@j+1,f,c
  3108  006E48  D7B4               	goto	l4834
  3109  006E4A                     u6470:
  3110  006E4A                     l4848:
  3111  006E4A  4A76               	infsnz	main@i,f,c
  3112  006E4C  2A77               	incf	main@i+1,f,c
  3113  006E4E  D7A5               	goto	l4828
  3114  006E50                     u6480:
  3115  006E50                     l4852:
  3116                           
  3117                           ;newmain.c: 523: animation3(m);
  3118  006E50  5072               	movf	main@m,w,c
  3119  006E52  ECC6  F037         	call	_animation3
  3120                           
  3121                           ;newmain.c: 524: } else if (rightbutton == 8 && column != 19) {
  3122  006E56  D094               	goto	l197
  3123  006E58                     l177:
  3124  006E58  0E08               	movlw	8
  3125  006E5A  1870               	xorwf	main@rightbutton,w,c
  3126  006E5C  A4D8               	btfss	status,2,c
  3127  006E5E  D015               	goto	l186
  3128  006E60  0E13               	movlw	19
  3129  006E62  1871               	xorwf	main@column,w,c
  3130  006E64  B4D8               	btfsc	status,2,c
  3131  006E66  D011               	goto	l186
  3132                           
  3133                           ;newmain.c: 525: m = h / 16;
  3134  006E68  C075  F043         	movff	main@h,___awdiv@dividend
  3135  006E6C  6A44               	clrf	___awdiv@dividend+1,c
  3136  006E6E  0E00               	movlw	0
  3137  006E70  6E46               	movwf	___awdiv@divisor+1,c
  3138  006E72  0E10               	movlw	16
  3139  006E74  6E45               	movwf	___awdiv@divisor,c
  3140  006E76  ECF6  F023         	call	___awdiv	;wreg free
  3141  006E7A  5043               	movf	?___awdiv,w,c
  3142  006E7C  6E72               	movwf	main@m,c
  3143                           
  3144                           ;newmain.c: 526: animation4(m, h);
  3145  006E7E  C075  F058         	movff	main@h,animation4@h
  3146  006E82  5072               	movf	main@m,w,c
  3147  006E84  EC37  F02C         	call	_animation4
  3148                           
  3149                           ;newmain.c: 527: } else if (rightbutton == 9 && column != 19) {
  3150  006E88  D07B               	goto	l197
  3151  006E8A                     l186:
  3152  006E8A  0E09               	movlw	9
  3153  006E8C  1870               	xorwf	main@rightbutton,w,c
  3154  006E8E  A4D8               	btfss	status,2,c
  3155  006E90  D01A               	goto	l188
  3156  006E92  0E13               	movlw	19
  3157  006E94  1871               	xorwf	main@column,w,c
  3158  006E96  B4D8               	btfsc	status,2,c
  3159  006E98  D016               	goto	l188
  3160                           
  3161                           ;newmain.c: 529: m = h / 16;
  3162  006E9A  C075  F043         	movff	main@h,___awdiv@dividend
  3163  006E9E  6A44               	clrf	___awdiv@dividend+1,c
  3164  006EA0  0E00               	movlw	0
  3165  006EA2  6E46               	movwf	___awdiv@divisor+1,c
  3166  006EA4  0E10               	movlw	16
  3167  006EA6  6E45               	movwf	___awdiv@divisor,c
  3168  006EA8  ECF6  F023         	call	___awdiv	;wreg free
  3169  006EAC  5043               	movf	?___awdiv,w,c
  3170  006EAE  6E72               	movwf	main@m,c
  3171                           
  3172                           ;newmain.c: 530: n = h % 16;
  3173  006EB0  5075               	movf	main@h,w,c
  3174  006EB2  0B0F               	andlw	15
  3175  006EB4  6E6F               	movwf	main@n,c
  3176                           
  3177                           ;newmain.c: 531: animation5(m, n, h);
  3178  006EB6  C06F  F058         	movff	main@n,animation5@n
  3179  006EBA  C075  F059         	movff	main@h,animation5@h
  3180  006EBE  5072               	movf	main@m,w,c
  3181  006EC0  ECAF  F02A         	call	_animation5
  3182                           
  3183                           ;newmain.c: 533: } else if (rightbutton == 10 && column != 19) {
  3184  006EC4  D05D               	goto	l197
  3185  006EC6                     l188:
  3186  006EC6  0E0A               	movlw	10
  3187  006EC8  1870               	xorwf	main@rightbutton,w,c
  3188  006ECA  A4D8               	btfss	status,2,c
  3189  006ECC  D04E               	goto	l190
  3190  006ECE  0E13               	movlw	19
  3191  006ED0  1871               	xorwf	main@column,w,c
  3192  006ED2  B4D8               	btfsc	status,2,c
  3193  006ED4  D04A               	goto	l190
  3194                           
  3195                           ;newmain.c: 534: for (i = 0; i < 8; i++) {
  3196  006ED6  0E00               	movlw	0
  3197  006ED8  6E77               	movwf	main@i+1,c
  3198  006EDA  0E00               	movlw	0
  3199  006EDC  6E76               	movwf	main@i,c
  3200  006EDE                     l4878:
  3201  006EDE  BE77               	btfsc	main@i+1,7,c
  3202  006EE0  D006               	goto	l191
  3203  006EE2  5077               	movf	main@i+1,w,c
  3204  006EE4  E13C               	bnz	l4900
  3205  006EE6  0E08               	movlw	8
  3206  006EE8  5C76               	subwf	main@i,w,c
  3207  006EEA  B0D8               	btfsc	status,0,c
  3208  006EEC  D038               	goto	u6590
  3209  006EEE                     l191:
  3210                           
  3211                           ;newmain.c: 535: for (j = 0; j < 8; j++) {
  3212  006EEE  0E00               	movlw	0
  3213  006EF0  6E74               	movwf	main@j+1,c
  3214  006EF2  0E00               	movlw	0
  3215  006EF4  6E73               	movwf	main@j,c
  3216  006EF6                     l4884:
  3217  006EF6  BE74               	btfsc	main@j+1,7,c
  3218  006EF8  D006               	goto	l193
  3219  006EFA  5074               	movf	main@j+1,w,c
  3220  006EFC  E12D               	bnz	l4896
  3221  006EFE  0E08               	movlw	8
  3222  006F00  5C73               	subwf	main@j,w,c
  3223  006F02  B0D8               	btfsc	status,0,c
  3224  006F04  D029               	goto	u6580
  3225  006F06                     l193:
  3226                           
  3227                           ;newmain.c: 536: if (h == Buttons[i][j]) {
  3228  006F06  C076  F069         	movff	main@i,??_main
  3229  006F0A  C077  F06A         	movff	main@i+1,??_main+1
  3230  006F0E  90D8               	bcf	status,0,c
  3231  006F10  3669               	rlcf	??_main,f,c
  3232  006F12  366A               	rlcf	??_main+1,f,c
  3233  006F14  90D8               	bcf	status,0,c
  3234  006F16  3669               	rlcf	??_main,f,c
  3235  006F18  366A               	rlcf	??_main+1,f,c
  3236  006F1A  90D8               	bcf	status,0,c
  3237  006F1C  3669               	rlcf	??_main,f,c
  3238  006F1E  366A               	rlcf	??_main+1,f,c
  3239  006F20  0EF9               	movlw	low _Buttons
  3240  006F22  6E6B               	movwf	(??_main+2)& (0+255),c
  3241  006F24  0E7B               	movlw	high _Buttons
  3242  006F26  6E6C               	movwf	(??_main+3)& (0+255),c
  3243  006F28  5069               	movf	??_main,w,c
  3244  006F2A  266B               	addwf	??_main+2,f,c
  3245  006F2C  506A               	movf	??_main+1,w,c
  3246  006F2E  226C               	addwfc	??_main+3,f,c
  3247  006F30  5073               	movf	main@j,w,c
  3248  006F32  266B               	addwf	??_main+2,f,c
  3249  006F34  5074               	movf	main@j+1,w,c
  3250  006F36  226C               	addwfc	??_main+3,f,c
  3251  006F38  C06B  FFF6         	movff	??_main+2,tblptrl
  3252  006F3C  C06C  FFF7         	movff	??_main+3,tblptrh
  3253  006F40                     	if	0	;tblptru may be non-zero
  3254  006F40                     	endif
  3255  006F40                     	if	0	;tblptru may be non-zero
  3256  006F40                     	endif
  3257  006F40  0008               	tblrd		*
  3258  006F42  50F5               	movf	tablat,w,c
  3259  006F44  1875               	xorwf	main@h,w,c
  3260  006F46  A4D8               	btfss	status,2,c
  3261  006F48  D004               	goto	l195
  3262                           
  3263                           ;newmain.c: 537: m = i;
  3264  006F4A  C076  F072         	movff	main@i,main@m
  3265                           
  3266                           ;newmain.c: 538: n = j;
  3267  006F4E  C073  F06F         	movff	main@j,main@n
  3268  006F52                     l195:
  3269  006F52  4A73               	infsnz	main@j,f,c
  3270  006F54  2A74               	incf	main@j+1,f,c
  3271  006F56  D7CF               	goto	l4884
  3272  006F58                     u6580:
  3273  006F58                     l4896:
  3274  006F58  4A76               	infsnz	main@i,f,c
  3275  006F5A  2A77               	incf	main@i+1,f,c
  3276  006F5C  D7C0               	goto	l4878
  3277  006F5E                     u6590:
  3278  006F5E                     l4900:
  3279                           
  3280                           ;newmain.c: 539: }
  3281                           ;newmain.c: 540: }
  3282                           ;newmain.c: 541: }
  3283                           ;newmain.c: 542: animation6(m, n);
  3284  006F5E  C06F  F058         	movff	main@n,animation6@n
  3285  006F62  5072               	movf	main@m,w,c
  3286  006F64  ECCC  F027         	call	_animation6
  3287                           
  3288                           ;newmain.c: 543: } else if (rightbutton == 11 && column != 19) {
  3289  006F68  D00B               	goto	l197
  3290  006F6A                     l190:
  3291  006F6A  0E0B               	movlw	11
  3292  006F6C  1870               	xorwf	main@rightbutton,w,c
  3293  006F6E  A4D8               	btfss	status,2,c
  3294  006F70  D007               	goto	l197
  3295  006F72  0E13               	movlw	19
  3296  006F74  1871               	xorwf	main@column,w,c
  3297  006F76  B4D8               	btfsc	status,2,c
  3298  006F78  D003               	goto	l197
  3299                           
  3300                           ;newmain.c: 544: animation7(h);
  3301  006F7A  5075               	movf	main@h,w,c
  3302  006F7C  EC6B  F02E         	call	_animation7
  3303  006F80                     l197:
  3304  006F80  2A75               	incf	main@h,f,c
  3305  006F82  D56F               	goto	l4668
  3306  006F84                     u6620:
  3307                           
  3308                           ;newmain.c: 545: }
  3309                           ;newmain.c: 546: }
  3310                           ;newmain.c: 547: }
  3311                           ;newmain.c: 548: write_display();
  3312  006F84  EC8C  F025         	call	_write_display	;wreg free
  3313  006F88  D55D               	goto	l141
  3314  006F8A                     
  3315                           ;newmain.c: 549: }
  3316                           ;newmain.c: 550: }
  3317                           ;newmain.c: 552: while(1);
  3318  006F8A  D7FF               	goto	l199
  3319  006F8C                     __end_of_main:
  3320                           	opt stack 0
  3321                           tblptru	equ	0xFF8
  3322                           tblptrh	equ	0xFF7
  3323                           tblptrl	equ	0xFF6
  3324                           tablat	equ	0xFF5
  3325                           postinc0	equ	0xFEE
  3326                           wreg	equ	0xFE8
  3327                           indf2	equ	0xFDF
  3328                           fsr2h	equ	0xFDA
  3329                           fsr2l	equ	0xFD9
  3330                           status	equ	0xFD8
  3331                           
  3332 ;; *************** function _was_key_pressed *****************
  3333 ;; Defined at:
  3334 ;;		line 1053 in file "newmain.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  k               1    wreg     unsigned char 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  k               1   18[COMRAM] unsigned char 
  3339 ;;  led             2   16[COMRAM] int 
  3340 ;;  matrix          2   14[COMRAM] int 
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      unsigned char 
  3343 ;; Registers used:
  3344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3350 ;;      Params:         0       0       0       0       0       0       0
  3351 ;;      Locals:         5       0       0       0       0       0       0
  3352 ;;      Temps:          8       0       0       0       0       0       0
  3353 ;;      Totals:        13       0       0       0       0       0       0
  3354 ;;Total ram usage:       13 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:    1
  3357 ;; This function calls:
  3358 ;;		___wmul
  3359 ;; This function is called by:
  3360 ;;		_main
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           	psect	text1
  3365  004912                     __ptext1:
  3366                           	opt stack 0
  3367  004912                     _was_key_pressed:
  3368                           	opt stack 29
  3369                           
  3370                           ;incstack = 0
  3371                           ;was_key_pressed@k stored from wreg
  3372  004912  6E55               	movwf	was_key_pressed@k,c
  3373                           
  3374                           ;newmain.c: 1055: int matrix=k>>4;
  3375  004914  C055  F049         	movff	was_key_pressed@k,??_was_key_pressed
  3376  004918  3A49               	swapf	??_was_key_pressed,f,c
  3377  00491A  0E0F               	movlw	15
  3378  00491C  1649               	andwf	??_was_key_pressed,f,c
  3379  00491E  5049               	movf	??_was_key_pressed,w,c
  3380  004920  6E51               	movwf	was_key_pressed@matrix,c
  3381  004922  6A52               	clrf	was_key_pressed@matrix+1,c
  3382                           
  3383                           ;newmain.c: 1056: int led=k&0b1111;
  3384  004924  C055  F049         	movff	was_key_pressed@k,??_was_key_pressed
  3385  004928  0E0F               	movlw	15
  3386  00492A  1649               	andwf	??_was_key_pressed,f,c
  3387  00492C  5049               	movf	??_was_key_pressed,w,c
  3388  00492E  6E53               	movwf	was_key_pressed@led,c
  3389  004930  6A54               	clrf	was_key_pressed@led+1,c
  3390                           
  3391                           ;newmain.c: 1057: return (matrices[matrix].last_keys[buttonLUT[led]>>4]&(1<<(buttonLUT[l
      +                          ed]&0x0f)));
  3392  004932  C051  F043         	movff	was_key_pressed@matrix,___wmul@multiplier
  3393  004936  C052  F044         	movff	was_key_pressed@matrix+1,___wmul@multiplier+1
  3394  00493A  0E00               	movlw	0
  3395  00493C  6E46               	movwf	___wmul@multiplicand+1,c
  3396  00493E  0E1D               	movlw	29
  3397  004940  6E45               	movwf	___wmul@multiplicand,c
  3398  004942  EC54  F023         	call	___wmul	;wreg free
  3399  004946  0EDF               	movlw	low _buttonLUT
  3400  004948  2453               	addwf	was_key_pressed@led,w,c
  3401  00494A  6EF6               	movwf	tblptrl,c
  3402  00494C  0E7C               	movlw	high _buttonLUT
  3403  00494E  2054               	addwfc	was_key_pressed@led+1,w,c
  3404  004950  6EF7               	movwf	tblptrh,c
  3405  004952                     	if	0	;There are less than 3 active tblptr bytes
  3406  004952                     	endif
  3407  004952  0008               	tblrd		*
  3408  004954  CFF5 F049          	movff	tablat,??_was_key_pressed
  3409  004958  3849               	swapf	??_was_key_pressed,w,c
  3410  00495A  0B0F               	andlw	15
  3411  00495C  6E4A               	movwf	(??_was_key_pressed+1)& (0+255),c
  3412  00495E  6A4B               	clrf	(??_was_key_pressed+2)& (0+255),c
  3413  004960  0E07               	movlw	7
  3414  004962  264A               	addwf	??_was_key_pressed+1,f,c
  3415  004964  0E00               	movlw	0
  3416  004966  224B               	addwfc	??_was_key_pressed+2,f,c
  3417  004968  0E80               	movlw	low _matrices
  3418  00496A  6E4C               	movwf	(??_was_key_pressed+3)& (0+255),c
  3419  00496C  0E00               	movlw	high _matrices
  3420  00496E  6E4D               	movwf	(??_was_key_pressed+4)& (0+255),c
  3421  004970  504A               	movf	??_was_key_pressed+1,w,c
  3422  004972  264C               	addwf	??_was_key_pressed+3,f,c
  3423  004974  504B               	movf	??_was_key_pressed+2,w,c
  3424  004976  224D               	addwfc	??_was_key_pressed+4,f,c
  3425  004978  5043               	movf	?___wmul,w,c
  3426  00497A  244C               	addwf	??_was_key_pressed+3,w,c
  3427  00497C  6ED9               	movwf	fsr2l,c
  3428  00497E  5044               	movf	?___wmul+1,w,c
  3429  004980  204D               	addwfc	??_was_key_pressed+4,w,c
  3430  004982  6EDA               	movwf	fsr2h,c
  3431  004984  50DF               	movf	indf2,w,c
  3432  004986  6E4E               	movwf	(??_was_key_pressed+5)& (0+255),c
  3433  004988  0EDF               	movlw	low _buttonLUT
  3434  00498A  2453               	addwf	was_key_pressed@led,w,c
  3435  00498C  6EF6               	movwf	tblptrl,c
  3436  00498E  0E7C               	movlw	high _buttonLUT
  3437  004990  2054               	addwfc	was_key_pressed@led+1,w,c
  3438  004992  6EF7               	movwf	tblptrh,c
  3439  004994                     	if	0	;There are less than 3 active tblptr bytes
  3440  004994                     	endif
  3441  004994  0008               	tblrd		*
  3442  004996  CFF5 F04F          	movff	tablat,??_was_key_pressed+6
  3443  00499A  0E0F               	movlw	15
  3444  00499C  164F               	andwf	??_was_key_pressed+6,f,c
  3445  00499E  0E01               	movlw	1
  3446  0049A0  6E50               	movwf	(??_was_key_pressed+7)& (0+255),c
  3447  0049A2  2A4F               	incf	??_was_key_pressed+6,f,c
  3448  0049A4  D002               	goto	u3734
  3449  0049A6                     u3735:
  3450  0049A6  90D8               	bcf	status,0,c
  3451  0049A8  3650               	rlcf	??_was_key_pressed+7,f,c
  3452  0049AA                     u3734:
  3453  0049AA  2E4F               	decfsz	??_was_key_pressed+6,f,c
  3454  0049AC  D7FC               	goto	u3735
  3455  0049AE  5050               	movf	??_was_key_pressed+7,w,c
  3456  0049B0  144E               	andwf	??_was_key_pressed+5,w,c
  3457  0049B2  0012               	return	
  3458  0049B4                     __end_of_was_key_pressed:
  3459                           	opt stack 0
  3460                           tblptru	equ	0xFF8
  3461                           tblptrh	equ	0xFF7
  3462                           tblptrl	equ	0xFF6
  3463                           tablat	equ	0xFF5
  3464                           postinc0	equ	0xFEE
  3465                           wreg	equ	0xFE8
  3466                           indf2	equ	0xFDF
  3467                           fsr2h	equ	0xFDA
  3468                           fsr2l	equ	0xFD9
  3469                           status	equ	0xFD8
  3470                           
  3471 ;; *************** function _read_switch *****************
  3472 ;; Defined at:
  3473 ;;		line 1059 in file "newmain.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  j               2   29[COMRAM] int 
  3478 ;;  i               2   27[COMRAM] int 
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      unsigned char 
  3481 ;; Registers used:
  3482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3488 ;;      Params:         0       0       0       0       0       0       0
  3489 ;;      Locals:         4       0       0       0       0       0       0
  3490 ;;      Temps:         10       0       0       0       0       0       0
  3491 ;;      Totals:        14       0       0       0       0       0       0
  3492 ;;Total ram usage:       14 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:    3
  3495 ;; This function calls:
  3496 ;;		_MyIdleI2C
  3497 ;;		_MyNotAckI2C
  3498 ;;		_MyStartI2C
  3499 ;;		_MyStopI2C
  3500 ;;		_MygetsI2C
  3501 ;;		___wmul
  3502 ;;		_memcpy
  3503 ;;		_write
  3504 ;; This function is called by:
  3505 ;;		_main
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           	psect	text2
  3510  004DB2                     __ptext2:
  3511                           	opt stack 0
  3512  004DB2                     _read_switch:
  3513                           	opt stack 27
  3514                           
  3515                           ;newmain.c: 1061: int i,j;
  3516                           ;newmain.c: 1062: for(j=0;j<4;j++)
  3517                           
  3518                           ;incstack = 0
  3519  004DB2  0E00               	movlw	0
  3520  004DB4  6E61               	movwf	read_switch@j+1,c
  3521  004DB6  0E00               	movlw	0
  3522  004DB8  6E60               	movwf	read_switch@j,c
  3523  004DBA  BE61               	btfsc	read_switch@j+1,7,c
  3524  004DBC  D008               	goto	l494
  3525  004DBE  5061               	movf	read_switch@j+1,w,c
  3526  004DC0  E105               	bnz	u3660
  3527  004DC2  0E04               	movlw	4
  3528  004DC4  5C60               	subwf	read_switch@j,w,c
  3529  004DC6  B0D8               	btfsc	status,0,c
  3530  004DC8  D0E5               	goto	u3710
  3531  004DCA  D001               	goto	l494
  3532  004DCC                     u3660:
  3533  004DCC  D0E3               	goto	u3710
  3534  004DCE                     l494:
  3535                           
  3536                           ;newmain.c: 1063: {
  3537                           ;newmain.c: 1064: memcpy(matrices[j].last_keys,matrices[j].keys,sizeof(matrices[j].keys)
      +                          );
  3538  004DCE  C060  F043         	movff	read_switch@j,___wmul@multiplier
  3539  004DD2  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  3540  004DD6  0E00               	movlw	0
  3541  004DD8  6E46               	movwf	___wmul@multiplicand+1,c
  3542  004DDA  0E1D               	movlw	29
  3543  004DDC  6E45               	movwf	___wmul@multiplicand,c
  3544  004DDE  EC54  F023         	call	___wmul	;wreg free
  3545  004DE2  0E07               	movlw	7
  3546  004DE4  2643               	addwf	?___wmul,f,c
  3547  004DE6  0E00               	movlw	0
  3548  004DE8  2244               	addwfc	?___wmul+1,f,c
  3549  004DEA  0E80               	movlw	low _matrices
  3550  004DEC  2443               	addwf	?___wmul,w,c
  3551  004DEE  6E49               	movwf	memcpy@d1,c
  3552  004DF0  0E00               	movlw	high _matrices
  3553  004DF2  2044               	addwfc	?___wmul+1,w,c
  3554  004DF4  6E4A               	movwf	memcpy@d1+1,c
  3555  004DF6  C060  F043         	movff	read_switch@j,___wmul@multiplier
  3556  004DFA  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  3557  004DFE  0E00               	movlw	0
  3558  004E00  6E46               	movwf	___wmul@multiplicand+1,c
  3559  004E02  0E1D               	movlw	29
  3560  004E04  6E45               	movwf	___wmul@multiplicand,c
  3561  004E06  EC54  F023         	call	___wmul	;wreg free
  3562  004E0A  0E01               	movlw	1
  3563  004E0C  2643               	addwf	?___wmul,f,c
  3564  004E0E  0E00               	movlw	0
  3565  004E10  2244               	addwfc	?___wmul+1,f,c
  3566  004E12  0E80               	movlw	low _matrices
  3567  004E14  2443               	addwf	?___wmul,w,c
  3568  004E16  6E4B               	movwf	memcpy@s1,c
  3569  004E18  0E00               	movlw	high _matrices
  3570  004E1A  2044               	addwfc	?___wmul+1,w,c
  3571  004E1C  6E4C               	movwf	memcpy@s1+1,c
  3572  004E1E  0E00               	movlw	0
  3573  004E20  6E4E               	movwf	memcpy@n+1,c
  3574  004E22  0E06               	movlw	6
  3575  004E24  6E4D               	movwf	memcpy@n,c
  3576  004E26  EC7E  F023         	call	_memcpy	;wreg free
  3577                           
  3578                           ;newmain.c: 1066: MyIdleI2C();
  3579  004E2A  EC1D  F023         	call	_MyIdleI2C	;wreg free
  3580                           
  3581                           ;newmain.c: 1067: MyStartI2C();
  3582  004E2E  EC16  F023         	call	_MyStartI2C	;wreg free
  3583                           
  3584                           ;newmain.c: 1068: MyIdleI2C();
  3585  004E32  EC1D  F023         	call	_MyIdleI2C	;wreg free
  3586                           
  3587                           ;newmain.c: 1069: write(matrices[j].address | 0x00);
  3588  004E36  C060  F043         	movff	read_switch@j,___wmul@multiplier
  3589  004E3A  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  3590  004E3E  0E00               	movlw	0
  3591  004E40  6E46               	movwf	___wmul@multiplicand+1,c
  3592  004E42  0E1D               	movlw	29
  3593  004E44  6E45               	movwf	___wmul@multiplicand,c
  3594  004E46  EC54  F023         	call	___wmul	;wreg free
  3595  004E4A  0E80               	movlw	low _matrices
  3596  004E4C  2443               	addwf	?___wmul,w,c
  3597  004E4E  6ED9               	movwf	fsr2l,c
  3598  004E50  0E00               	movlw	high _matrices
  3599  004E52  2044               	addwfc	?___wmul+1,w,c
  3600  004E54  6EDA               	movwf	fsr2h,c
  3601  004E56  50DF               	movf	indf2,w,c
  3602  004E58  EC67  F023         	call	_write
  3603                           
  3604                           ;newmain.c: 1070: MyIdleI2C();
  3605  004E5C  EC1D  F023         	call	_MyIdleI2C	;wreg free
  3606                           
  3607                           ;newmain.c: 1071: write(0x40);
  3608  004E60  0E40               	movlw	64
  3609  004E62  EC67  F023         	call	_write
  3610                           
  3611                           ;newmain.c: 1072: MyIdleI2C();
  3612  004E66  EC1D  F023         	call	_MyIdleI2C	;wreg free
  3613                           
  3614                           ;newmain.c: 1073: MyStopI2C();
  3615  004E6A  EC18  F023         	call	_MyStopI2C	;wreg free
  3616                           
  3617                           ;newmain.c: 1075: MyIdleI2C();
  3618  004E6E  EC1D  F023         	call	_MyIdleI2C	;wreg free
  3619                           
  3620                           ;newmain.c: 1076: MyStartI2C();
  3621  004E72  EC16  F023         	call	_MyStartI2C	;wreg free
  3622                           
  3623                           ;newmain.c: 1077: MyIdleI2C();
  3624  004E76  EC1D  F023         	call	_MyIdleI2C	;wreg free
  3625                           
  3626                           ;newmain.c: 1078: write(matrices[j].address | 0x01);
  3627  004E7A  C060  F043         	movff	read_switch@j,___wmul@multiplier
  3628  004E7E  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  3629  004E82  0E00               	movlw	0
  3630  004E84  6E46               	movwf	___wmul@multiplicand+1,c
  3631  004E86  0E1D               	movlw	29
  3632  004E88  6E45               	movwf	___wmul@multiplicand,c
  3633  004E8A  EC54  F023         	call	___wmul	;wreg free
  3634  004E8E  0E80               	movlw	low _matrices
  3635  004E90  2443               	addwf	?___wmul,w,c
  3636  004E92  6ED9               	movwf	fsr2l,c
  3637  004E94  0E00               	movlw	high _matrices
  3638  004E96  2044               	addwfc	?___wmul+1,w,c
  3639  004E98  6EDA               	movwf	fsr2h,c
  3640  004E9A  50DF               	movf	indf2,w,c
  3641  004E9C  0901               	iorlw	1
  3642  004E9E  EC67  F023         	call	_write
  3643                           
  3644                           ;newmain.c: 1079: MyIdleI2C();
  3645  004EA2  EC1D  F023         	call	_MyIdleI2C	;wreg free
  3646  004EA6  C060  F043         	movff	read_switch@j,___wmul@multiplier
  3647  004EAA  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  3648  004EAE  0E00               	movlw	0
  3649  004EB0  6E46               	movwf	___wmul@multiplicand+1,c
  3650  004EB2  0E1D               	movlw	29
  3651  004EB4  6E45               	movwf	___wmul@multiplicand,c
  3652  004EB6  EC54  F023         	call	___wmul	;wreg free
  3653  004EBA  0E01               	movlw	1
  3654  004EBC  2643               	addwf	?___wmul,f,c
  3655  004EBE  0E00               	movlw	0
  3656  004EC0  2244               	addwfc	?___wmul+1,f,c
  3657  004EC2  0E80               	movlw	low _matrices
  3658  004EC4  2443               	addwf	?___wmul,w,c
  3659  004EC6  6E49               	movwf	MygetsI2C@rdptr,c
  3660  004EC8  0E00               	movlw	high _matrices
  3661  004ECA  2044               	addwfc	?___wmul+1,w,c
  3662  004ECC  6E4A               	movwf	MygetsI2C@rdptr+1,c
  3663  004ECE  0E06               	movlw	6
  3664  004ED0  6E4B               	movwf	MygetsI2C@length,c
  3665  004ED2  ECA0  F023         	call	_MygetsI2C	;wreg free
  3666  004ED6  0900               	iorlw	0
  3667  004ED8  A4D8               	btfss	status,2,c
  3668  004EDA  D7E5               	goto	l497
  3669                           
  3670                           ;newmain.c: 1081: MyNotAckI2C();
  3671  004EDC  EC1A  F023         	call	_MyNotAckI2C	;wreg free
  3672                           
  3673                           ;newmain.c: 1082: MyStopI2C();
  3674  004EE0  EC18  F023         	call	_MyStopI2C	;wreg free
  3675                           
  3676                           ;newmain.c: 1084: for(i=0;i<6;i++)
  3677  004EE4  0E00               	movlw	0
  3678  004EE6  6E5F               	movwf	read_switch@i+1,c
  3679  004EE8  0E00               	movlw	0
  3680  004EEA  6E5E               	movwf	read_switch@i,c
  3681  004EEC                     l3296:
  3682  004EEC  BE5F               	btfsc	read_switch@i+1,7,c
  3683  004EEE  D006               	goto	l499
  3684  004EF0  505F               	movf	read_switch@i+1,w,c
  3685  004EF2  E149               	bnz	l3310
  3686  004EF4  0E06               	movlw	6
  3687  004EF6  5C5E               	subwf	read_switch@i,w,c
  3688  004EF8  B0D8               	btfsc	status,0,c
  3689  004EFA  D045               	goto	u3700
  3690  004EFC                     l499:
  3691                           
  3692                           ;newmain.c: 1085: {
  3693                           ;newmain.c: 1086: if(matrices[j].keys[i]!=matrices[j].last_keys[i])
  3694  004EFC  C060  F043         	movff	read_switch@j,___wmul@multiplier
  3695  004F00  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  3696  004F04  0E00               	movlw	0
  3697  004F06  6E46               	movwf	___wmul@multiplicand+1,c
  3698  004F08  0E1D               	movlw	29
  3699  004F0A  6E45               	movwf	___wmul@multiplicand,c
  3700  004F0C  EC54  F023         	call	___wmul	;wreg free
  3701  004F10  0E07               	movlw	7
  3702  004F12  245E               	addwf	read_switch@i,w,c
  3703  004F14  6E54               	movwf	??_read_switch& (0+255),c
  3704  004F16  0E00               	movlw	0
  3705  004F18  205F               	addwfc	read_switch@i+1,w,c
  3706  004F1A  6E55               	movwf	(??_read_switch+1)& (0+255),c
  3707  004F1C  0E80               	movlw	low _matrices
  3708  004F1E  6E56               	movwf	(??_read_switch+2)& (0+255),c
  3709  004F20  0E00               	movlw	high _matrices
  3710  004F22  6E57               	movwf	(??_read_switch+3)& (0+255),c
  3711  004F24  5054               	movf	??_read_switch,w,c
  3712  004F26  2656               	addwf	??_read_switch+2,f,c
  3713  004F28  5055               	movf	??_read_switch+1,w,c
  3714  004F2A  2257               	addwfc	??_read_switch+3,f,c
  3715  004F2C  5043               	movf	?___wmul,w,c
  3716  004F2E  2456               	addwf	??_read_switch+2,w,c
  3717  004F30  6ED9               	movwf	fsr2l,c
  3718  004F32  5044               	movf	?___wmul+1,w,c
  3719  004F34  2057               	addwfc	??_read_switch+3,w,c
  3720  004F36  6EDA               	movwf	fsr2h,c
  3721  004F38  C060  F043         	movff	read_switch@j,___wmul@multiplier
  3722  004F3C  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  3723  004F40  0E00               	movlw	0
  3724  004F42  6E46               	movwf	___wmul@multiplicand+1,c
  3725  004F44  0E1D               	movlw	29
  3726  004F46  6E45               	movwf	___wmul@multiplicand,c
  3727  004F48  EC54  F023         	call	___wmul	;wreg free
  3728  004F4C  0E01               	movlw	1
  3729  004F4E  245E               	addwf	read_switch@i,w,c
  3730  004F50  6E59               	movwf	(??_read_switch+5)& (0+255),c
  3731  004F52  0E00               	movlw	0
  3732  004F54  205F               	addwfc	read_switch@i+1,w,c
  3733  004F56  6E5A               	movwf	(??_read_switch+6)& (0+255),c
  3734  004F58  0E80               	movlw	low _matrices
  3735  004F5A  6E5B               	movwf	(??_read_switch+7)& (0+255),c
  3736  004F5C  0E00               	movlw	high _matrices
  3737  004F5E  6E5C               	movwf	(??_read_switch+8)& (0+255),c
  3738  004F60  5059               	movf	??_read_switch+5,w,c
  3739  004F62  265B               	addwf	??_read_switch+7,f,c
  3740  004F64  505A               	movf	??_read_switch+6,w,c
  3741  004F66  225C               	addwfc	??_read_switch+8,f,c
  3742  004F68  5043               	movf	?___wmul,w,c
  3743  004F6A  245B               	addwf	??_read_switch+7,w,c
  3744  004F6C  6EE1               	movwf	fsr1l,c
  3745  004F6E  5044               	movf	?___wmul+1,w,c
  3746  004F70  205C               	addwfc	??_read_switch+8,w,c
  3747  004F72  6EE2               	movwf	fsr1h,c
  3748  004F74  50DE               	movf	postinc2,w,c
  3749  004F76  18E6               	xorwf	postinc1,w,c
  3750  004F78  B4D8               	btfsc	status,2,c
  3751  004F7A  D002               	goto	l501
  3752                           
  3753                           ;newmain.c: 1087: {
  3754                           ;newmain.c: 1088: return 1;
  3755  004F7C  0E01               	movlw	1
  3756  004F7E  0012               	return	
  3757  004F80                     l501:
  3758  004F80  4A5E               	infsnz	read_switch@i,f,c
  3759  004F82  2A5F               	incf	read_switch@i+1,f,c
  3760  004F84  D7B3               	goto	l3296
  3761  004F86                     u3700:
  3762  004F86                     l3310:
  3763  004F86  4A60               	infsnz	read_switch@j,f,c
  3764  004F88  2A61               	incf	read_switch@j+1,f,c
  3765  004F8A  BE61               	btfsc	read_switch@j+1,7,c
  3766  004F8C  D720               	goto	l494
  3767  004F8E  5061               	movf	read_switch@j+1,w,c
  3768  004F90  E101               	bnz	l3314
  3769  004F92  D717               	goto	L4
  3770  004F94                     u3710:
  3771  004F94                     l3314:
  3772                           
  3773                           ;newmain.c: 1089: }
  3774                           ;newmain.c: 1090: }
  3775                           ;newmain.c: 1092: }
  3776                           ;newmain.c: 1093: return 0;
  3777  004F94  0E00               	movlw	0
  3778  004F96  0012               	return	
  3779  004F98                     __end_of_read_switch:
  3780                           	opt stack 0
  3781                           tblptru	equ	0xFF8
  3782                           tblptrh	equ	0xFF7
  3783                           tblptrl	equ	0xFF6
  3784                           tablat	equ	0xFF5
  3785                           postinc0	equ	0xFEE
  3786                           wreg	equ	0xFE8
  3787                           postinc1	equ	0xFE6
  3788                           fsr1h	equ	0xFE2
  3789                           fsr1l	equ	0xFE1
  3790                           indf2	equ	0xFDF
  3791                           postinc2	equ	0xFDE
  3792                           fsr2h	equ	0xFDA
  3793                           fsr2l	equ	0xFD9
  3794                           status	equ	0xFD8
  3795                           
  3796 ;; *************** function _memcpy *****************
  3797 ;; Defined at:
  3798 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memcpy.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;  d1              2    6[COMRAM] PTR void 
  3801 ;;		 -> matrices(116), 
  3802 ;;  s1              2    8[COMRAM] PTR const void 
  3803 ;;		 -> matrices.keys(6), matrices(116), 
  3804 ;;  n               2   10[COMRAM] unsigned int 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  s               2   14[COMRAM] PTR const unsigned char 
  3807 ;;		 -> matrices.keys(6), matrices(116), 
  3808 ;;  d               2   12[COMRAM] PTR unsigned char 
  3809 ;;		 -> matrices(116), 
  3810 ;;  tmp             1   16[COMRAM] unsigned char 
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  2    6[COMRAM] PTR void 
  3813 ;; Registers used:
  3814 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3820 ;;      Params:         6       0       0       0       0       0       0
  3821 ;;      Locals:         5       0       0       0       0       0       0
  3822 ;;      Temps:          0       0       0       0       0       0       0
  3823 ;;      Totals:        11       0       0       0       0       0       0
  3824 ;;Total ram usage:       11 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; This function calls:
  3827 ;;		Nothing
  3828 ;; This function is called by:
  3829 ;;		_read_switch
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           	psect	text3
  3834  0046FC                     __ptext3:
  3835                           	opt stack 0
  3836  0046FC                     _memcpy:
  3837                           	opt stack 29
  3838                           
  3839                           ;incstack = 0
  3840  0046FC  C04B  F051         	movff	memcpy@s1,memcpy@s
  3841  004700  C04C  F052         	movff	memcpy@s1+1,memcpy@s+1
  3842  004704  C049  F04F         	movff	memcpy@d1,memcpy@d
  3843  004708  C04A  F050         	movff	memcpy@d1+1,memcpy@d+1
  3844  00470C  D010               	goto	l1016
  3845  00470E                     l3208:
  3846  00470E  C051  FFD9         	movff	memcpy@s,fsr2l
  3847  004712  C052  FFDA         	movff	memcpy@s+1,fsr2h
  3848  004716  50DF               	movf	indf2,w,c
  3849  004718  6E53               	movwf	memcpy@tmp,c
  3850  00471A  4A51               	infsnz	memcpy@s,f,c
  3851  00471C  2A52               	incf	memcpy@s+1,f,c
  3852  00471E  C04F  FFD9         	movff	memcpy@d,fsr2l
  3853  004722  C050  FFDA         	movff	memcpy@d+1,fsr2h
  3854  004726  C053  FFDF         	movff	memcpy@tmp,indf2
  3855  00472A  4A4F               	infsnz	memcpy@d,f,c
  3856  00472C  2A50               	incf	memcpy@d+1,f,c
  3857  00472E                     l1016:
  3858  00472E  064D               	decf	memcpy@n,f,c
  3859  004730  A0D8               	btfss	status,0,c
  3860  004732  064E               	decf	memcpy@n+1,f,c
  3861  004734  284D               	incf	memcpy@n,w,c
  3862  004736  E1EB               	bnz	l3208
  3863  004738  284E               	incf	memcpy@n+1,w,c
  3864  00473A  B4D8               	btfsc	status,2,c
  3865  00473C  0012               	return	
  3866  00473E  D7E7               	goto	l1017
  3867  004740                     __end_of_memcpy:
  3868                           	opt stack 0
  3869                           tblptru	equ	0xFF8
  3870                           tblptrh	equ	0xFF7
  3871                           tblptrl	equ	0xFF6
  3872                           tablat	equ	0xFF5
  3873                           postinc0	equ	0xFEE
  3874                           wreg	equ	0xFE8
  3875                           postinc1	equ	0xFE6
  3876                           fsr1h	equ	0xFE2
  3877                           fsr1l	equ	0xFE1
  3878                           indf2	equ	0xFDF
  3879                           postinc2	equ	0xFDE
  3880                           fsr2h	equ	0xFDA
  3881                           fsr2l	equ	0xFD9
  3882                           status	equ	0xFD8
  3883                           
  3884 ;; *************** function _MygetsI2C *****************
  3885 ;; Defined at:
  3886 ;;		line 1202 in file "newmain.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;  rdptr           2    6[COMRAM] PTR unsigned char 
  3889 ;;		 -> matrices(116), 
  3890 ;;  length          1    8[COMRAM] unsigned char 
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;		None
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  1    wreg      char 
  3895 ;; Registers used:
  3896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3902 ;;      Params:         3       0       0       0       0       0       0
  3903 ;;      Locals:         0       0       0       0       0       0       0
  3904 ;;      Temps:          0       0       0       0       0       0       0
  3905 ;;      Totals:         3       0       0       0       0       0       0
  3906 ;;Total ram usage:        3 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; Hardware stack levels required when called:    1
  3909 ;; This function calls:
  3910 ;;		_MyReadI2C
  3911 ;; This function is called by:
  3912 ;;		_read_switch
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text4
  3917  004740                     __ptext4:
  3918                           	opt stack 0
  3919  004740                     _MygetsI2C:
  3920                           	opt stack 28
  3921                           
  3922                           ;newmain.c: 1204: while ( length-- )
  3923                           
  3924                           ;incstack = 0
  3925  004740  D020               	goto	u3640
  3926  004742                     
  3927                           ;newmain.c: 1205: {
  3928                           ;newmain.c: 1206: *rdptr++ = MyReadI2C();
  3929  004742  EC26  F023         	call	_MyReadI2C	;wreg free
  3930  004746  C049  FFD9         	movff	MygetsI2C@rdptr,fsr2l
  3931  00474A  C04A  FFDA         	movff	MygetsI2C@rdptr+1,fsr2h
  3932  00474E  6EDF               	movwf	indf2,c
  3933  004750  4A49               	infsnz	MygetsI2C@rdptr,f,c
  3934  004752  2A4A               	incf	MygetsI2C@rdptr+1,f,c
  3935  004754  B6C5               	btfsc	4037,3,c	;volatile
  3936  004756  D7FE               	goto	l562
  3937                           
  3938                           ;newmain.c: 1209: if ( PIR2bits.BCLIF )
  3939  004758  A6A1               	btfss	4001,3,c	;volatile
  3940  00475A  D002               	goto	l564
  3941                           
  3942                           ;newmain.c: 1210: {
  3943                           ;newmain.c: 1211: return ( -1 );
  3944  00475C  0EFF               	movlw	255
  3945  00475E  0012               	return	
  3946  004760                     l564:
  3947                           
  3948                           ;newmain.c: 1212: }
  3949                           ;newmain.c: 1214: if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
  3950  004760  50C6               	movf	4038,w,c	;volatile
  3951  004762  0B0F               	andlw	15
  3952  004764  0A08               	xorlw	8
  3953  004766  B4D8               	btfsc	status,2,c
  3954  004768  D005               	goto	u3620
  3955  00476A  50C6               	movf	4038,w,c	;volatile
  3956  00476C  0B0F               	andlw	15
  3957  00476E  0A0B               	xorlw	11
  3958  004770  A4D8               	btfss	status,2,c
  3959  004772  D007               	goto	u3640
  3960  004774                     u3620:
  3961                           
  3962                           ;newmain.c: 1215: {
  3963                           ;newmain.c: 1216: if ( length )
  3964  004774  504B               	movf	MygetsI2C@length,w,c
  3965  004776  B4D8               	btfsc	status,2,c
  3966  004778  D004               	goto	u3640
  3967                           
  3968                           ;newmain.c: 1217: {
  3969                           ;newmain.c: 1218: SSPCON2bits.ACKDT = 0;
  3970  00477A  9AC5               	bcf	4037,5,c	;volatile
  3971                           
  3972                           ;newmain.c: 1219: SSPCON2bits.ACKEN = 1;
  3973  00477C  88C5               	bsf	4037,4,c	;volatile
  3974  00477E  B8C5               	btfsc	4037,4,c	;volatile
  3975  004780  D7FE               	goto	l571
  3976  004782                     u3640:
  3977  004782  064B               	decf	MygetsI2C@length,f,c
  3978  004784  284B               	incf	MygetsI2C@length,w,c
  3979  004786  A4D8               	btfss	status,2,c
  3980  004788  D7DC               	goto	l560
  3981                           
  3982                           ;newmain.c: 1221: }
  3983                           ;newmain.c: 1222: }
  3984                           ;newmain.c: 1224: }
  3985                           ;newmain.c: 1225: return ( 0 );
  3986  00478A  0E00               	movlw	0
  3987  00478C  0012               	return	
  3988  00478E                     __end_of_MygetsI2C:
  3989                           	opt stack 0
  3990                           tblptru	equ	0xFF8
  3991                           tblptrh	equ	0xFF7
  3992                           tblptrl	equ	0xFF6
  3993                           tablat	equ	0xFF5
  3994                           postinc0	equ	0xFEE
  3995                           wreg	equ	0xFE8
  3996                           postinc1	equ	0xFE6
  3997                           fsr1h	equ	0xFE2
  3998                           fsr1l	equ	0xFE1
  3999                           indf2	equ	0xFDF
  4000                           postinc2	equ	0xFDE
  4001                           fsr2h	equ	0xFDA
  4002                           fsr2l	equ	0xFD9
  4003                           status	equ	0xFD8
  4004                           
  4005 ;; *************** function _MyReadI2C *****************
  4006 ;; Defined at:
  4007 ;;		line 1232 in file "newmain.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;		None
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;		None
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  1    wreg      unsigned char 
  4014 ;; Registers used:
  4015 ;;		wreg, status,2, status,0
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4021 ;;      Params:         0       0       0       0       0       0       0
  4022 ;;      Locals:         0       0       0       0       0       0       0
  4023 ;;      Temps:          0       0       0       0       0       0       0
  4024 ;;      Totals:         0       0       0       0       0       0       0
  4025 ;;Total ram usage:        0 bytes
  4026 ;; Hardware stack levels used:    1
  4027 ;; This function calls:
  4028 ;;		Nothing
  4029 ;; This function is called by:
  4030 ;;		_MygetsI2C
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           	psect	text5
  4035  00464C                     __ptext5:
  4036                           	opt stack 0
  4037  00464C                     _MyReadI2C:
  4038                           	opt stack 28
  4039                           
  4040                           ;newmain.c: 1234: if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
  4041                           
  4042                           ;incstack = 0
  4043  00464C  50C6               	movf	4038,w,c	;volatile
  4044  00464E  0B0F               	andlw	15
  4045  004650  0A08               	xorlw	8
  4046  004652  B4D8               	btfsc	status,2,c
  4047  004654  D004               	goto	u3500
  4048  004656  50C6               	movf	4038,w,c	;volatile
  4049  004658  0B0F               	andlw	15
  4050  00465A  0A0B               	xorlw	11
  4051  00465C  B4D8               	btfsc	status,2,c
  4052  00465E                     u3500:
  4053                           
  4054                           ;newmain.c: 1235: SSPCON2bits.RCEN = 1;
  4055  00465E  86C5               	bsf	4037,3,c	;volatile
  4056  004660                     
  4057                           ;newmain.c: 1236: while ( !SSPSTATbits.BF );
  4058  004660  A0C7               	btfss	4039,0,c	;volatile
  4059  004662  D7FE               	goto	l579
  4060                           
  4061                           ;newmain.c: 1237: return ( SSPBUF );
  4062  004664  50C9               	movf	4041,w,c	;volatile
  4063  004666  0012               	return	
  4064  004668                     __end_of_MyReadI2C:
  4065                           	opt stack 0
  4066                           tblptru	equ	0xFF8
  4067                           tblptrh	equ	0xFF7
  4068                           tblptrl	equ	0xFF6
  4069                           tablat	equ	0xFF5
  4070                           postinc0	equ	0xFEE
  4071                           wreg	equ	0xFE8
  4072                           postinc1	equ	0xFE6
  4073                           fsr1h	equ	0xFE2
  4074                           fsr1l	equ	0xFE1
  4075                           indf2	equ	0xFDF
  4076                           postinc2	equ	0xFDE
  4077                           fsr2h	equ	0xFDA
  4078                           fsr2l	equ	0xFD9
  4079                           status	equ	0xFD8
  4080                           
  4081 ;; *************** function _MyNotAckI2C *****************
  4082 ;; Defined at:
  4083 ;;		line 1227 in file "newmain.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;		None
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;		None
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  1    wreg      void 
  4090 ;; Registers used:
  4091 ;;		None
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4097 ;;      Params:         0       0       0       0       0       0       0
  4098 ;;      Locals:         0       0       0       0       0       0       0
  4099 ;;      Temps:          0       0       0       0       0       0       0
  4100 ;;      Totals:         0       0       0       0       0       0       0
  4101 ;;Total ram usage:        0 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; This function calls:
  4104 ;;		Nothing
  4105 ;; This function is called by:
  4106 ;;		_read_switch
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text6
  4111  004634                     __ptext6:
  4112                           	opt stack 0
  4113  004634                     _MyNotAckI2C:
  4114                           	opt stack 29
  4115                           
  4116                           ;newmain.c: 1229: SSPCON2bits.ACKDT = 1;
  4117                           
  4118                           ;incstack = 0
  4119  004634  8AC5               	bsf	4037,5,c	;volatile
  4120                           
  4121                           ;newmain.c: 1230: SSPCON2bits.ACKEN = 1;
  4122  004636  88C5               	bsf	4037,4,c	;volatile
  4123  004638  0012               	return		;funcret
  4124  00463A                     __end_of_MyNotAckI2C:
  4125                           	opt stack 0
  4126                           tblptru	equ	0xFF8
  4127                           tblptrh	equ	0xFF7
  4128                           tblptrl	equ	0xFF6
  4129                           tablat	equ	0xFF5
  4130                           postinc0	equ	0xFEE
  4131                           wreg	equ	0xFE8
  4132                           postinc1	equ	0xFE6
  4133                           fsr1h	equ	0xFE2
  4134                           fsr1l	equ	0xFE1
  4135                           indf2	equ	0xFDF
  4136                           postinc2	equ	0xFDE
  4137                           fsr2h	equ	0xFDA
  4138                           fsr2l	equ	0xFD9
  4139                           status	equ	0xFD8
  4140                           
  4141 ;; *************** function _is_key_pressed *****************
  4142 ;; Defined at:
  4143 ;;		line 1047 in file "newmain.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;  k               1    wreg     unsigned char 
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;  k               1   18[COMRAM] unsigned char 
  4148 ;;  led             2   16[COMRAM] int 
  4149 ;;  matrix          2   14[COMRAM] int 
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  1    wreg      unsigned char 
  4152 ;; Registers used:
  4153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4159 ;;      Params:         0       0       0       0       0       0       0
  4160 ;;      Locals:         5       0       0       0       0       0       0
  4161 ;;      Temps:          8       0       0       0       0       0       0
  4162 ;;      Totals:        13       0       0       0       0       0       0
  4163 ;;Total ram usage:       13 bytes
  4164 ;; Hardware stack levels used:    1
  4165 ;; Hardware stack levels required when called:    1
  4166 ;; This function calls:
  4167 ;;		___wmul
  4168 ;; This function is called by:
  4169 ;;		_main
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173                           	psect	text7
  4174  004870                     __ptext7:
  4175                           	opt stack 0
  4176  004870                     _is_key_pressed:
  4177                           	opt stack 29
  4178                           
  4179                           ;incstack = 0
  4180                           ;is_key_pressed@k stored from wreg
  4181  004870  6E55               	movwf	is_key_pressed@k,c
  4182                           
  4183                           ;newmain.c: 1049: int matrix=k>>4;
  4184  004872  C055  F049         	movff	is_key_pressed@k,??_is_key_pressed
  4185  004876  3A49               	swapf	??_is_key_pressed,f,c
  4186  004878  0E0F               	movlw	15
  4187  00487A  1649               	andwf	??_is_key_pressed,f,c
  4188  00487C  5049               	movf	??_is_key_pressed,w,c
  4189  00487E  6E51               	movwf	is_key_pressed@matrix,c
  4190  004880  6A52               	clrf	is_key_pressed@matrix+1,c
  4191                           
  4192                           ;newmain.c: 1050: int led=k&0b1111;
  4193  004882  C055  F049         	movff	is_key_pressed@k,??_is_key_pressed
  4194  004886  0E0F               	movlw	15
  4195  004888  1649               	andwf	??_is_key_pressed,f,c
  4196  00488A  5049               	movf	??_is_key_pressed,w,c
  4197  00488C  6E53               	movwf	is_key_pressed@led,c
  4198  00488E  6A54               	clrf	is_key_pressed@led+1,c
  4199                           
  4200                           ;newmain.c: 1051: return (matrices[matrix].keys[buttonLUT[led]>>4]&(1<<(buttonLUT[led]&0
      +                          x0f)));
  4201  004890  C051  F043         	movff	is_key_pressed@matrix,___wmul@multiplier
  4202  004894  C052  F044         	movff	is_key_pressed@matrix+1,___wmul@multiplier+1
  4203  004898  0E00               	movlw	0
  4204  00489A  6E46               	movwf	___wmul@multiplicand+1,c
  4205  00489C  0E1D               	movlw	29
  4206  00489E  6E45               	movwf	___wmul@multiplicand,c
  4207  0048A0  EC54  F023         	call	___wmul	;wreg free
  4208  0048A4  0EDF               	movlw	low _buttonLUT
  4209  0048A6  2453               	addwf	is_key_pressed@led,w,c
  4210  0048A8  6EF6               	movwf	tblptrl,c
  4211  0048AA  0E7C               	movlw	high _buttonLUT
  4212  0048AC  2054               	addwfc	is_key_pressed@led+1,w,c
  4213  0048AE  6EF7               	movwf	tblptrh,c
  4214  0048B0                     	if	0	;There are less than 3 active tblptr bytes
  4215  0048B0                     	endif
  4216  0048B0  0008               	tblrd		*
  4217  0048B2  CFF5 F049          	movff	tablat,??_is_key_pressed
  4218  0048B6  3849               	swapf	??_is_key_pressed,w,c
  4219  0048B8  0B0F               	andlw	15
  4220  0048BA  6E4A               	movwf	(??_is_key_pressed+1)& (0+255),c
  4221  0048BC  6A4B               	clrf	(??_is_key_pressed+2)& (0+255),c
  4222  0048BE  0E01               	movlw	1
  4223  0048C0  264A               	addwf	??_is_key_pressed+1,f,c
  4224  0048C2  0E00               	movlw	0
  4225  0048C4  224B               	addwfc	??_is_key_pressed+2,f,c
  4226  0048C6  0E80               	movlw	low _matrices
  4227  0048C8  6E4C               	movwf	(??_is_key_pressed+3)& (0+255),c
  4228  0048CA  0E00               	movlw	high _matrices
  4229  0048CC  6E4D               	movwf	(??_is_key_pressed+4)& (0+255),c
  4230  0048CE  504A               	movf	??_is_key_pressed+1,w,c
  4231  0048D0  264C               	addwf	??_is_key_pressed+3,f,c
  4232  0048D2  504B               	movf	??_is_key_pressed+2,w,c
  4233  0048D4  224D               	addwfc	??_is_key_pressed+4,f,c
  4234  0048D6  5043               	movf	?___wmul,w,c
  4235  0048D8  244C               	addwf	??_is_key_pressed+3,w,c
  4236  0048DA  6ED9               	movwf	fsr2l,c
  4237  0048DC  5044               	movf	?___wmul+1,w,c
  4238  0048DE  204D               	addwfc	??_is_key_pressed+4,w,c
  4239  0048E0  6EDA               	movwf	fsr2h,c
  4240  0048E2  50DF               	movf	indf2,w,c
  4241  0048E4  6E4E               	movwf	(??_is_key_pressed+5)& (0+255),c
  4242  0048E6  0EDF               	movlw	low _buttonLUT
  4243  0048E8  2453               	addwf	is_key_pressed@led,w,c
  4244  0048EA  6EF6               	movwf	tblptrl,c
  4245  0048EC  0E7C               	movlw	high _buttonLUT
  4246  0048EE  2054               	addwfc	is_key_pressed@led+1,w,c
  4247  0048F0  6EF7               	movwf	tblptrh,c
  4248  0048F2                     	if	0	;There are less than 3 active tblptr bytes
  4249  0048F2                     	endif
  4250  0048F2  0008               	tblrd		*
  4251  0048F4  CFF5 F04F          	movff	tablat,??_is_key_pressed+6
  4252  0048F8  0E0F               	movlw	15
  4253  0048FA  164F               	andwf	??_is_key_pressed+6,f,c
  4254  0048FC  0E01               	movlw	1
  4255  0048FE  6E50               	movwf	(??_is_key_pressed+7)& (0+255),c
  4256  004900  2A4F               	incf	??_is_key_pressed+6,f,c
  4257  004902  D002               	goto	u3724
  4258  004904                     u3725:
  4259  004904  90D8               	bcf	status,0,c
  4260  004906  3650               	rlcf	??_is_key_pressed+7,f,c
  4261  004908                     u3724:
  4262  004908  2E4F               	decfsz	??_is_key_pressed+6,f,c
  4263  00490A  D7FC               	goto	u3725
  4264  00490C  5050               	movf	??_is_key_pressed+7,w,c
  4265  00490E  144E               	andwf	??_is_key_pressed+5,w,c
  4266  004910  0012               	return	
  4267  004912                     __end_of_is_key_pressed:
  4268                           	opt stack 0
  4269                           tblptru	equ	0xFF8
  4270                           tblptrh	equ	0xFF7
  4271                           tblptrl	equ	0xFF6
  4272                           tablat	equ	0xFF5
  4273                           postinc0	equ	0xFEE
  4274                           wreg	equ	0xFE8
  4275                           postinc1	equ	0xFE6
  4276                           fsr1h	equ	0xFE2
  4277                           fsr1l	equ	0xFE1
  4278                           indf2	equ	0xFDF
  4279                           postinc2	equ	0xFDE
  4280                           fsr2h	equ	0xFDA
  4281                           fsr2l	equ	0xFD9
  4282                           status	equ	0xFD8
  4283                           
  4284 ;; *************** function _animation7 *****************
  4285 ;; Defined at:
  4286 ;;		line 957 in file "newmain.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;  h               1    wreg     unsigned char 
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;  h               1   23[COMRAM] unsigned char 
  4291 ;;  j               2   26[COMRAM] int 
  4292 ;;  i               2   24[COMRAM] int 
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4302 ;;      Params:         0       0       0       0       0       0       0
  4303 ;;      Locals:         5       0       0       0       0       0       0
  4304 ;;      Temps:          2       0       0       0       0       0       0
  4305 ;;      Totals:         7       0       0       0       0       0       0
  4306 ;;Total ram usage:        7 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:    4
  4309 ;; This function calls:
  4310 ;;		___wmul
  4311 ;;		_clr_led
  4312 ;;		_set_led
  4313 ;;		_write_display
  4314 ;; This function is called by:
  4315 ;;		_main
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           	psect	text8
  4320  005CD6                     __ptext8:
  4321                           	opt stack 0
  4322  005CD6                     _animation7:
  4323                           	opt stack 26
  4324                           
  4325                           ;incstack = 0
  4326                           ;animation7@h stored from wreg
  4327  005CD6  6E5A               	movwf	animation7@h,c
  4328                           
  4329                           ;newmain.c: 958: int i = 0, j = 0;
  4330  005CD8  0E00               	movlw	0
  4331  005CDA  6E5C               	movwf	animation7@i+1,c
  4332  005CDC  0E00               	movlw	0
  4333  005CDE  6E5B               	movwf	animation7@i,c
  4334  005CE0  0E00               	movlw	0
  4335  005CE2  6E5E               	movwf	animation7@j+1,c
  4336  005CE4  0E00               	movlw	0
  4337  005CE6  6E5D               	movwf	animation7@j,c
  4338                           
  4339                           ;newmain.c: 959: if (h == 15 || h == 28 || h == 35 || h == 48 || h == 10 || h == 11 || h
      +                           == 24 || h == 25 || h == 14 || h == 34 || h == 38 || h == 39 || h == 52 || h == 53 || h
      +                           == 29 || h == 49) {
  4340  005CE8  0E0F               	movlw	15
  4341  005CEA  185A               	xorwf	animation7@h,w,c
  4342  005CEC  B4D8               	btfsc	status,2,c
  4343  005CEE  D03C               	goto	u5690
  4344  005CF0  0E1C               	movlw	28
  4345  005CF2  185A               	xorwf	animation7@h,w,c
  4346  005CF4  B4D8               	btfsc	status,2,c
  4347  005CF6  D038               	goto	u5690
  4348  005CF8  0E23               	movlw	35
  4349  005CFA  185A               	xorwf	animation7@h,w,c
  4350  005CFC  B4D8               	btfsc	status,2,c
  4351  005CFE  D034               	goto	u5690
  4352  005D00  0E30               	movlw	48
  4353  005D02  185A               	xorwf	animation7@h,w,c
  4354  005D04  B4D8               	btfsc	status,2,c
  4355  005D06  D030               	goto	u5690
  4356  005D08  0E0A               	movlw	10
  4357  005D0A  185A               	xorwf	animation7@h,w,c
  4358  005D0C  B4D8               	btfsc	status,2,c
  4359  005D0E  D02C               	goto	u5690
  4360  005D10  0E0B               	movlw	11
  4361  005D12  185A               	xorwf	animation7@h,w,c
  4362  005D14  B4D8               	btfsc	status,2,c
  4363  005D16  D028               	goto	u5690
  4364  005D18  0E18               	movlw	24
  4365  005D1A  185A               	xorwf	animation7@h,w,c
  4366  005D1C  B4D8               	btfsc	status,2,c
  4367  005D1E  D024               	goto	u5690
  4368  005D20  0E19               	movlw	25
  4369  005D22  185A               	xorwf	animation7@h,w,c
  4370  005D24  B4D8               	btfsc	status,2,c
  4371  005D26  D020               	goto	u5690
  4372  005D28  0E0E               	movlw	14
  4373  005D2A  185A               	xorwf	animation7@h,w,c
  4374  005D2C  B4D8               	btfsc	status,2,c
  4375  005D2E  D01C               	goto	u5690
  4376  005D30  0E22               	movlw	34
  4377  005D32  185A               	xorwf	animation7@h,w,c
  4378  005D34  B4D8               	btfsc	status,2,c
  4379  005D36  D018               	goto	u5690
  4380  005D38  0E26               	movlw	38
  4381  005D3A  185A               	xorwf	animation7@h,w,c
  4382  005D3C  B4D8               	btfsc	status,2,c
  4383  005D3E  D014               	goto	u5690
  4384  005D40  0E27               	movlw	39
  4385  005D42  185A               	xorwf	animation7@h,w,c
  4386  005D44  B4D8               	btfsc	status,2,c
  4387  005D46  D010               	goto	u5690
  4388  005D48  0E34               	movlw	52
  4389  005D4A  185A               	xorwf	animation7@h,w,c
  4390  005D4C  B4D8               	btfsc	status,2,c
  4391  005D4E  D00C               	goto	u5690
  4392  005D50  0E35               	movlw	53
  4393  005D52  185A               	xorwf	animation7@h,w,c
  4394  005D54  B4D8               	btfsc	status,2,c
  4395  005D56  D008               	goto	u5690
  4396  005D58  0E1D               	movlw	29
  4397  005D5A  185A               	xorwf	animation7@h,w,c
  4398  005D5C  B4D8               	btfsc	status,2,c
  4399  005D5E  D004               	goto	u5690
  4400  005D60  0E31               	movlw	49
  4401  005D62  185A               	xorwf	animation7@h,w,c
  4402  005D64  A4D8               	btfss	status,2,c
  4403  005D66  D09A               	goto	l439
  4404  005D68                     u5690:
  4405                           
  4406                           ;newmain.c: 960: for (i = 0; i < 4; i++) {
  4407  005D68  0E00               	movlw	0
  4408  005D6A  6E5C               	movwf	animation7@i+1,c
  4409  005D6C  0E00               	movlw	0
  4410  005D6E  6E5B               	movwf	animation7@i,c
  4411  005D70  BE5C               	btfsc	animation7@i+1,7,c
  4412  005D72  D008               	goto	l442
  4413  005D74  505C               	movf	animation7@i+1,w,c
  4414  005D76  E105               	bnz	u5700
  4415  005D78  0E04               	movlw	4
  4416  005D7A  5C5B               	subwf	animation7@i,w,c
  4417  005D7C  B0D8               	btfsc	status,0,c
  4418  005D7E  0012               	return	
  4419  005D80  D001               	goto	l442
  4420  005D82                     u5700:
  4421  005D82  0012               	return	
  4422  005D84                     l442:
  4423                           
  4424                           ;newmain.c: 961: for (j = 0; j < 29; j++) {
  4425  005D84  0E00               	movlw	0
  4426  005D86  6E5E               	movwf	animation7@j+1,c
  4427  005D88  0E00               	movlw	0
  4428  005D8A  6E5D               	movwf	animation7@j,c
  4429  005D8C                     l4394:
  4430  005D8C  BE5E               	btfsc	animation7@j+1,7,c
  4431  005D8E  D006               	goto	l444
  4432  005D90  505E               	movf	animation7@j+1,w,c
  4433  005D92  E144               	bnz	l4406
  4434  005D94  0E1D               	movlw	29
  4435  005D96  5C5D               	subwf	animation7@j,w,c
  4436  005D98  B0D8               	btfsc	status,0,c
  4437  005D9A  D040               	goto	u5730
  4438  005D9C                     l444:
  4439                           
  4440                           ;newmain.c: 962: if (show7_1[i][j] != 100)
  4441  005D9C  C05B  F043         	movff	animation7@i,___wmul@multiplier
  4442  005DA0  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  4443  005DA4  0E00               	movlw	0
  4444  005DA6  6E46               	movwf	___wmul@multiplicand+1,c
  4445  005DA8  0E1D               	movlw	29
  4446  005DAA  6E45               	movwf	___wmul@multiplicand,c
  4447  005DAC  EC54  F023         	call	___wmul	;wreg free
  4448  005DB0  0E4D               	movlw	low _show7_1
  4449  005DB2  6E58               	movwf	??_animation7& (0+255),c
  4450  005DB4  0E79               	movlw	high _show7_1
  4451  005DB6  6E59               	movwf	(??_animation7+1)& (0+255),c
  4452  005DB8  5043               	movf	?___wmul,w,c
  4453  005DBA  2658               	addwf	??_animation7,f,c
  4454  005DBC  5044               	movf	?___wmul+1,w,c
  4455  005DBE  2259               	addwfc	??_animation7+1,f,c
  4456  005DC0  505D               	movf	animation7@j,w,c
  4457  005DC2  2658               	addwf	??_animation7,f,c
  4458  005DC4  505E               	movf	animation7@j+1,w,c
  4459  005DC6  2259               	addwfc	??_animation7+1,f,c
  4460  005DC8  C058  FFF6         	movff	??_animation7,tblptrl
  4461  005DCC  C059  FFF7         	movff	??_animation7+1,tblptrh
  4462  005DD0                     	if	0	;tblptru may be non-zero
  4463  005DD0                     	endif
  4464  005DD0                     	if	0	;tblptru may be non-zero
  4465  005DD0                     	endif
  4466  005DD0  0008               	tblrd		*
  4467  005DD2  50F5               	movf	tablat,w,c
  4468  005DD4  0A64               	xorlw	100
  4469  005DD6  B4D8               	btfsc	status,2,c
  4470  005DD8  D01E               	goto	l446
  4471                           
  4472                           ;newmain.c: 963: set_led(show7_1[i][j]);
  4473  005DDA  C05B  F043         	movff	animation7@i,___wmul@multiplier
  4474  005DDE  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  4475  005DE2  0E00               	movlw	0
  4476  005DE4  6E46               	movwf	___wmul@multiplicand+1,c
  4477  005DE6  0E1D               	movlw	29
  4478  005DE8  6E45               	movwf	___wmul@multiplicand,c
  4479  005DEA  EC54  F023         	call	___wmul	;wreg free
  4480  005DEE  0E4D               	movlw	low _show7_1
  4481  005DF0  6E58               	movwf	??_animation7& (0+255),c
  4482  005DF2  0E79               	movlw	high _show7_1
  4483  005DF4  6E59               	movwf	(??_animation7+1)& (0+255),c
  4484  005DF6  5043               	movf	?___wmul,w,c
  4485  005DF8  2658               	addwf	??_animation7,f,c
  4486  005DFA  5044               	movf	?___wmul+1,w,c
  4487  005DFC  2259               	addwfc	??_animation7+1,f,c
  4488  005DFE  505D               	movf	animation7@j,w,c
  4489  005E00  2658               	addwf	??_animation7,f,c
  4490  005E02  505E               	movf	animation7@j+1,w,c
  4491  005E04  2259               	addwfc	??_animation7+1,f,c
  4492  005E06  C058  FFF6         	movff	??_animation7,tblptrl
  4493  005E0A  C059  FFF7         	movff	??_animation7+1,tblptrh
  4494  005E0E                     	if	0	;tblptru may be non-zero
  4495  005E0E                     	endif
  4496  005E0E                     	if	0	;tblptru may be non-zero
  4497  005E0E                     	endif
  4498  005E0E  0008               	tblrd		*
  4499  005E10  50F5               	movf	tablat,w,c
  4500  005E12  ECDA  F024         	call	_set_led
  4501  005E16                     l446:
  4502  005E16  4A5D               	infsnz	animation7@j,f,c
  4503  005E18  2A5E               	incf	animation7@j+1,f,c
  4504  005E1A  D7B8               	goto	l4394
  4505  005E1C                     u5730:
  4506  005E1C                     l4406:
  4507                           
  4508                           ;newmain.c: 964: }
  4509                           ;newmain.c: 965: write_display();
  4510  005E1C  EC8C  F025         	call	_write_display	;wreg free
  4511                           
  4512                           ;newmain.c: 966: _delay((unsigned long)((40)*(4000000/4000.0)));
  4513  005E20  0E34               	movlw	52
  4514  005E22  6E58               	movwf	??_animation7& (0+255),c
  4515  005E24  0EF2               	movlw	242
  4516  005E26                     u6727:
  4517  005E26  2EE8               	decfsz	wreg,f,c
  4518  005E28  D7FE               	bra	u6727
  4519  005E2A  2E58               	decfsz	??_animation7& (0+255),f,c
  4520  005E2C  D7FC               	bra	u6727
  4521                           
  4522                           ;newmain.c: 967: for (j = 0; j < 29; j++)
  4523  005E2E  0E00               	movlw	0
  4524  005E30  6E5E               	movwf	animation7@j+1,c
  4525  005E32  0E00               	movlw	0
  4526  005E34  6E5D               	movwf	animation7@j,c
  4527  005E36                     l4412:
  4528  005E36  BE5E               	btfsc	animation7@j+1,7,c
  4529  005E38  D006               	goto	l447
  4530  005E3A  505E               	movf	animation7@j+1,w,c
  4531  005E3C  E125               	bnz	l4422
  4532  005E3E  0E1D               	movlw	29
  4533  005E40  5C5D               	subwf	animation7@j,w,c
  4534  005E42  B0D8               	btfsc	status,0,c
  4535  005E44  D021               	goto	u5750
  4536  005E46                     l447:
  4537                           
  4538                           ;newmain.c: 968: clr_led(show7_1[i][j]);
  4539  005E46  C05B  F043         	movff	animation7@i,___wmul@multiplier
  4540  005E4A  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  4541  005E4E  0E00               	movlw	0
  4542  005E50  6E46               	movwf	___wmul@multiplicand+1,c
  4543  005E52  0E1D               	movlw	29
  4544  005E54  6E45               	movwf	___wmul@multiplicand,c
  4545  005E56  EC54  F023         	call	___wmul	;wreg free
  4546  005E5A  0E4D               	movlw	low _show7_1
  4547  005E5C  6E58               	movwf	??_animation7& (0+255),c
  4548  005E5E  0E79               	movlw	high _show7_1
  4549  005E60  6E59               	movwf	(??_animation7+1)& (0+255),c
  4550  005E62  5043               	movf	?___wmul,w,c
  4551  005E64  2658               	addwf	??_animation7,f,c
  4552  005E66  5044               	movf	?___wmul+1,w,c
  4553  005E68  2259               	addwfc	??_animation7+1,f,c
  4554  005E6A  505D               	movf	animation7@j,w,c
  4555  005E6C  2658               	addwf	??_animation7,f,c
  4556  005E6E  505E               	movf	animation7@j+1,w,c
  4557  005E70  2259               	addwfc	??_animation7+1,f,c
  4558  005E72  C058  FFF6         	movff	??_animation7,tblptrl
  4559  005E76  C059  FFF7         	movff	??_animation7+1,tblptrh
  4560  005E7A                     	if	0	;tblptru may be non-zero
  4561  005E7A                     	endif
  4562  005E7A                     	if	0	;tblptru may be non-zero
  4563  005E7A                     	endif
  4564  005E7A  0008               	tblrd		*
  4565  005E7C  50F5               	movf	tablat,w,c
  4566  005E7E  EC31  F025         	call	_clr_led
  4567  005E82  4A5D               	infsnz	animation7@j,f,c
  4568  005E84  2A5E               	incf	animation7@j+1,f,c
  4569  005E86  D7D7               	goto	l4412
  4570  005E88                     u5750:
  4571  005E88                     l4422:
  4572                           
  4573                           ;newmain.c: 969: write_display();
  4574  005E88  EC8C  F025         	call	_write_display	;wreg free
  4575  005E8C  4A5B               	infsnz	animation7@i,f,c
  4576  005E8E  2A5C               	incf	animation7@i+1,f,c
  4577  005E90  BE5C               	btfsc	animation7@i+1,7,c
  4578  005E92  D778               	goto	l442
  4579  005E94  505C               	movf	animation7@i+1,w,c
  4580  005E96  E101               	bnz	u5760
  4581  005E98  D76F               	goto	L5
  4582  005E9A                     u5760:
  4583                           
  4584                           ;newmain.c: 970: }
  4585                           ;newmain.c: 971: } else {
  4586  005E9A  0012               	return	
  4587  005E9C                     l439:
  4588                           
  4589                           ;newmain.c: 973: if (count == 0) {
  4590  005E9C  5041               	movf	_count,w,c
  4591  005E9E  1042               	iorwf	_count+1,w,c
  4592  005EA0  A4D8               	btfss	status,2,c
  4593  005EA2  D0BE               	goto	l450
  4594                           
  4595                           ;newmain.c: 974: for (i = 0; i < 9; i++) {
  4596  005EA4  0E00               	movlw	0
  4597  005EA6  6E5C               	movwf	animation7@i+1,c
  4598  005EA8  0E00               	movlw	0
  4599  005EAA  6E5B               	movwf	animation7@i,c
  4600  005EAC  BE5C               	btfsc	animation7@i+1,7,c
  4601  005EAE  D008               	goto	l451
  4602  005EB0  505C               	movf	animation7@i+1,w,c
  4603  005EB2  E105               	bnz	u5780
  4604  005EB4  0E09               	movlw	9
  4605  005EB6  5C5B               	subwf	animation7@i,w,c
  4606  005EB8  B0D8               	btfsc	status,0,c
  4607  005EBA  D0AD               	goto	u5850
  4608  005EBC  D001               	goto	l451
  4609  005EBE                     u5780:
  4610  005EBE  D0AB               	goto	u5850
  4611  005EC0                     l451:
  4612                           
  4613                           ;newmain.c: 975: for (j = 0; j < 24; j++) {
  4614  005EC0  0E00               	movlw	0
  4615  005EC2  6E5E               	movwf	animation7@j+1,c
  4616  005EC4  0E00               	movlw	0
  4617  005EC6  6E5D               	movwf	animation7@j,c
  4618  005EC8                     l4438:
  4619  005EC8  BE5E               	btfsc	animation7@j+1,7,c
  4620  005ECA  D006               	goto	l453
  4621  005ECC  505E               	movf	animation7@j+1,w,c
  4622  005ECE  E144               	bnz	l4450
  4623  005ED0  0E18               	movlw	24
  4624  005ED2  5C5D               	subwf	animation7@j,w,c
  4625  005ED4  B0D8               	btfsc	status,0,c
  4626  005ED6  D040               	goto	u5810
  4627  005ED8                     l453:
  4628                           
  4629                           ;newmain.c: 976: if (show7_2[i][j] != 100)
  4630  005ED8  C05B  F043         	movff	animation7@i,___wmul@multiplier
  4631  005EDC  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  4632  005EE0  0E00               	movlw	0
  4633  005EE2  6E46               	movwf	___wmul@multiplicand+1,c
  4634  005EE4  0E18               	movlw	24
  4635  005EE6  6E45               	movwf	___wmul@multiplicand,c
  4636  005EE8  EC54  F023         	call	___wmul	;wreg free
  4637  005EEC  0EFD               	movlw	low _show7_2
  4638  005EEE  6E58               	movwf	??_animation7& (0+255),c
  4639  005EF0  0E77               	movlw	high _show7_2
  4640  005EF2  6E59               	movwf	(??_animation7+1)& (0+255),c
  4641  005EF4  5043               	movf	?___wmul,w,c
  4642  005EF6  2658               	addwf	??_animation7,f,c
  4643  005EF8  5044               	movf	?___wmul+1,w,c
  4644  005EFA  2259               	addwfc	??_animation7+1,f,c
  4645  005EFC  505D               	movf	animation7@j,w,c
  4646  005EFE  2658               	addwf	??_animation7,f,c
  4647  005F00  505E               	movf	animation7@j+1,w,c
  4648  005F02  2259               	addwfc	??_animation7+1,f,c
  4649  005F04  C058  FFF6         	movff	??_animation7,tblptrl
  4650  005F08  C059  FFF7         	movff	??_animation7+1,tblptrh
  4651  005F0C                     	if	0	;tblptru may be non-zero
  4652  005F0C                     	endif
  4653  005F0C                     	if	0	;tblptru may be non-zero
  4654  005F0C                     	endif
  4655  005F0C  0008               	tblrd		*
  4656  005F0E  50F5               	movf	tablat,w,c
  4657  005F10  0A64               	xorlw	100
  4658  005F12  B4D8               	btfsc	status,2,c
  4659  005F14  D01E               	goto	l455
  4660                           
  4661                           ;newmain.c: 977: set_led(show7_2[i][j]);
  4662  005F16  C05B  F043         	movff	animation7@i,___wmul@multiplier
  4663  005F1A  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  4664  005F1E  0E00               	movlw	0
  4665  005F20  6E46               	movwf	___wmul@multiplicand+1,c
  4666  005F22  0E18               	movlw	24
  4667  005F24  6E45               	movwf	___wmul@multiplicand,c
  4668  005F26  EC54  F023         	call	___wmul	;wreg free
  4669  005F2A  0EFD               	movlw	low _show7_2
  4670  005F2C  6E58               	movwf	??_animation7& (0+255),c
  4671  005F2E  0E77               	movlw	high _show7_2
  4672  005F30  6E59               	movwf	(??_animation7+1)& (0+255),c
  4673  005F32  5043               	movf	?___wmul,w,c
  4674  005F34  2658               	addwf	??_animation7,f,c
  4675  005F36  5044               	movf	?___wmul+1,w,c
  4676  005F38  2259               	addwfc	??_animation7+1,f,c
  4677  005F3A  505D               	movf	animation7@j,w,c
  4678  005F3C  2658               	addwf	??_animation7,f,c
  4679  005F3E  505E               	movf	animation7@j+1,w,c
  4680  005F40  2259               	addwfc	??_animation7+1,f,c
  4681  005F42  C058  FFF6         	movff	??_animation7,tblptrl
  4682  005F46  C059  FFF7         	movff	??_animation7+1,tblptrh
  4683  005F4A                     	if	0	;tblptru may be non-zero
  4684  005F4A                     	endif
  4685  005F4A                     	if	0	;tblptru may be non-zero
  4686  005F4A                     	endif
  4687  005F4A  0008               	tblrd		*
  4688  005F4C  50F5               	movf	tablat,w,c
  4689  005F4E  ECDA  F024         	call	_set_led
  4690  005F52                     l455:
  4691  005F52  4A5D               	infsnz	animation7@j,f,c
  4692  005F54  2A5E               	incf	animation7@j+1,f,c
  4693  005F56  D7B8               	goto	l4438
  4694  005F58                     u5810:
  4695  005F58                     l4450:
  4696                           
  4697                           ;newmain.c: 978: }
  4698                           ;newmain.c: 979: write_display();
  4699  005F58  EC8C  F025         	call	_write_display	;wreg free
  4700                           
  4701                           ;newmain.c: 980: _delay((unsigned long)((50)*(4000000/4000.0)));
  4702  005F5C  0E41               	movlw	65
  4703  005F5E  6E58               	movwf	??_animation7& (0+255),c
  4704  005F60  0EEE               	movlw	238
  4705  005F62                     u6737:
  4706  005F62  2EE8               	decfsz	wreg,f,c
  4707  005F64  D7FE               	bra	u6737
  4708  005F66  2E58               	decfsz	??_animation7& (0+255),f,c
  4709  005F68  D7FC               	bra	u6737
  4710  005F6A  D000               	nop2	
  4711                           
  4712                           ;newmain.c: 981: for (j = 0; j < 24; j++)
  4713  005F6C  0E00               	movlw	0
  4714  005F6E  6E5E               	movwf	animation7@j+1,c
  4715  005F70  0E00               	movlw	0
  4716  005F72  6E5D               	movwf	animation7@j,c
  4717  005F74                     l4456:
  4718  005F74  BE5E               	btfsc	animation7@j+1,7,c
  4719  005F76  D006               	goto	l456
  4720  005F78  505E               	movf	animation7@j+1,w,c
  4721  005F7A  E144               	bnz	l4468
  4722  005F7C  0E18               	movlw	24
  4723  005F7E  5C5D               	subwf	animation7@j,w,c
  4724  005F80  B0D8               	btfsc	status,0,c
  4725  005F82  D040               	goto	u5840
  4726  005F84                     l456:
  4727                           
  4728                           ;newmain.c: 982: if (show7_2[i][j] != 100)
  4729  005F84  C05B  F043         	movff	animation7@i,___wmul@multiplier
  4730  005F88  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  4731  005F8C  0E00               	movlw	0
  4732  005F8E  6E46               	movwf	___wmul@multiplicand+1,c
  4733  005F90  0E18               	movlw	24
  4734  005F92  6E45               	movwf	___wmul@multiplicand,c
  4735  005F94  EC54  F023         	call	___wmul	;wreg free
  4736  005F98  0EFD               	movlw	low _show7_2
  4737  005F9A  6E58               	movwf	??_animation7& (0+255),c
  4738  005F9C  0E77               	movlw	high _show7_2
  4739  005F9E  6E59               	movwf	(??_animation7+1)& (0+255),c
  4740  005FA0  5043               	movf	?___wmul,w,c
  4741  005FA2  2658               	addwf	??_animation7,f,c
  4742  005FA4  5044               	movf	?___wmul+1,w,c
  4743  005FA6  2259               	addwfc	??_animation7+1,f,c
  4744  005FA8  505D               	movf	animation7@j,w,c
  4745  005FAA  2658               	addwf	??_animation7,f,c
  4746  005FAC  505E               	movf	animation7@j+1,w,c
  4747  005FAE  2259               	addwfc	??_animation7+1,f,c
  4748  005FB0  C058  FFF6         	movff	??_animation7,tblptrl
  4749  005FB4  C059  FFF7         	movff	??_animation7+1,tblptrh
  4750  005FB8                     	if	0	;tblptru may be non-zero
  4751  005FB8                     	endif
  4752  005FB8                     	if	0	;tblptru may be non-zero
  4753  005FB8                     	endif
  4754  005FB8  0008               	tblrd		*
  4755  005FBA  50F5               	movf	tablat,w,c
  4756  005FBC  0A64               	xorlw	100
  4757  005FBE  B4D8               	btfsc	status,2,c
  4758  005FC0  D01E               	goto	l458
  4759                           
  4760                           ;newmain.c: 983: clr_led(show7_2[i][j]);
  4761  005FC2  C05B  F043         	movff	animation7@i,___wmul@multiplier
  4762  005FC6  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  4763  005FCA  0E00               	movlw	0
  4764  005FCC  6E46               	movwf	___wmul@multiplicand+1,c
  4765  005FCE  0E18               	movlw	24
  4766  005FD0  6E45               	movwf	___wmul@multiplicand,c
  4767  005FD2  EC54  F023         	call	___wmul	;wreg free
  4768  005FD6  0EFD               	movlw	low _show7_2
  4769  005FD8  6E58               	movwf	??_animation7& (0+255),c
  4770  005FDA  0E77               	movlw	high _show7_2
  4771  005FDC  6E59               	movwf	(??_animation7+1)& (0+255),c
  4772  005FDE  5043               	movf	?___wmul,w,c
  4773  005FE0  2658               	addwf	??_animation7,f,c
  4774  005FE2  5044               	movf	?___wmul+1,w,c
  4775  005FE4  2259               	addwfc	??_animation7+1,f,c
  4776  005FE6  505D               	movf	animation7@j,w,c
  4777  005FE8  2658               	addwf	??_animation7,f,c
  4778  005FEA  505E               	movf	animation7@j+1,w,c
  4779  005FEC  2259               	addwfc	??_animation7+1,f,c
  4780  005FEE  C058  FFF6         	movff	??_animation7,tblptrl
  4781  005FF2  C059  FFF7         	movff	??_animation7+1,tblptrh
  4782  005FF6                     	if	0	;tblptru may be non-zero
  4783  005FF6                     	endif
  4784  005FF6                     	if	0	;tblptru may be non-zero
  4785  005FF6                     	endif
  4786  005FF6  0008               	tblrd		*
  4787  005FF8  50F5               	movf	tablat,w,c
  4788  005FFA  EC31  F025         	call	_clr_led
  4789  005FFE                     l458:
  4790  005FFE  4A5D               	infsnz	animation7@j,f,c
  4791  006000  2A5E               	incf	animation7@j+1,f,c
  4792  006002  D7B8               	goto	l4456
  4793  006004                     u5840:
  4794  006004                     l4468:
  4795                           
  4796                           ;newmain.c: 984: write_display();
  4797  006004  EC8C  F025         	call	_write_display	;wreg free
  4798  006008  4A5B               	infsnz	animation7@i,f,c
  4799  00600A  2A5C               	incf	animation7@i+1,f,c
  4800  00600C  BE5C               	btfsc	animation7@i+1,7,c
  4801  00600E  D758               	goto	l451
  4802  006010  505C               	movf	animation7@i+1,w,c
  4803  006012  E101               	bnz	l4474
  4804  006014  D74F               	goto	L6
  4805  006016                     u5850:
  4806  006016                     l4474:
  4807                           
  4808                           ;newmain.c: 985: }
  4809                           ;newmain.c: 986: count = 1;
  4810  006016  0E00               	movlw	0
  4811  006018  6E42               	movwf	_count+1,c
  4812  00601A  0E01               	movlw	1
  4813  00601C  6E41               	movwf	_count,c
  4814                           
  4815                           ;newmain.c: 988: } else if (count == 1) {
  4816  00601E  0012               	return	
  4817  006020                     l450:
  4818  006020  0441               	decf	_count,w,c
  4819  006022  1042               	iorwf	_count+1,w,c
  4820  006024  A4D8               	btfss	status,2,c
  4821  006026  0012               	return	
  4822                           
  4823                           ;newmain.c: 989: for (i = 8; i >= 0; i--) {
  4824  006028  0E00               	movlw	0
  4825  00602A  6E5C               	movwf	animation7@i+1,c
  4826  00602C  0E08               	movlw	8
  4827  00602E  6E5B               	movwf	animation7@i,c
  4828  006030                     l4480:
  4829  006030  BE5C               	btfsc	animation7@i+1,7,c
  4830  006032  D0A8               	goto	u5940
  4831                           
  4832                           ;newmain.c: 990: for (j = 0; j < 24; j++) {
  4833  006034  0E00               	movlw	0
  4834  006036  6E5E               	movwf	animation7@j+1,c
  4835  006038  0E00               	movlw	0
  4836  00603A  6E5D               	movwf	animation7@j,c
  4837  00603C                     l4486:
  4838  00603C  BE5E               	btfsc	animation7@j+1,7,c
  4839  00603E  D006               	goto	l463
  4840  006040  505E               	movf	animation7@j+1,w,c
  4841  006042  E144               	bnz	l4498
  4842  006044  0E18               	movlw	24
  4843  006046  5C5D               	subwf	animation7@j,w,c
  4844  006048  B0D8               	btfsc	status,0,c
  4845  00604A  D040               	goto	u5900
  4846  00604C                     l463:
  4847                           
  4848                           ;newmain.c: 991: if (show7_2[i][j] != 100)
  4849  00604C  C05B  F043         	movff	animation7@i,___wmul@multiplier
  4850  006050  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  4851  006054  0E00               	movlw	0
  4852  006056  6E46               	movwf	___wmul@multiplicand+1,c
  4853  006058  0E18               	movlw	24
  4854  00605A  6E45               	movwf	___wmul@multiplicand,c
  4855  00605C  EC54  F023         	call	___wmul	;wreg free
  4856  006060  0EFD               	movlw	low _show7_2
  4857  006062  6E58               	movwf	??_animation7& (0+255),c
  4858  006064  0E77               	movlw	high _show7_2
  4859  006066  6E59               	movwf	(??_animation7+1)& (0+255),c
  4860  006068  5043               	movf	?___wmul,w,c
  4861  00606A  2658               	addwf	??_animation7,f,c
  4862  00606C  5044               	movf	?___wmul+1,w,c
  4863  00606E  2259               	addwfc	??_animation7+1,f,c
  4864  006070  505D               	movf	animation7@j,w,c
  4865  006072  2658               	addwf	??_animation7,f,c
  4866  006074  505E               	movf	animation7@j+1,w,c
  4867  006076  2259               	addwfc	??_animation7+1,f,c
  4868  006078  C058  FFF6         	movff	??_animation7,tblptrl
  4869  00607C  C059  FFF7         	movff	??_animation7+1,tblptrh
  4870  006080                     	if	0	;tblptru may be non-zero
  4871  006080                     	endif
  4872  006080                     	if	0	;tblptru may be non-zero
  4873  006080                     	endif
  4874  006080  0008               	tblrd		*
  4875  006082  50F5               	movf	tablat,w,c
  4876  006084  0A64               	xorlw	100
  4877  006086  B4D8               	btfsc	status,2,c
  4878  006088  D01E               	goto	l465
  4879                           
  4880                           ;newmain.c: 992: set_led(show7_2[i][j]);
  4881  00608A  C05B  F043         	movff	animation7@i,___wmul@multiplier
  4882  00608E  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  4883  006092  0E00               	movlw	0
  4884  006094  6E46               	movwf	___wmul@multiplicand+1,c
  4885  006096  0E18               	movlw	24
  4886  006098  6E45               	movwf	___wmul@multiplicand,c
  4887  00609A  EC54  F023         	call	___wmul	;wreg free
  4888  00609E  0EFD               	movlw	low _show7_2
  4889  0060A0  6E58               	movwf	??_animation7& (0+255),c
  4890  0060A2  0E77               	movlw	high _show7_2
  4891  0060A4  6E59               	movwf	(??_animation7+1)& (0+255),c
  4892  0060A6  5043               	movf	?___wmul,w,c
  4893  0060A8  2658               	addwf	??_animation7,f,c
  4894  0060AA  5044               	movf	?___wmul+1,w,c
  4895  0060AC  2259               	addwfc	??_animation7+1,f,c
  4896  0060AE  505D               	movf	animation7@j,w,c
  4897  0060B0  2658               	addwf	??_animation7,f,c
  4898  0060B2  505E               	movf	animation7@j+1,w,c
  4899  0060B4  2259               	addwfc	??_animation7+1,f,c
  4900  0060B6  C058  FFF6         	movff	??_animation7,tblptrl
  4901  0060BA  C059  FFF7         	movff	??_animation7+1,tblptrh
  4902  0060BE                     	if	0	;tblptru may be non-zero
  4903  0060BE                     	endif
  4904  0060BE                     	if	0	;tblptru may be non-zero
  4905  0060BE                     	endif
  4906  0060BE  0008               	tblrd		*
  4907  0060C0  50F5               	movf	tablat,w,c
  4908  0060C2  ECDA  F024         	call	_set_led
  4909  0060C6                     l465:
  4910  0060C6  4A5D               	infsnz	animation7@j,f,c
  4911  0060C8  2A5E               	incf	animation7@j+1,f,c
  4912  0060CA  D7B8               	goto	l4486
  4913  0060CC                     u5900:
  4914  0060CC                     l4498:
  4915                           
  4916                           ;newmain.c: 993: }
  4917                           ;newmain.c: 994: write_display();
  4918  0060CC  EC8C  F025         	call	_write_display	;wreg free
  4919                           
  4920                           ;newmain.c: 995: _delay((unsigned long)((50)*(4000000/4000.0)));
  4921  0060D0  0E41               	movlw	65
  4922  0060D2  6E58               	movwf	??_animation7& (0+255),c
  4923  0060D4  0EEE               	movlw	238
  4924  0060D6                     u6747:
  4925  0060D6  2EE8               	decfsz	wreg,f,c
  4926  0060D8  D7FE               	bra	u6747
  4927  0060DA  2E58               	decfsz	??_animation7& (0+255),f,c
  4928  0060DC  D7FC               	bra	u6747
  4929  0060DE  D000               	nop2	
  4930                           
  4931                           ;newmain.c: 996: for (j = 0; j < 24; j++)
  4932  0060E0  0E00               	movlw	0
  4933  0060E2  6E5E               	movwf	animation7@j+1,c
  4934  0060E4  0E00               	movlw	0
  4935  0060E6  6E5D               	movwf	animation7@j,c
  4936  0060E8                     l4504:
  4937  0060E8  BE5E               	btfsc	animation7@j+1,7,c
  4938  0060EA  D006               	goto	l466
  4939  0060EC  505E               	movf	animation7@j+1,w,c
  4940  0060EE  E144               	bnz	l4516
  4941  0060F0  0E18               	movlw	24
  4942  0060F2  5C5D               	subwf	animation7@j,w,c
  4943  0060F4  B0D8               	btfsc	status,0,c
  4944  0060F6  D040               	goto	u5930
  4945  0060F8                     l466:
  4946                           
  4947                           ;newmain.c: 997: if (show7_2[i][j] != 100)
  4948  0060F8  C05B  F043         	movff	animation7@i,___wmul@multiplier
  4949  0060FC  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  4950  006100  0E00               	movlw	0
  4951  006102  6E46               	movwf	___wmul@multiplicand+1,c
  4952  006104  0E18               	movlw	24
  4953  006106  6E45               	movwf	___wmul@multiplicand,c
  4954  006108  EC54  F023         	call	___wmul	;wreg free
  4955  00610C  0EFD               	movlw	low _show7_2
  4956  00610E  6E58               	movwf	??_animation7& (0+255),c
  4957  006110  0E77               	movlw	high _show7_2
  4958  006112  6E59               	movwf	(??_animation7+1)& (0+255),c
  4959  006114  5043               	movf	?___wmul,w,c
  4960  006116  2658               	addwf	??_animation7,f,c
  4961  006118  5044               	movf	?___wmul+1,w,c
  4962  00611A  2259               	addwfc	??_animation7+1,f,c
  4963  00611C  505D               	movf	animation7@j,w,c
  4964  00611E  2658               	addwf	??_animation7,f,c
  4965  006120  505E               	movf	animation7@j+1,w,c
  4966  006122  2259               	addwfc	??_animation7+1,f,c
  4967  006124  C058  FFF6         	movff	??_animation7,tblptrl
  4968  006128  C059  FFF7         	movff	??_animation7+1,tblptrh
  4969  00612C                     	if	0	;tblptru may be non-zero
  4970  00612C                     	endif
  4971  00612C                     	if	0	;tblptru may be non-zero
  4972  00612C                     	endif
  4973  00612C  0008               	tblrd		*
  4974  00612E  50F5               	movf	tablat,w,c
  4975  006130  0A64               	xorlw	100
  4976  006132  B4D8               	btfsc	status,2,c
  4977  006134  D01E               	goto	l468
  4978                           
  4979                           ;newmain.c: 998: clr_led(show7_2[i][j]);
  4980  006136  C05B  F043         	movff	animation7@i,___wmul@multiplier
  4981  00613A  C05C  F044         	movff	animation7@i+1,___wmul@multiplier+1
  4982  00613E  0E00               	movlw	0
  4983  006140  6E46               	movwf	___wmul@multiplicand+1,c
  4984  006142  0E18               	movlw	24
  4985  006144  6E45               	movwf	___wmul@multiplicand,c
  4986  006146  EC54  F023         	call	___wmul	;wreg free
  4987  00614A  0EFD               	movlw	low _show7_2
  4988  00614C  6E58               	movwf	??_animation7& (0+255),c
  4989  00614E  0E77               	movlw	high _show7_2
  4990  006150  6E59               	movwf	(??_animation7+1)& (0+255),c
  4991  006152  5043               	movf	?___wmul,w,c
  4992  006154  2658               	addwf	??_animation7,f,c
  4993  006156  5044               	movf	?___wmul+1,w,c
  4994  006158  2259               	addwfc	??_animation7+1,f,c
  4995  00615A  505D               	movf	animation7@j,w,c
  4996  00615C  2658               	addwf	??_animation7,f,c
  4997  00615E  505E               	movf	animation7@j+1,w,c
  4998  006160  2259               	addwfc	??_animation7+1,f,c
  4999  006162  C058  FFF6         	movff	??_animation7,tblptrl
  5000  006166  C059  FFF7         	movff	??_animation7+1,tblptrh
  5001  00616A                     	if	0	;tblptru may be non-zero
  5002  00616A                     	endif
  5003  00616A                     	if	0	;tblptru may be non-zero
  5004  00616A                     	endif
  5005  00616A  0008               	tblrd		*
  5006  00616C  50F5               	movf	tablat,w,c
  5007  00616E  EC31  F025         	call	_clr_led
  5008  006172                     l468:
  5009  006172  4A5D               	infsnz	animation7@j,f,c
  5010  006174  2A5E               	incf	animation7@j+1,f,c
  5011  006176  D7B8               	goto	l4504
  5012  006178                     u5930:
  5013  006178                     l4516:
  5014                           
  5015                           ;newmain.c: 999: write_display();
  5016  006178  EC8C  F025         	call	_write_display	;wreg free
  5017  00617C  065B               	decf	animation7@i,f,c
  5018  00617E  A0D8               	btfss	status,0,c
  5019  006180  065C               	decf	animation7@i+1,f,c
  5020  006182  D756               	goto	l4480
  5021  006184                     u5940:
  5022                           
  5023                           ;newmain.c: 1000: }
  5024                           ;newmain.c: 1001: count = 0;
  5025  006184  0E00               	movlw	0
  5026  006186  6E42               	movwf	_count+1,c
  5027  006188  0E00               	movlw	0
  5028  00618A  6E41               	movwf	_count,c
  5029  00618C  0012               	return	
  5030  00618E                     __end_of_animation7:
  5031                           	opt stack 0
  5032                           tblptru	equ	0xFF8
  5033                           tblptrh	equ	0xFF7
  5034                           tblptrl	equ	0xFF6
  5035                           tablat	equ	0xFF5
  5036                           postinc0	equ	0xFEE
  5037                           wreg	equ	0xFE8
  5038                           postinc1	equ	0xFE6
  5039                           fsr1h	equ	0xFE2
  5040                           fsr1l	equ	0xFE1
  5041                           indf2	equ	0xFDF
  5042                           postinc2	equ	0xFDE
  5043                           fsr2h	equ	0xFDA
  5044                           fsr2l	equ	0xFD9
  5045                           status	equ	0xFD8
  5046                           
  5047 ;; *************** function _animation6 *****************
  5048 ;; Defined at:
  5049 ;;		line 923 in file "newmain.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;  m               1    wreg     unsigned char 
  5052 ;;  n               1   21[COMRAM] unsigned char 
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;  m               1   35[COMRAM] unsigned char 
  5055 ;;  x               1   26[COMRAM] unsigned char 
  5056 ;;  d               2   33[COMRAM] int 
  5057 ;;  c               2   31[COMRAM] int 
  5058 ;;  b               2   29[COMRAM] int 
  5059 ;;  a               2   27[COMRAM] int 
  5060 ;; Return value:  Size  Location     Type
  5061 ;;                  1    wreg      void 
  5062 ;; Registers used:
  5063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5064 ;; Tracked objects:
  5065 ;;		On entry : 0/0
  5066 ;;		On exit  : 0/0
  5067 ;;		Unchanged: 0/0
  5068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5069 ;;      Params:         1       0       0       0       0       0       0
  5070 ;;      Locals:        10       0       0       0       0       0       0
  5071 ;;      Temps:          4       0       0       0       0       0       0
  5072 ;;      Totals:        15       0       0       0       0       0       0
  5073 ;;Total ram usage:       15 bytes
  5074 ;; Hardware stack levels used:    1
  5075 ;; Hardware stack levels required when called:    4
  5076 ;; This function calls:
  5077 ;;		_clr_led
  5078 ;;		_set_led
  5079 ;;		_write_display
  5080 ;; This function is called by:
  5081 ;;		_main
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           	psect	text9
  5086  004F98                     __ptext9:
  5087                           	opt stack 0
  5088  004F98                     _animation6:
  5089                           	opt stack 26
  5090                           
  5091                           ;incstack = 0
  5092                           ;animation6@m stored from wreg
  5093  004F98  6E66               	movwf	animation6@m,c
  5094                           
  5095                           ;newmain.c: 924: int a = m - 1, b = m + 1, c = n - 1, d = n + 1;
  5096  004F9A  0EFF               	movlw	255
  5097  004F9C  2466               	addwf	animation6@m,w,c
  5098  004F9E  6E5E               	movwf	animation6@a,c
  5099  004FA0  6A5F               	clrf	animation6@a+1,c
  5100  004FA2  0EFF               	movlw	255
  5101  004FA4  225F               	addwfc	animation6@a+1,f,c
  5102  004FA6  0E01               	movlw	1
  5103  004FA8  2466               	addwf	animation6@m,w,c
  5104  004FAA  6E60               	movwf	animation6@b,c
  5105  004FAC  6A61               	clrf	animation6@b+1,c
  5106  004FAE  0E00               	movlw	0
  5107  004FB0  2261               	addwfc	animation6@b+1,f,c
  5108  004FB2  0EFF               	movlw	255
  5109  004FB4  2458               	addwf	animation6@n,w,c
  5110  004FB6  6E62               	movwf	animation6@c,c
  5111  004FB8  6A63               	clrf	animation6@c+1,c
  5112  004FBA  0EFF               	movlw	255
  5113  004FBC  2263               	addwfc	animation6@c+1,f,c
  5114  004FBE  0E01               	movlw	1
  5115  004FC0  2458               	addwf	animation6@n,w,c
  5116  004FC2  6E64               	movwf	animation6@d,c
  5117  004FC4  6A65               	clrf	animation6@d+1,c
  5118  004FC6  0E00               	movlw	0
  5119  004FC8  2265               	addwfc	animation6@d+1,f,c
  5120                           
  5121                           ;newmain.c: 926: set_led(Buttons[m][n]);
  5122  004FCA  5066               	movf	animation6@m,w,c
  5123  004FCC  0D08               	mullw	8
  5124  004FCE  0EF9               	movlw	low _Buttons
  5125  004FD0  6E59               	movwf	??_animation6& (0+255),c
  5126  004FD2  0E7B               	movlw	high _Buttons
  5127  004FD4  6E5A               	movwf	(??_animation6+1)& (0+255),c
  5128  004FD6  50F3               	movf	prodl,w,c
  5129  004FD8  2659               	addwf	??_animation6,f,c
  5130  004FDA  50F4               	movf	prodh,w,c
  5131  004FDC  225A               	addwfc	??_animation6+1,f,c
  5132  004FDE  5058               	movf	animation6@n,w,c
  5133  004FE0  0D01               	mullw	1
  5134  004FE2  50F3               	movf	prodl,w,c
  5135  004FE4  2659               	addwf	??_animation6,f,c
  5136  004FE6  50F4               	movf	prodh,w,c
  5137  004FE8  225A               	addwfc	??_animation6+1,f,c
  5138  004FEA  C059  FFF6         	movff	??_animation6,tblptrl
  5139  004FEE  C05A  FFF7         	movff	??_animation6+1,tblptrh
  5140  004FF2                     	if	0	;tblptru may be non-zero
  5141  004FF2                     	endif
  5142  004FF2                     	if	0	;tblptru may be non-zero
  5143  004FF2                     	endif
  5144  004FF2  0008               	tblrd		*
  5145  004FF4  50F5               	movf	tablat,w,c
  5146  004FF6  ECDA  F024         	call	_set_led
  5147                           
  5148                           ;newmain.c: 927: write_display();
  5149  004FFA  EC8C  F025         	call	_write_display	;wreg free
  5150                           
  5151                           ;newmain.c: 928: _delay((unsigned long)((40)*(4000000/4000.0)));
  5152  004FFE  0E34               	movlw	52
  5153  005000  6E59               	movwf	??_animation6& (0+255),c
  5154  005002  0EF2               	movlw	242
  5155  005004                     u6757:
  5156  005004  2EE8               	decfsz	wreg,f,c
  5157  005006  D7FE               	bra	u6757
  5158  005008  2E59               	decfsz	??_animation6& (0+255),f,c
  5159  00500A  D7FC               	bra	u6757
  5160                           
  5161                           ;newmain.c: 929: clr_led(Buttons[m][n]);
  5162  00500C  5066               	movf	animation6@m,w,c
  5163  00500E  0D08               	mullw	8
  5164  005010  0EF9               	movlw	low _Buttons
  5165  005012  6E59               	movwf	??_animation6& (0+255),c
  5166  005014  0E7B               	movlw	high _Buttons
  5167  005016  6E5A               	movwf	(??_animation6+1)& (0+255),c
  5168  005018  50F3               	movf	prodl,w,c
  5169  00501A  2659               	addwf	??_animation6,f,c
  5170  00501C  50F4               	movf	prodh,w,c
  5171  00501E  225A               	addwfc	??_animation6+1,f,c
  5172  005020  5058               	movf	animation6@n,w,c
  5173  005022  0D01               	mullw	1
  5174  005024  50F3               	movf	prodl,w,c
  5175  005026  2659               	addwf	??_animation6,f,c
  5176  005028  50F4               	movf	prodh,w,c
  5177  00502A  225A               	addwfc	??_animation6+1,f,c
  5178  00502C  C059  FFF6         	movff	??_animation6,tblptrl
  5179  005030  C05A  FFF7         	movff	??_animation6+1,tblptrh
  5180  005034                     	if	0	;tblptru may be non-zero
  5181  005034                     	endif
  5182  005034                     	if	0	;tblptru may be non-zero
  5183  005034                     	endif
  5184  005034  0008               	tblrd		*
  5185  005036  50F5               	movf	tablat,w,c
  5186  005038  EC31  F025         	call	_clr_led
  5187                           
  5188                           ;newmain.c: 930: write_display();
  5189  00503C  EC8C  F025         	call	_write_display	;wreg free
  5190                           
  5191                           ;newmain.c: 932: for (uint8_t x = 0; x < 8; x++) {
  5192  005040  0E00               	movlw	0
  5193  005042  6E5D               	movwf	animation6@x,c
  5194  005044                     l4306:
  5195  005044  0E07               	movlw	7
  5196  005046  645D               	cpfsgt	animation6@x,c
  5197  005048  D001               	goto	l428
  5198  00504A  0012               	return	
  5199  00504C                     l428:
  5200                           
  5201                           ;newmain.c: 933: if (a >= 0)
  5202  00504C  BE5F               	btfsc	animation6@a+1,7,c
  5203  00504E  D023               	goto	l430
  5204                           
  5205                           ;newmain.c: 934: set_led(Buttons[a][n]);
  5206  005050  5058               	movf	animation6@n,w,c
  5207  005052  0D01               	mullw	1
  5208  005054  C05E  F059         	movff	animation6@a,??_animation6
  5209  005058  C05F  F05A         	movff	animation6@a+1,??_animation6+1
  5210  00505C  90D8               	bcf	status,0,c
  5211  00505E  3659               	rlcf	??_animation6,f,c
  5212  005060  365A               	rlcf	??_animation6+1,f,c
  5213  005062  90D8               	bcf	status,0,c
  5214  005064  3659               	rlcf	??_animation6,f,c
  5215  005066  365A               	rlcf	??_animation6+1,f,c
  5216  005068  90D8               	bcf	status,0,c
  5217  00506A  3659               	rlcf	??_animation6,f,c
  5218  00506C  365A               	rlcf	??_animation6+1,f,c
  5219  00506E  0EF9               	movlw	low _Buttons
  5220  005070  6E5B               	movwf	(??_animation6+2)& (0+255),c
  5221  005072  0E7B               	movlw	high _Buttons
  5222  005074  6E5C               	movwf	(??_animation6+3)& (0+255),c
  5223  005076  5059               	movf	??_animation6,w,c
  5224  005078  265B               	addwf	??_animation6+2,f,c
  5225  00507A  505A               	movf	??_animation6+1,w,c
  5226  00507C  225C               	addwfc	??_animation6+3,f,c
  5227  00507E  50F3               	movf	prodl,w,c
  5228  005080  265B               	addwf	??_animation6+2,f,c
  5229  005082  50F4               	movf	prodh,w,c
  5230  005084  225C               	addwfc	??_animation6+3,f,c
  5231  005086  C05B  FFF6         	movff	??_animation6+2,tblptrl
  5232  00508A  C05C  FFF7         	movff	??_animation6+3,tblptrh
  5233  00508E                     	if	0	;tblptru may be non-zero
  5234  00508E                     	endif
  5235  00508E                     	if	0	;tblptru may be non-zero
  5236  00508E                     	endif
  5237  00508E  0008               	tblrd		*
  5238  005090  50F5               	movf	tablat,w,c
  5239  005092  ECDA  F024         	call	_set_led
  5240  005096                     l430:
  5241                           
  5242                           ;newmain.c: 935: if (b < 8)
  5243  005096  BE61               	btfsc	animation6@b+1,7,c
  5244  005098  D006               	goto	u5500
  5245  00509A  5061               	movf	animation6@b+1,w,c
  5246  00509C  E127               	bnz	l4318
  5247  00509E  0E08               	movlw	8
  5248  0050A0  5C60               	subwf	animation6@b,w,c
  5249  0050A2  B0D8               	btfsc	status,0,c
  5250  0050A4  D023               	goto	l431
  5251  0050A6                     u5500:
  5252                           
  5253                           ;newmain.c: 936: set_led(Buttons[b][n]);
  5254  0050A6  5058               	movf	animation6@n,w,c
  5255  0050A8  0D01               	mullw	1
  5256  0050AA  C060  F059         	movff	animation6@b,??_animation6
  5257  0050AE  C061  F05A         	movff	animation6@b+1,??_animation6+1
  5258  0050B2  90D8               	bcf	status,0,c
  5259  0050B4  3659               	rlcf	??_animation6,f,c
  5260  0050B6  365A               	rlcf	??_animation6+1,f,c
  5261  0050B8  90D8               	bcf	status,0,c
  5262  0050BA  3659               	rlcf	??_animation6,f,c
  5263  0050BC  365A               	rlcf	??_animation6+1,f,c
  5264  0050BE  90D8               	bcf	status,0,c
  5265  0050C0  3659               	rlcf	??_animation6,f,c
  5266  0050C2  365A               	rlcf	??_animation6+1,f,c
  5267  0050C4  0EF9               	movlw	low _Buttons
  5268  0050C6  6E5B               	movwf	(??_animation6+2)& (0+255),c
  5269  0050C8  0E7B               	movlw	high _Buttons
  5270  0050CA  6E5C               	movwf	(??_animation6+3)& (0+255),c
  5271  0050CC  5059               	movf	??_animation6,w,c
  5272  0050CE  265B               	addwf	??_animation6+2,f,c
  5273  0050D0  505A               	movf	??_animation6+1,w,c
  5274  0050D2  225C               	addwfc	??_animation6+3,f,c
  5275  0050D4  50F3               	movf	prodl,w,c
  5276  0050D6  265B               	addwf	??_animation6+2,f,c
  5277  0050D8  50F4               	movf	prodh,w,c
  5278  0050DA  225C               	addwfc	??_animation6+3,f,c
  5279  0050DC  C05B  FFF6         	movff	??_animation6+2,tblptrl
  5280  0050E0  C05C  FFF7         	movff	??_animation6+3,tblptrh
  5281  0050E4                     	if	0	;tblptru may be non-zero
  5282  0050E4                     	endif
  5283  0050E4                     	if	0	;tblptru may be non-zero
  5284  0050E4                     	endif
  5285  0050E4  0008               	tblrd		*
  5286  0050E6  50F5               	movf	tablat,w,c
  5287  0050E8  ECDA  F024         	call	_set_led
  5288  0050EC                     l431:
  5289  0050EC                     l4318:
  5290                           
  5291                           ;newmain.c: 937: if (c >= 0)
  5292  0050EC  BE63               	btfsc	animation6@c+1,7,c
  5293  0050EE  D016               	goto	l432
  5294                           
  5295                           ;newmain.c: 938: set_led(Buttons[m][c]);
  5296  0050F0  5066               	movf	animation6@m,w,c
  5297  0050F2  0D08               	mullw	8
  5298  0050F4  0EF9               	movlw	low _Buttons
  5299  0050F6  6E59               	movwf	??_animation6& (0+255),c
  5300  0050F8  0E7B               	movlw	high _Buttons
  5301  0050FA  6E5A               	movwf	(??_animation6+1)& (0+255),c
  5302  0050FC  50F3               	movf	prodl,w,c
  5303  0050FE  2659               	addwf	??_animation6,f,c
  5304  005100  50F4               	movf	prodh,w,c
  5305  005102  225A               	addwfc	??_animation6+1,f,c
  5306  005104  5062               	movf	animation6@c,w,c
  5307  005106  2659               	addwf	??_animation6,f,c
  5308  005108  5063               	movf	animation6@c+1,w,c
  5309  00510A  225A               	addwfc	??_animation6+1,f,c
  5310  00510C  C059  FFF6         	movff	??_animation6,tblptrl
  5311  005110  C05A  FFF7         	movff	??_animation6+1,tblptrh
  5312  005114                     	if	0	;tblptru may be non-zero
  5313  005114                     	endif
  5314  005114                     	if	0	;tblptru may be non-zero
  5315  005114                     	endif
  5316  005114  0008               	tblrd		*
  5317  005116  50F5               	movf	tablat,w,c
  5318  005118  ECDA  F024         	call	_set_led
  5319  00511C                     l432:
  5320                           
  5321                           ;newmain.c: 939: if (d < 8)
  5322  00511C  BE65               	btfsc	animation6@d+1,7,c
  5323  00511E  D006               	goto	u5520
  5324  005120  5065               	movf	animation6@d+1,w,c
  5325  005122  E11A               	bnz	l4326
  5326  005124  0E08               	movlw	8
  5327  005126  5C64               	subwf	animation6@d,w,c
  5328  005128  B0D8               	btfsc	status,0,c
  5329  00512A  D016               	goto	l433
  5330  00512C                     u5520:
  5331                           
  5332                           ;newmain.c: 940: set_led(Buttons[m][d]);
  5333  00512C  5066               	movf	animation6@m,w,c
  5334  00512E  0D08               	mullw	8
  5335  005130  0EF9               	movlw	low _Buttons
  5336  005132  6E59               	movwf	??_animation6& (0+255),c
  5337  005134  0E7B               	movlw	high _Buttons
  5338  005136  6E5A               	movwf	(??_animation6+1)& (0+255),c
  5339  005138  50F3               	movf	prodl,w,c
  5340  00513A  2659               	addwf	??_animation6,f,c
  5341  00513C  50F4               	movf	prodh,w,c
  5342  00513E  225A               	addwfc	??_animation6+1,f,c
  5343  005140  5064               	movf	animation6@d,w,c
  5344  005142  2659               	addwf	??_animation6,f,c
  5345  005144  5065               	movf	animation6@d+1,w,c
  5346  005146  225A               	addwfc	??_animation6+1,f,c
  5347  005148  C059  FFF6         	movff	??_animation6,tblptrl
  5348  00514C  C05A  FFF7         	movff	??_animation6+1,tblptrh
  5349  005150                     	if	0	;tblptru may be non-zero
  5350  005150                     	endif
  5351  005150                     	if	0	;tblptru may be non-zero
  5352  005150                     	endif
  5353  005150  0008               	tblrd		*
  5354  005152  50F5               	movf	tablat,w,c
  5355  005154  ECDA  F024         	call	_set_led
  5356  005158                     l433:
  5357  005158                     l4326:
  5358                           
  5359                           ;newmain.c: 942: write_display();
  5360  005158  EC8C  F025         	call	_write_display	;wreg free
  5361                           
  5362                           ;newmain.c: 943: _delay((unsigned long)((40)*(4000000/4000.0)));
  5363  00515C  0E34               	movlw	52
  5364  00515E  6E59               	movwf	??_animation6& (0+255),c
  5365  005160  0EF2               	movlw	242
  5366  005162                     u6767:
  5367  005162  2EE8               	decfsz	wreg,f,c
  5368  005164  D7FE               	bra	u6767
  5369  005166  2E59               	decfsz	??_animation6& (0+255),f,c
  5370  005168  D7FC               	bra	u6767
  5371                           
  5372                           ;newmain.c: 944: clr_led(Buttons[a][n]);
  5373  00516A  5058               	movf	animation6@n,w,c
  5374  00516C  0D01               	mullw	1
  5375  00516E  C05E  F059         	movff	animation6@a,??_animation6
  5376  005172  C05F  F05A         	movff	animation6@a+1,??_animation6+1
  5377  005176  90D8               	bcf	status,0,c
  5378  005178  3659               	rlcf	??_animation6,f,c
  5379  00517A  365A               	rlcf	??_animation6+1,f,c
  5380  00517C  90D8               	bcf	status,0,c
  5381  00517E  3659               	rlcf	??_animation6,f,c
  5382  005180  365A               	rlcf	??_animation6+1,f,c
  5383  005182  90D8               	bcf	status,0,c
  5384  005184  3659               	rlcf	??_animation6,f,c
  5385  005186  365A               	rlcf	??_animation6+1,f,c
  5386  005188  0EF9               	movlw	low _Buttons
  5387  00518A  6E5B               	movwf	(??_animation6+2)& (0+255),c
  5388  00518C  0E7B               	movlw	high _Buttons
  5389  00518E  6E5C               	movwf	(??_animation6+3)& (0+255),c
  5390  005190  5059               	movf	??_animation6,w,c
  5391  005192  265B               	addwf	??_animation6+2,f,c
  5392  005194  505A               	movf	??_animation6+1,w,c
  5393  005196  225C               	addwfc	??_animation6+3,f,c
  5394  005198  50F3               	movf	prodl,w,c
  5395  00519A  265B               	addwf	??_animation6+2,f,c
  5396  00519C  50F4               	movf	prodh,w,c
  5397  00519E  225C               	addwfc	??_animation6+3,f,c
  5398  0051A0  C05B  FFF6         	movff	??_animation6+2,tblptrl
  5399  0051A4  C05C  FFF7         	movff	??_animation6+3,tblptrh
  5400  0051A8                     	if	0	;tblptru may be non-zero
  5401  0051A8                     	endif
  5402  0051A8                     	if	0	;tblptru may be non-zero
  5403  0051A8                     	endif
  5404  0051A8  0008               	tblrd		*
  5405  0051AA  50F5               	movf	tablat,w,c
  5406  0051AC  EC31  F025         	call	_clr_led
  5407                           
  5408                           ;newmain.c: 945: clr_led(Buttons[b][n]);
  5409  0051B0  5058               	movf	animation6@n,w,c
  5410  0051B2  0D01               	mullw	1
  5411  0051B4  C060  F059         	movff	animation6@b,??_animation6
  5412  0051B8  C061  F05A         	movff	animation6@b+1,??_animation6+1
  5413  0051BC  90D8               	bcf	status,0,c
  5414  0051BE  3659               	rlcf	??_animation6,f,c
  5415  0051C0  365A               	rlcf	??_animation6+1,f,c
  5416  0051C2  90D8               	bcf	status,0,c
  5417  0051C4  3659               	rlcf	??_animation6,f,c
  5418  0051C6  365A               	rlcf	??_animation6+1,f,c
  5419  0051C8  90D8               	bcf	status,0,c
  5420  0051CA  3659               	rlcf	??_animation6,f,c
  5421  0051CC  365A               	rlcf	??_animation6+1,f,c
  5422  0051CE  0EF9               	movlw	low _Buttons
  5423  0051D0  6E5B               	movwf	(??_animation6+2)& (0+255),c
  5424  0051D2  0E7B               	movlw	high _Buttons
  5425  0051D4  6E5C               	movwf	(??_animation6+3)& (0+255),c
  5426  0051D6  5059               	movf	??_animation6,w,c
  5427  0051D8  265B               	addwf	??_animation6+2,f,c
  5428  0051DA  505A               	movf	??_animation6+1,w,c
  5429  0051DC  225C               	addwfc	??_animation6+3,f,c
  5430  0051DE  50F3               	movf	prodl,w,c
  5431  0051E0  265B               	addwf	??_animation6+2,f,c
  5432  0051E2  50F4               	movf	prodh,w,c
  5433  0051E4  225C               	addwfc	??_animation6+3,f,c
  5434  0051E6  C05B  FFF6         	movff	??_animation6+2,tblptrl
  5435  0051EA  C05C  FFF7         	movff	??_animation6+3,tblptrh
  5436  0051EE                     	if	0	;tblptru may be non-zero
  5437  0051EE                     	endif
  5438  0051EE                     	if	0	;tblptru may be non-zero
  5439  0051EE                     	endif
  5440  0051EE  0008               	tblrd		*
  5441  0051F0  50F5               	movf	tablat,w,c
  5442  0051F2  EC31  F025         	call	_clr_led
  5443                           
  5444                           ;newmain.c: 946: clr_led(Buttons[m][c]);
  5445  0051F6  5066               	movf	animation6@m,w,c
  5446  0051F8  0D08               	mullw	8
  5447  0051FA  0EF9               	movlw	low _Buttons
  5448  0051FC  6E59               	movwf	??_animation6& (0+255),c
  5449  0051FE  0E7B               	movlw	high _Buttons
  5450  005200  6E5A               	movwf	(??_animation6+1)& (0+255),c
  5451  005202  50F3               	movf	prodl,w,c
  5452  005204  2659               	addwf	??_animation6,f,c
  5453  005206  50F4               	movf	prodh,w,c
  5454  005208  225A               	addwfc	??_animation6+1,f,c
  5455  00520A  5062               	movf	animation6@c,w,c
  5456  00520C  2659               	addwf	??_animation6,f,c
  5457  00520E  5063               	movf	animation6@c+1,w,c
  5458  005210  225A               	addwfc	??_animation6+1,f,c
  5459  005212  C059  FFF6         	movff	??_animation6,tblptrl
  5460  005216  C05A  FFF7         	movff	??_animation6+1,tblptrh
  5461  00521A                     	if	0	;tblptru may be non-zero
  5462  00521A                     	endif
  5463  00521A                     	if	0	;tblptru may be non-zero
  5464  00521A                     	endif
  5465  00521A  0008               	tblrd		*
  5466  00521C  50F5               	movf	tablat,w,c
  5467  00521E  EC31  F025         	call	_clr_led
  5468                           
  5469                           ;newmain.c: 947: clr_led(Buttons[m][d]);
  5470  005222  5066               	movf	animation6@m,w,c
  5471  005224  0D08               	mullw	8
  5472  005226  0EF9               	movlw	low _Buttons
  5473  005228  6E59               	movwf	??_animation6& (0+255),c
  5474  00522A  0E7B               	movlw	high _Buttons
  5475  00522C  6E5A               	movwf	(??_animation6+1)& (0+255),c
  5476  00522E  50F3               	movf	prodl,w,c
  5477  005230  2659               	addwf	??_animation6,f,c
  5478  005232  50F4               	movf	prodh,w,c
  5479  005234  225A               	addwfc	??_animation6+1,f,c
  5480  005236  5064               	movf	animation6@d,w,c
  5481  005238  2659               	addwf	??_animation6,f,c
  5482  00523A  5065               	movf	animation6@d+1,w,c
  5483  00523C  225A               	addwfc	??_animation6+1,f,c
  5484  00523E  C059  FFF6         	movff	??_animation6,tblptrl
  5485  005242  C05A  FFF7         	movff	??_animation6+1,tblptrh
  5486  005246                     	if	0	;tblptru may be non-zero
  5487  005246                     	endif
  5488  005246                     	if	0	;tblptru may be non-zero
  5489  005246                     	endif
  5490  005246  0008               	tblrd		*
  5491  005248  50F5               	movf	tablat,w,c
  5492  00524A  EC31  F025         	call	_clr_led
  5493                           
  5494                           ;newmain.c: 948: write_display();
  5495  00524E  EC8C  F025         	call	_write_display	;wreg free
  5496                           
  5497                           ;newmain.c: 949: a--;
  5498  005252  065E               	decf	animation6@a,f,c
  5499  005254  A0D8               	btfss	status,0,c
  5500  005256  065F               	decf	animation6@a+1,f,c
  5501                           
  5502                           ;newmain.c: 950: b++;
  5503  005258  4A60               	infsnz	animation6@b,f,c
  5504  00525A  2A61               	incf	animation6@b+1,f,c
  5505                           
  5506                           ;newmain.c: 951: c--;
  5507  00525C  0662               	decf	animation6@c,f,c
  5508  00525E  A0D8               	btfss	status,0,c
  5509  005260  0663               	decf	animation6@c+1,f,c
  5510                           
  5511                           ;newmain.c: 952: d++;
  5512  005262  4A64               	infsnz	animation6@d,f,c
  5513  005264  2A65               	incf	animation6@d+1,f,c
  5514  005266  2A5D               	incf	animation6@x,f,c
  5515  005268  D6ED               	goto	l4306
  5516  00526A                     __end_of_animation6:
  5517                           	opt stack 0
  5518                           tblptru	equ	0xFF8
  5519                           tblptrh	equ	0xFF7
  5520                           tblptrl	equ	0xFF6
  5521                           tablat	equ	0xFF5
  5522                           prodh	equ	0xFF4
  5523                           prodl	equ	0xFF3
  5524                           postinc0	equ	0xFEE
  5525                           wreg	equ	0xFE8
  5526                           postinc1	equ	0xFE6
  5527                           fsr1h	equ	0xFE2
  5528                           fsr1l	equ	0xFE1
  5529                           indf2	equ	0xFDF
  5530                           postinc2	equ	0xFDE
  5531                           fsr2h	equ	0xFDA
  5532                           fsr2l	equ	0xFD9
  5533                           status	equ	0xFD8
  5534                           
  5535 ;; *************** function _animation5 *****************
  5536 ;; Defined at:
  5537 ;;		line 849 in file "newmain.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;  m               1    wreg     unsigned char 
  5540 ;;  n               1   21[COMRAM] unsigned char 
  5541 ;;  h               1   22[COMRAM] unsigned char 
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;  m               1   25[COMRAM] unsigned char 
  5544 ;;  x               1   28[COMRAM] unsigned char 
  5545 ;;  i               1   27[COMRAM] unsigned char 
  5546 ;;  j               1   26[COMRAM] unsigned char 
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  1    wreg      void 
  5549 ;; Registers used:
  5550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5556 ;;      Params:         2       0       0       0       0       0       0
  5557 ;;      Locals:         4       0       0       0       0       0       0
  5558 ;;      Temps:          2       0       0       0       0       0       0
  5559 ;;      Totals:         8       0       0       0       0       0       0
  5560 ;;Total ram usage:        8 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; Hardware stack levels required when called:    4
  5563 ;; This function calls:
  5564 ;;		_clr_led
  5565 ;;		_set_led
  5566 ;;		_write_display
  5567 ;; This function is called by:
  5568 ;;		_main
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           	psect	text10
  5573  00555E                     __ptext10:
  5574                           	opt stack 0
  5575  00555E                     _animation5:
  5576                           	opt stack 26
  5577                           
  5578                           ;incstack = 0
  5579                           ;animation5@m stored from wreg
  5580  00555E  6E5C               	movwf	animation5@m,c
  5581                           
  5582                           ;newmain.c: 850: uint8_t i = 0, j = 0, x = 0;
  5583  005560  0E00               	movlw	0
  5584  005562  6E5E               	movwf	animation5@i,c
  5585  005564  0E00               	movlw	0
  5586  005566  6E5D               	movwf	animation5@j,c
  5587  005568  0E00               	movlw	0
  5588  00556A  6E5F               	movwf	animation5@x,c
  5589                           
  5590                           ;newmain.c: 852: if (m == 0) {
  5591  00556C  505C               	movf	animation5@m,w,c
  5592  00556E  A4D8               	btfss	status,2,c
  5593  005570  D05C               	goto	l390
  5594                           
  5595                           ;newmain.c: 853: for (i = 0; i < 16; i++) {
  5596  005572  0E00               	movlw	0
  5597  005574  6E5E               	movwf	animation5@i,c
  5598  005576                     l4144:
  5599  005576  0E0F               	movlw	15
  5600  005578  645E               	cpfsgt	animation5@i,c
  5601  00557A  D001               	goto	l391
  5602  00557C  0012               	return	
  5603  00557E                     l391:
  5604                           
  5605                           ;newmain.c: 854: if (show5[i][0] == n) {
  5606  00557E  505E               	movf	animation5@i,w,c
  5607  005580  0D04               	mullw	4
  5608  005582  0E39               	movlw	low _show5
  5609  005584  24F3               	addwf	prodl,w,c
  5610  005586  6EF6               	movwf	tblptrl,c
  5611  005588  0E7B               	movlw	high _show5
  5612  00558A  20F4               	addwfc	prodh,w,c
  5613  00558C  6EF7               	movwf	tblptrh,c
  5614  00558E                     	if	0	;There are less than 3 active tblptr bytes
  5615  00558E                     	endif
  5616  00558E  0008               	tblrd		*
  5617  005590  50F5               	movf	tablat,w,c
  5618  005592  1858               	xorwf	animation5@n,w,c
  5619  005594  A4D8               	btfss	status,2,c
  5620  005596  D047               	goto	l393
  5621                           
  5622                           ;newmain.c: 855: for (j = 0; j < 4; j++) {
  5623  005598  0E00               	movlw	0
  5624  00559A  6E5D               	movwf	animation5@j,c
  5625  00559C                     l4152:
  5626  00559C  0E03               	movlw	3
  5627  00559E  645D               	cpfsgt	animation5@j,c
  5628  0055A0  D001               	goto	l394
  5629  0055A2  D03E               	goto	u5250
  5630  0055A4                     l394:
  5631                           
  5632                           ;newmain.c: 856: x = show5[i][j];
  5633  0055A4  505E               	movf	animation5@i,w,c
  5634  0055A6  0D04               	mullw	4
  5635  0055A8  0E39               	movlw	low _show5
  5636  0055AA  6E5A               	movwf	??_animation5& (0+255),c
  5637  0055AC  0E7B               	movlw	high _show5
  5638  0055AE  6E5B               	movwf	(??_animation5+1)& (0+255),c
  5639  0055B0  50F3               	movf	prodl,w,c
  5640  0055B2  265A               	addwf	??_animation5,f,c
  5641  0055B4  50F4               	movf	prodh,w,c
  5642  0055B6  225B               	addwfc	??_animation5+1,f,c
  5643  0055B8  505D               	movf	animation5@j,w,c
  5644  0055BA  0D01               	mullw	1
  5645  0055BC  50F3               	movf	prodl,w,c
  5646  0055BE  265A               	addwf	??_animation5,f,c
  5647  0055C0  50F4               	movf	prodh,w,c
  5648  0055C2  225B               	addwfc	??_animation5+1,f,c
  5649  0055C4  C05A  FFF6         	movff	??_animation5,tblptrl
  5650  0055C8  C05B  FFF7         	movff	??_animation5+1,tblptrh
  5651  0055CC                     	if	0	;tblptru may be non-zero
  5652  0055CC                     	endif
  5653  0055CC                     	if	0	;tblptru may be non-zero
  5654  0055CC                     	endif
  5655  0055CC  0008               	tblrd		*
  5656  0055CE  CFF5 F05F          	movff	tablat,animation5@x
  5657                           
  5658                           ;newmain.c: 857: if (temp[x] == 0) {
  5659  0055D2  505F               	movf	animation5@x,w,c
  5660  0055D4  0D01               	mullw	1
  5661  0055D6  0E01               	movlw	low _temp
  5662  0055D8  24F3               	addwf	prodl,w,c
  5663  0055DA  6ED9               	movwf	fsr2l,c
  5664  0055DC  0E00               	movlw	high _temp
  5665  0055DE  20F4               	addwfc	prodh,w,c
  5666  0055E0  6EDA               	movwf	fsr2h,c
  5667  0055E2  50DF               	movf	indf2,w,c
  5668  0055E4  A4D8               	btfss	status,2,c
  5669  0055E6  D00D               	goto	l396
  5670                           
  5671                           ;newmain.c: 858: set_led(x);
  5672  0055E8  505F               	movf	animation5@x,w,c
  5673  0055EA  ECDA  F024         	call	_set_led
  5674                           
  5675                           ;newmain.c: 859: temp[x] = 1;
  5676  0055EE  505F               	movf	animation5@x,w,c
  5677  0055F0  0D01               	mullw	1
  5678  0055F2  0E01               	movlw	low _temp
  5679  0055F4  24F3               	addwf	prodl,w,c
  5680  0055F6  6ED9               	movwf	fsr2l,c
  5681  0055F8  0E00               	movlw	high _temp
  5682  0055FA  20F4               	addwfc	prodh,w,c
  5683  0055FC  6EDA               	movwf	fsr2h,c
  5684  0055FE  0E01               	movlw	1
  5685  005600  D00C               	goto	L7
  5686  005602                     l396:
  5687                           
  5688                           ;newmain.c: 861: clr_led(x);
  5689  005602  505F               	movf	animation5@x,w,c
  5690  005604  EC31  F025         	call	_clr_led
  5691                           
  5692                           ;newmain.c: 862: temp[x] = 0;
  5693  005608  505F               	movf	animation5@x,w,c
  5694  00560A  0D01               	mullw	1
  5695  00560C  0E01               	movlw	low _temp
  5696  00560E  24F3               	addwf	prodl,w,c
  5697  005610  6ED9               	movwf	fsr2l,c
  5698  005612  0E00               	movlw	high _temp
  5699  005614  20F4               	addwfc	prodh,w,c
  5700  005616  6EDA               	movwf	fsr2h,c
  5701  005618  0E00               	movlw	0
  5702  00561A                     L7:
  5703  00561A  6EDF               	movwf	indf2,c
  5704  00561C  2A5D               	incf	animation5@j,f,c
  5705  00561E  D7BE               	goto	l4152
  5706  005620                     u5250:
  5707                           
  5708                           ;newmain.c: 863: }
  5709                           ;newmain.c: 864: }
  5710                           ;newmain.c: 865: write_display();
  5711  005620  EC8C  F025         	call	_write_display	;wreg free
  5712                           
  5713                           ;newmain.c: 866: break;
  5714  005624  0012               	return	
  5715  005626                     l393:
  5716  005626  2A5E               	incf	animation5@i,f,c
  5717  005628  D7A6               	goto	l4144
  5718  00562A                     l390:
  5719  00562A  045C               	decf	animation5@m,w,c
  5720  00562C  A4D8               	btfss	status,2,c
  5721  00562E  D05D               	goto	l399
  5722                           
  5723                           ;newmain.c: 870: for (i = 0; i < 16; i++) {
  5724  005630  0E00               	movlw	0
  5725  005632  6E5E               	movwf	animation5@i,c
  5726  005634                     l4182:
  5727  005634  0E0F               	movlw	15
  5728  005636  645E               	cpfsgt	animation5@i,c
  5729  005638  D001               	goto	l400
  5730  00563A  0012               	return	
  5731  00563C                     l400:
  5732                           
  5733                           ;newmain.c: 871: if (show5[i][0] == n) {
  5734  00563C  505E               	movf	animation5@i,w,c
  5735  00563E  0D04               	mullw	4
  5736  005640  0E39               	movlw	low _show5
  5737  005642  24F3               	addwf	prodl,w,c
  5738  005644  6EF6               	movwf	tblptrl,c
  5739  005646  0E7B               	movlw	high _show5
  5740  005648  20F4               	addwfc	prodh,w,c
  5741  00564A  6EF7               	movwf	tblptrh,c
  5742  00564C                     	if	0	;There are less than 3 active tblptr bytes
  5743  00564C                     	endif
  5744  00564C  0008               	tblrd		*
  5745  00564E  50F5               	movf	tablat,w,c
  5746  005650  1858               	xorwf	animation5@n,w,c
  5747  005652  A4D8               	btfss	status,2,c
  5748  005654  D048               	goto	l402
  5749                           
  5750                           ;newmain.c: 872: for (j = 0; j < 4; j++) {
  5751  005656  0E00               	movlw	0
  5752  005658  6E5D               	movwf	animation5@j,c
  5753  00565A                     l4190:
  5754  00565A  0E03               	movlw	3
  5755  00565C  645D               	cpfsgt	animation5@j,c
  5756  00565E  D001               	goto	l403
  5757  005660  D03F               	goto	u5320
  5758  005662                     l403:
  5759                           
  5760                           ;newmain.c: 873: x = show5[i][j] + 16;
  5761  005662  505E               	movf	animation5@i,w,c
  5762  005664  0D04               	mullw	4
  5763  005666  0E39               	movlw	low _show5
  5764  005668  6E5A               	movwf	??_animation5& (0+255),c
  5765  00566A  0E7B               	movlw	high _show5
  5766  00566C  6E5B               	movwf	(??_animation5+1)& (0+255),c
  5767  00566E  50F3               	movf	prodl,w,c
  5768  005670  265A               	addwf	??_animation5,f,c
  5769  005672  50F4               	movf	prodh,w,c
  5770  005674  225B               	addwfc	??_animation5+1,f,c
  5771  005676  505D               	movf	animation5@j,w,c
  5772  005678  0D01               	mullw	1
  5773  00567A  50F3               	movf	prodl,w,c
  5774  00567C  265A               	addwf	??_animation5,f,c
  5775  00567E  50F4               	movf	prodh,w,c
  5776  005680  225B               	addwfc	??_animation5+1,f,c
  5777  005682  C05A  FFF6         	movff	??_animation5,tblptrl
  5778  005686  C05B  FFF7         	movff	??_animation5+1,tblptrh
  5779  00568A                     	if	0	;tblptru may be non-zero
  5780  00568A                     	endif
  5781  00568A                     	if	0	;tblptru may be non-zero
  5782  00568A                     	endif
  5783  00568A  0008               	tblrd		*
  5784  00568C  50F5               	movf	tablat,w,c
  5785  00568E  0F10               	addlw	16
  5786  005690  6E5F               	movwf	animation5@x,c
  5787                           
  5788                           ;newmain.c: 874: if (temp[x] == 0) {
  5789  005692  505F               	movf	animation5@x,w,c
  5790  005694  0D01               	mullw	1
  5791  005696  0E01               	movlw	low _temp
  5792  005698  24F3               	addwf	prodl,w,c
  5793  00569A  6ED9               	movwf	fsr2l,c
  5794  00569C  0E00               	movlw	high _temp
  5795  00569E  20F4               	addwfc	prodh,w,c
  5796  0056A0  6EDA               	movwf	fsr2h,c
  5797  0056A2  50DF               	movf	indf2,w,c
  5798  0056A4  A4D8               	btfss	status,2,c
  5799  0056A6  D00D               	goto	l405
  5800                           
  5801                           ;newmain.c: 875: set_led(x);
  5802  0056A8  505F               	movf	animation5@x,w,c
  5803  0056AA  ECDA  F024         	call	_set_led
  5804                           
  5805                           ;newmain.c: 876: temp[x] = 1;
  5806  0056AE  505F               	movf	animation5@x,w,c
  5807  0056B0  0D01               	mullw	1
  5808  0056B2  0E01               	movlw	low _temp
  5809  0056B4  24F3               	addwf	prodl,w,c
  5810  0056B6  6ED9               	movwf	fsr2l,c
  5811  0056B8  0E00               	movlw	high _temp
  5812  0056BA  20F4               	addwfc	prodh,w,c
  5813  0056BC  6EDA               	movwf	fsr2h,c
  5814  0056BE  0E01               	movlw	1
  5815  0056C0  D00C               	goto	L8
  5816  0056C2                     l405:
  5817                           
  5818                           ;newmain.c: 878: clr_led(x);
  5819  0056C2  505F               	movf	animation5@x,w,c
  5820  0056C4  EC31  F025         	call	_clr_led
  5821                           
  5822                           ;newmain.c: 879: temp[x] = 0;
  5823  0056C8  505F               	movf	animation5@x,w,c
  5824  0056CA  0D01               	mullw	1
  5825  0056CC  0E01               	movlw	low _temp
  5826  0056CE  24F3               	addwf	prodl,w,c
  5827  0056D0  6ED9               	movwf	fsr2l,c
  5828  0056D2  0E00               	movlw	high _temp
  5829  0056D4  20F4               	addwfc	prodh,w,c
  5830  0056D6  6EDA               	movwf	fsr2h,c
  5831  0056D8  0E00               	movlw	0
  5832  0056DA                     L8:
  5833  0056DA  6EDF               	movwf	indf2,c
  5834  0056DC  2A5D               	incf	animation5@j,f,c
  5835  0056DE  D7BD               	goto	l4190
  5836  0056E0                     u5320:
  5837                           
  5838                           ;newmain.c: 880: }
  5839                           ;newmain.c: 881: }
  5840                           ;newmain.c: 882: write_display();
  5841  0056E0  EC8C  F025         	call	_write_display	;wreg free
  5842                           
  5843                           ;newmain.c: 883: break;
  5844  0056E4  0012               	return	
  5845  0056E6                     l402:
  5846  0056E6  2A5E               	incf	animation5@i,f,c
  5847  0056E8  D7A5               	goto	l4182
  5848  0056EA                     l399:
  5849  0056EA  0E02               	movlw	2
  5850  0056EC  185C               	xorwf	animation5@m,w,c
  5851  0056EE  A4D8               	btfss	status,2,c
  5852  0056F0  D05D               	goto	l408
  5853                           
  5854                           ;newmain.c: 887: for (i = 0; i < 16; i++) {
  5855  0056F2  0E00               	movlw	0
  5856  0056F4  6E5E               	movwf	animation5@i,c
  5857  0056F6                     l4220:
  5858  0056F6  0E0F               	movlw	15
  5859  0056F8  645E               	cpfsgt	animation5@i,c
  5860  0056FA  D001               	goto	l409
  5861  0056FC  0012               	return	
  5862  0056FE                     l409:
  5863                           
  5864                           ;newmain.c: 888: if (show5[i][0] == n) {
  5865  0056FE  505E               	movf	animation5@i,w,c
  5866  005700  0D04               	mullw	4
  5867  005702  0E39               	movlw	low _show5
  5868  005704  24F3               	addwf	prodl,w,c
  5869  005706  6EF6               	movwf	tblptrl,c
  5870  005708  0E7B               	movlw	high _show5
  5871  00570A  20F4               	addwfc	prodh,w,c
  5872  00570C  6EF7               	movwf	tblptrh,c
  5873  00570E                     	if	0	;There are less than 3 active tblptr bytes
  5874  00570E                     	endif
  5875  00570E  0008               	tblrd		*
  5876  005710  50F5               	movf	tablat,w,c
  5877  005712  1858               	xorwf	animation5@n,w,c
  5878  005714  A4D8               	btfss	status,2,c
  5879  005716  D048               	goto	l411
  5880                           
  5881                           ;newmain.c: 889: for (j = 0; j < 4; j++) {
  5882  005718  0E00               	movlw	0
  5883  00571A  6E5D               	movwf	animation5@j,c
  5884  00571C                     l4228:
  5885  00571C  0E03               	movlw	3
  5886  00571E  645D               	cpfsgt	animation5@j,c
  5887  005720  D001               	goto	l412
  5888  005722  D03F               	goto	u5390
  5889  005724                     l412:
  5890                           
  5891                           ;newmain.c: 890: x = show5[i][j] + 32;
  5892  005724  505E               	movf	animation5@i,w,c
  5893  005726  0D04               	mullw	4
  5894  005728  0E39               	movlw	low _show5
  5895  00572A  6E5A               	movwf	??_animation5& (0+255),c
  5896  00572C  0E7B               	movlw	high _show5
  5897  00572E  6E5B               	movwf	(??_animation5+1)& (0+255),c
  5898  005730  50F3               	movf	prodl,w,c
  5899  005732  265A               	addwf	??_animation5,f,c
  5900  005734  50F4               	movf	prodh,w,c
  5901  005736  225B               	addwfc	??_animation5+1,f,c
  5902  005738  505D               	movf	animation5@j,w,c
  5903  00573A  0D01               	mullw	1
  5904  00573C  50F3               	movf	prodl,w,c
  5905  00573E  265A               	addwf	??_animation5,f,c
  5906  005740  50F4               	movf	prodh,w,c
  5907  005742  225B               	addwfc	??_animation5+1,f,c
  5908  005744  C05A  FFF6         	movff	??_animation5,tblptrl
  5909  005748  C05B  FFF7         	movff	??_animation5+1,tblptrh
  5910  00574C                     	if	0	;tblptru may be non-zero
  5911  00574C                     	endif
  5912  00574C                     	if	0	;tblptru may be non-zero
  5913  00574C                     	endif
  5914  00574C  0008               	tblrd		*
  5915  00574E  50F5               	movf	tablat,w,c
  5916  005750  0F20               	addlw	32
  5917  005752  6E5F               	movwf	animation5@x,c
  5918                           
  5919                           ;newmain.c: 891: if (temp[x] == 0) {
  5920  005754  505F               	movf	animation5@x,w,c
  5921  005756  0D01               	mullw	1
  5922  005758  0E01               	movlw	low _temp
  5923  00575A  24F3               	addwf	prodl,w,c
  5924  00575C  6ED9               	movwf	fsr2l,c
  5925  00575E  0E00               	movlw	high _temp
  5926  005760  20F4               	addwfc	prodh,w,c
  5927  005762  6EDA               	movwf	fsr2h,c
  5928  005764  50DF               	movf	indf2,w,c
  5929  005766  A4D8               	btfss	status,2,c
  5930  005768  D00D               	goto	l414
  5931                           
  5932                           ;newmain.c: 892: set_led(x);
  5933  00576A  505F               	movf	animation5@x,w,c
  5934  00576C  ECDA  F024         	call	_set_led
  5935                           
  5936                           ;newmain.c: 893: temp[x] = 1;
  5937  005770  505F               	movf	animation5@x,w,c
  5938  005772  0D01               	mullw	1
  5939  005774  0E01               	movlw	low _temp
  5940  005776  24F3               	addwf	prodl,w,c
  5941  005778  6ED9               	movwf	fsr2l,c
  5942  00577A  0E00               	movlw	high _temp
  5943  00577C  20F4               	addwfc	prodh,w,c
  5944  00577E  6EDA               	movwf	fsr2h,c
  5945  005780  0E01               	movlw	1
  5946  005782  D00C               	goto	L9
  5947  005784                     l414:
  5948                           
  5949                           ;newmain.c: 895: clr_led(x);
  5950  005784  505F               	movf	animation5@x,w,c
  5951  005786  EC31  F025         	call	_clr_led
  5952                           
  5953                           ;newmain.c: 896: temp[x] = 0;
  5954  00578A  505F               	movf	animation5@x,w,c
  5955  00578C  0D01               	mullw	1
  5956  00578E  0E01               	movlw	low _temp
  5957  005790  24F3               	addwf	prodl,w,c
  5958  005792  6ED9               	movwf	fsr2l,c
  5959  005794  0E00               	movlw	high _temp
  5960  005796  20F4               	addwfc	prodh,w,c
  5961  005798  6EDA               	movwf	fsr2h,c
  5962  00579A  0E00               	movlw	0
  5963  00579C                     L9:
  5964  00579C  6EDF               	movwf	indf2,c
  5965  00579E  2A5D               	incf	animation5@j,f,c
  5966  0057A0  D7BD               	goto	l4228
  5967  0057A2                     u5390:
  5968                           
  5969                           ;newmain.c: 897: }
  5970                           ;newmain.c: 898: }
  5971                           ;newmain.c: 899: write_display();
  5972  0057A2  EC8C  F025         	call	_write_display	;wreg free
  5973                           
  5974                           ;newmain.c: 900: break;
  5975  0057A6  0012               	return	
  5976  0057A8                     l411:
  5977  0057A8  2A5E               	incf	animation5@i,f,c
  5978  0057AA  D7A5               	goto	l4220
  5979  0057AC                     l408:
  5980  0057AC  0E03               	movlw	3
  5981  0057AE  185C               	xorwf	animation5@m,w,c
  5982  0057B0  A4D8               	btfss	status,2,c
  5983  0057B2  0012               	return	
  5984                           
  5985                           ;newmain.c: 904: for (i = 0; i < 16; i++) {
  5986  0057B4  0E00               	movlw	0
  5987  0057B6  6E5E               	movwf	animation5@i,c
  5988  0057B8                     l4258:
  5989  0057B8  0E0F               	movlw	15
  5990  0057BA  645E               	cpfsgt	animation5@i,c
  5991  0057BC  D001               	goto	l418
  5992  0057BE  0012               	return	
  5993  0057C0                     l418:
  5994                           
  5995                           ;newmain.c: 905: if (show5[i][0] == n) {
  5996  0057C0  505E               	movf	animation5@i,w,c
  5997  0057C2  0D04               	mullw	4
  5998  0057C4  0E39               	movlw	low _show5
  5999  0057C6  24F3               	addwf	prodl,w,c
  6000  0057C8  6EF6               	movwf	tblptrl,c
  6001  0057CA  0E7B               	movlw	high _show5
  6002  0057CC  20F4               	addwfc	prodh,w,c
  6003  0057CE  6EF7               	movwf	tblptrh,c
  6004  0057D0                     	if	0	;There are less than 3 active tblptr bytes
  6005  0057D0                     	endif
  6006  0057D0  0008               	tblrd		*
  6007  0057D2  50F5               	movf	tablat,w,c
  6008  0057D4  1858               	xorwf	animation5@n,w,c
  6009  0057D6  A4D8               	btfss	status,2,c
  6010  0057D8  D048               	goto	l420
  6011                           
  6012                           ;newmain.c: 906: for (j = 0; j < 4; j++) {
  6013  0057DA  0E00               	movlw	0
  6014  0057DC  6E5D               	movwf	animation5@j,c
  6015  0057DE                     l4266:
  6016  0057DE  0E03               	movlw	3
  6017  0057E0  645D               	cpfsgt	animation5@j,c
  6018  0057E2  D001               	goto	l421
  6019  0057E4  D03F               	goto	u5460
  6020  0057E6                     l421:
  6021                           
  6022                           ;newmain.c: 907: x = show5[i][j] + 48;
  6023  0057E6  505E               	movf	animation5@i,w,c
  6024  0057E8  0D04               	mullw	4
  6025  0057EA  0E39               	movlw	low _show5
  6026  0057EC  6E5A               	movwf	??_animation5& (0+255),c
  6027  0057EE  0E7B               	movlw	high _show5
  6028  0057F0  6E5B               	movwf	(??_animation5+1)& (0+255),c
  6029  0057F2  50F3               	movf	prodl,w,c
  6030  0057F4  265A               	addwf	??_animation5,f,c
  6031  0057F6  50F4               	movf	prodh,w,c
  6032  0057F8  225B               	addwfc	??_animation5+1,f,c
  6033  0057FA  505D               	movf	animation5@j,w,c
  6034  0057FC  0D01               	mullw	1
  6035  0057FE  50F3               	movf	prodl,w,c
  6036  005800  265A               	addwf	??_animation5,f,c
  6037  005802  50F4               	movf	prodh,w,c
  6038  005804  225B               	addwfc	??_animation5+1,f,c
  6039  005806  C05A  FFF6         	movff	??_animation5,tblptrl
  6040  00580A  C05B  FFF7         	movff	??_animation5+1,tblptrh
  6041  00580E                     	if	0	;tblptru may be non-zero
  6042  00580E                     	endif
  6043  00580E                     	if	0	;tblptru may be non-zero
  6044  00580E                     	endif
  6045  00580E  0008               	tblrd		*
  6046  005810  50F5               	movf	tablat,w,c
  6047  005812  0F30               	addlw	48
  6048  005814  6E5F               	movwf	animation5@x,c
  6049                           
  6050                           ;newmain.c: 908: if (temp[x] == 0) {
  6051  005816  505F               	movf	animation5@x,w,c
  6052  005818  0D01               	mullw	1
  6053  00581A  0E01               	movlw	low _temp
  6054  00581C  24F3               	addwf	prodl,w,c
  6055  00581E  6ED9               	movwf	fsr2l,c
  6056  005820  0E00               	movlw	high _temp
  6057  005822  20F4               	addwfc	prodh,w,c
  6058  005824  6EDA               	movwf	fsr2h,c
  6059  005826  50DF               	movf	indf2,w,c
  6060  005828  A4D8               	btfss	status,2,c
  6061  00582A  D00D               	goto	l423
  6062                           
  6063                           ;newmain.c: 909: set_led(x);
  6064  00582C  505F               	movf	animation5@x,w,c
  6065  00582E  ECDA  F024         	call	_set_led
  6066                           
  6067                           ;newmain.c: 910: temp[x] = 1;
  6068  005832  505F               	movf	animation5@x,w,c
  6069  005834  0D01               	mullw	1
  6070  005836  0E01               	movlw	low _temp
  6071  005838  24F3               	addwf	prodl,w,c
  6072  00583A  6ED9               	movwf	fsr2l,c
  6073  00583C  0E00               	movlw	high _temp
  6074  00583E  20F4               	addwfc	prodh,w,c
  6075  005840  6EDA               	movwf	fsr2h,c
  6076  005842  0E01               	movlw	1
  6077  005844  D00C               	goto	L10
  6078  005846                     l423:
  6079                           
  6080                           ;newmain.c: 912: clr_led(x);
  6081  005846  505F               	movf	animation5@x,w,c
  6082  005848  EC31  F025         	call	_clr_led
  6083                           
  6084                           ;newmain.c: 913: temp[x] = 0;
  6085  00584C  505F               	movf	animation5@x,w,c
  6086  00584E  0D01               	mullw	1
  6087  005850  0E01               	movlw	low _temp
  6088  005852  24F3               	addwf	prodl,w,c
  6089  005854  6ED9               	movwf	fsr2l,c
  6090  005856  0E00               	movlw	high _temp
  6091  005858  20F4               	addwfc	prodh,w,c
  6092  00585A  6EDA               	movwf	fsr2h,c
  6093  00585C  0E00               	movlw	0
  6094  00585E                     L10:
  6095  00585E  6EDF               	movwf	indf2,c
  6096  005860  2A5D               	incf	animation5@j,f,c
  6097  005862  D7BD               	goto	l4266
  6098  005864                     u5460:
  6099                           
  6100                           ;newmain.c: 914: }
  6101                           ;newmain.c: 915: }
  6102                           ;newmain.c: 916: write_display();
  6103  005864  EC8C  F025         	call	_write_display	;wreg free
  6104                           
  6105                           ;newmain.c: 917: break;
  6106  005868  0012               	return	
  6107  00586A                     l420:
  6108  00586A  2A5E               	incf	animation5@i,f,c
  6109  00586C  D7A5               	goto	l4258
  6110  00586E                     __end_of_animation5:
  6111                           	opt stack 0
  6112                           tblptru	equ	0xFF8
  6113                           tblptrh	equ	0xFF7
  6114                           tblptrl	equ	0xFF6
  6115                           tablat	equ	0xFF5
  6116                           prodh	equ	0xFF4
  6117                           prodl	equ	0xFF3
  6118                           postinc0	equ	0xFEE
  6119                           wreg	equ	0xFE8
  6120                           postinc1	equ	0xFE6
  6121                           fsr1h	equ	0xFE2
  6122                           fsr1l	equ	0xFE1
  6123                           indf2	equ	0xFDF
  6124                           postinc2	equ	0xFDE
  6125                           fsr2h	equ	0xFDA
  6126                           fsr2l	equ	0xFD9
  6127                           status	equ	0xFD8
  6128                           
  6129 ;; *************** function _animation4 *****************
  6130 ;; Defined at:
  6131 ;;		line 785 in file "newmain.c"
  6132 ;; Parameters:    Size  Location     Type
  6133 ;;  m               1    wreg     unsigned char 
  6134 ;;  h               1   21[COMRAM] unsigned char 
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;  m               1   24[COMRAM] unsigned char 
  6137 ;;  j               1   26[COMRAM] unsigned char 
  6138 ;;  i               1   25[COMRAM] unsigned char 
  6139 ;; Return value:  Size  Location     Type
  6140 ;;                  1    wreg      void 
  6141 ;; Registers used:
  6142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6143 ;; Tracked objects:
  6144 ;;		On entry : 0/0
  6145 ;;		On exit  : 0/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6148 ;;      Params:         1       0       0       0       0       0       0
  6149 ;;      Locals:         3       0       0       0       0       0       0
  6150 ;;      Temps:          2       0       0       0       0       0       0
  6151 ;;      Totals:         6       0       0       0       0       0       0
  6152 ;;Total ram usage:        6 bytes
  6153 ;; Hardware stack levels used:    1
  6154 ;; Hardware stack levels required when called:    4
  6155 ;; This function calls:
  6156 ;;		_clr_led
  6157 ;;		_set_led
  6158 ;;		_write_display
  6159 ;; This function is called by:
  6160 ;;		_main
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           
  6164                           	psect	text11
  6165  00586E                     __ptext11:
  6166                           	opt stack 0
  6167  00586E                     _animation4:
  6168                           	opt stack 26
  6169                           
  6170                           ;incstack = 0
  6171                           ;animation4@m stored from wreg
  6172  00586E  6E5B               	movwf	animation4@m,c
  6173                           
  6174                           ;newmain.c: 786: uint8_t i = 0, j = 0;
  6175  005870  0E00               	movlw	0
  6176  005872  6E5C               	movwf	animation4@i,c
  6177  005874  0E00               	movlw	0
  6178  005876  6E5D               	movwf	animation4@j,c
  6179                           
  6180                           ;newmain.c: 787: set_led(h);
  6181  005878  5058               	movf	animation4@h,w,c
  6182  00587A  ECDA  F024         	call	_set_led
  6183                           
  6184                           ;newmain.c: 788: write_display();
  6185  00587E  EC8C  F025         	call	_write_display	;wreg free
  6186                           
  6187                           ;newmain.c: 789: if (m == 0) {
  6188  005882  505B               	movf	animation4@m,w,c
  6189  005884  A4D8               	btfss	status,2,c
  6190  005886  D085               	goto	l346
  6191                           
  6192                           ;newmain.c: 790: for (i = 0; i < 8; i++) {
  6193  005888  0E00               	movlw	0
  6194  00588A  6E5C               	movwf	animation4@i,c
  6195  00588C                     l3954:
  6196  00588C  0E07               	movlw	7
  6197  00588E  645C               	cpfsgt	animation4@i,c
  6198  005890  D001               	goto	l347
  6199  005892  D21B               	goto	u5190
  6200  005894                     l347:
  6201                           
  6202                           ;newmain.c: 791: for (j = 0; j < 8; j++)
  6203  005894  0E00               	movlw	0
  6204  005896  6E5D               	movwf	animation4@j,c
  6205  005898                     l3960:
  6206  005898  0E07               	movlw	7
  6207  00589A  645D               	cpfsgt	animation4@j,c
  6208  00589C  D001               	goto	l349
  6209  00589E  D033               	goto	u4880
  6210  0058A0                     l349:
  6211                           
  6212                           ;newmain.c: 792: if (show4_1[i][j] != 100)
  6213  0058A0  505C               	movf	animation4@i,w,c
  6214  0058A2  0D08               	mullw	8
  6215  0058A4  0EB9               	movlw	low _show4_1
  6216  0058A6  6E59               	movwf	??_animation4& (0+255),c
  6217  0058A8  0E7B               	movlw	high _show4_1
  6218  0058AA  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6219  0058AC  50F3               	movf	prodl,w,c
  6220  0058AE  2659               	addwf	??_animation4,f,c
  6221  0058B0  50F4               	movf	prodh,w,c
  6222  0058B2  225A               	addwfc	??_animation4+1,f,c
  6223  0058B4  505D               	movf	animation4@j,w,c
  6224  0058B6  0D01               	mullw	1
  6225  0058B8  50F3               	movf	prodl,w,c
  6226  0058BA  2659               	addwf	??_animation4,f,c
  6227  0058BC  50F4               	movf	prodh,w,c
  6228  0058BE  225A               	addwfc	??_animation4+1,f,c
  6229  0058C0  C059  FFF6         	movff	??_animation4,tblptrl
  6230  0058C4  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6231  0058C8                     	if	0	;tblptru may be non-zero
  6232  0058C8                     	endif
  6233  0058C8                     	if	0	;tblptru may be non-zero
  6234  0058C8                     	endif
  6235  0058C8  0008               	tblrd		*
  6236  0058CA  50F5               	movf	tablat,w,c
  6237  0058CC  0A64               	xorlw	100
  6238  0058CE  B4D8               	btfsc	status,2,c
  6239  0058D0  D018               	goto	l351
  6240                           
  6241                           ;newmain.c: 793: set_led(show4_1[i][j]);
  6242  0058D2  505C               	movf	animation4@i,w,c
  6243  0058D4  0D08               	mullw	8
  6244  0058D6  0EB9               	movlw	low _show4_1
  6245  0058D8  6E59               	movwf	??_animation4& (0+255),c
  6246  0058DA  0E7B               	movlw	high _show4_1
  6247  0058DC  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6248  0058DE  50F3               	movf	prodl,w,c
  6249  0058E0  2659               	addwf	??_animation4,f,c
  6250  0058E2  50F4               	movf	prodh,w,c
  6251  0058E4  225A               	addwfc	??_animation4+1,f,c
  6252  0058E6  505D               	movf	animation4@j,w,c
  6253  0058E8  0D01               	mullw	1
  6254  0058EA  50F3               	movf	prodl,w,c
  6255  0058EC  2659               	addwf	??_animation4,f,c
  6256  0058EE  50F4               	movf	prodh,w,c
  6257  0058F0  225A               	addwfc	??_animation4+1,f,c
  6258  0058F2  C059  FFF6         	movff	??_animation4,tblptrl
  6259  0058F6  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6260  0058FA                     	if	0	;tblptru may be non-zero
  6261  0058FA                     	endif
  6262  0058FA                     	if	0	;tblptru may be non-zero
  6263  0058FA                     	endif
  6264  0058FA  0008               	tblrd		*
  6265  0058FC  50F5               	movf	tablat,w,c
  6266  0058FE  ECDA  F024         	call	_set_led
  6267  005902                     l351:
  6268  005902  2A5D               	incf	animation4@j,f,c
  6269  005904  D7C9               	goto	l3960
  6270  005906                     u4880:
  6271                           
  6272                           ;newmain.c: 794: write_display();
  6273  005906  EC8C  F025         	call	_write_display	;wreg free
  6274                           
  6275                           ;newmain.c: 795: _delay((unsigned long)((40)*(4000000/4000.0)));
  6276  00590A  0E34               	movlw	52
  6277  00590C  6E59               	movwf	??_animation4& (0+255),c
  6278  00590E  0EF2               	movlw	242
  6279  005910                     u6777:
  6280  005910  2EE8               	decfsz	wreg,f,c
  6281  005912  D7FE               	bra	u6777
  6282  005914  2E59               	decfsz	??_animation4& (0+255),f,c
  6283  005916  D7FC               	bra	u6777
  6284                           
  6285                           ;newmain.c: 797: for (j = 0; j < 8; j++)
  6286  005918  0E00               	movlw	0
  6287  00591A  6E5D               	movwf	animation4@j,c
  6288  00591C                     l3978:
  6289  00591C  0E07               	movlw	7
  6290  00591E  645D               	cpfsgt	animation4@j,c
  6291  005920  D001               	goto	l352
  6292  005922  D033               	goto	u4910
  6293  005924                     l352:
  6294                           
  6295                           ;newmain.c: 798: if (show4_1[i][j] != 100)
  6296  005924  505C               	movf	animation4@i,w,c
  6297  005926  0D08               	mullw	8
  6298  005928  0EB9               	movlw	low _show4_1
  6299  00592A  6E59               	movwf	??_animation4& (0+255),c
  6300  00592C  0E7B               	movlw	high _show4_1
  6301  00592E  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6302  005930  50F3               	movf	prodl,w,c
  6303  005932  2659               	addwf	??_animation4,f,c
  6304  005934  50F4               	movf	prodh,w,c
  6305  005936  225A               	addwfc	??_animation4+1,f,c
  6306  005938  505D               	movf	animation4@j,w,c
  6307  00593A  0D01               	mullw	1
  6308  00593C  50F3               	movf	prodl,w,c
  6309  00593E  2659               	addwf	??_animation4,f,c
  6310  005940  50F4               	movf	prodh,w,c
  6311  005942  225A               	addwfc	??_animation4+1,f,c
  6312  005944  C059  FFF6         	movff	??_animation4,tblptrl
  6313  005948  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6314  00594C                     	if	0	;tblptru may be non-zero
  6315  00594C                     	endif
  6316  00594C                     	if	0	;tblptru may be non-zero
  6317  00594C                     	endif
  6318  00594C  0008               	tblrd		*
  6319  00594E  50F5               	movf	tablat,w,c
  6320  005950  0A64               	xorlw	100
  6321  005952  B4D8               	btfsc	status,2,c
  6322  005954  D018               	goto	l354
  6323                           
  6324                           ;newmain.c: 799: clr_led(show4_1[i][j]);
  6325  005956  505C               	movf	animation4@i,w,c
  6326  005958  0D08               	mullw	8
  6327  00595A  0EB9               	movlw	low _show4_1
  6328  00595C  6E59               	movwf	??_animation4& (0+255),c
  6329  00595E  0E7B               	movlw	high _show4_1
  6330  005960  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6331  005962  50F3               	movf	prodl,w,c
  6332  005964  2659               	addwf	??_animation4,f,c
  6333  005966  50F4               	movf	prodh,w,c
  6334  005968  225A               	addwfc	??_animation4+1,f,c
  6335  00596A  505D               	movf	animation4@j,w,c
  6336  00596C  0D01               	mullw	1
  6337  00596E  50F3               	movf	prodl,w,c
  6338  005970  2659               	addwf	??_animation4,f,c
  6339  005972  50F4               	movf	prodh,w,c
  6340  005974  225A               	addwfc	??_animation4+1,f,c
  6341  005976  C059  FFF6         	movff	??_animation4,tblptrl
  6342  00597A  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6343  00597E                     	if	0	;tblptru may be non-zero
  6344  00597E                     	endif
  6345  00597E                     	if	0	;tblptru may be non-zero
  6346  00597E                     	endif
  6347  00597E  0008               	tblrd		*
  6348  005980  50F5               	movf	tablat,w,c
  6349  005982  EC31  F025         	call	_clr_led
  6350  005986                     l354:
  6351  005986  2A5D               	incf	animation4@j,f,c
  6352  005988  D7C9               	goto	l3978
  6353  00598A                     u4910:
  6354                           
  6355                           ;newmain.c: 800: write_display();
  6356  00598A  EC8C  F025         	call	_write_display	;wreg free
  6357  00598E  2A5C               	incf	animation4@i,f,c
  6358  005990  D77D               	goto	l3954
  6359  005992                     l346:
  6360  005992  045B               	decf	animation4@m,w,c
  6361  005994  A4D8               	btfss	status,2,c
  6362  005996  D086               	goto	l356
  6363                           
  6364                           ;newmain.c: 803: for (i = 0; i < 12; i++) {
  6365  005998  0E00               	movlw	0
  6366  00599A  6E5C               	movwf	animation4@i,c
  6367  00599C                     l4000:
  6368  00599C  0E0B               	movlw	11
  6369  00599E  645C               	cpfsgt	animation4@i,c
  6370  0059A0  D001               	goto	l357
  6371  0059A2  D193               	goto	u5190
  6372  0059A4                     l357:
  6373                           
  6374                           ;newmain.c: 804: for (j = 0; j < 8; j++)
  6375  0059A4  0E00               	movlw	0
  6376  0059A6  6E5D               	movwf	animation4@j,c
  6377  0059A8                     l4006:
  6378  0059A8  0E07               	movlw	7
  6379  0059AA  645D               	cpfsgt	animation4@j,c
  6380  0059AC  D001               	goto	l359
  6381  0059AE  D033               	goto	u4970
  6382  0059B0                     l359:
  6383                           
  6384                           ;newmain.c: 805: if (show4_2[i][j] != 100)
  6385  0059B0  505C               	movf	animation4@i,w,c
  6386  0059B2  0D08               	mullw	8
  6387  0059B4  0E89               	movlw	low _show4_2
  6388  0059B6  6E59               	movwf	??_animation4& (0+255),c
  6389  0059B8  0E7A               	movlw	high _show4_2
  6390  0059BA  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6391  0059BC  50F3               	movf	prodl,w,c
  6392  0059BE  2659               	addwf	??_animation4,f,c
  6393  0059C0  50F4               	movf	prodh,w,c
  6394  0059C2  225A               	addwfc	??_animation4+1,f,c
  6395  0059C4  505D               	movf	animation4@j,w,c
  6396  0059C6  0D01               	mullw	1
  6397  0059C8  50F3               	movf	prodl,w,c
  6398  0059CA  2659               	addwf	??_animation4,f,c
  6399  0059CC  50F4               	movf	prodh,w,c
  6400  0059CE  225A               	addwfc	??_animation4+1,f,c
  6401  0059D0  C059  FFF6         	movff	??_animation4,tblptrl
  6402  0059D4  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6403  0059D8                     	if	0	;tblptru may be non-zero
  6404  0059D8                     	endif
  6405  0059D8                     	if	0	;tblptru may be non-zero
  6406  0059D8                     	endif
  6407  0059D8  0008               	tblrd		*
  6408  0059DA  50F5               	movf	tablat,w,c
  6409  0059DC  0A64               	xorlw	100
  6410  0059DE  B4D8               	btfsc	status,2,c
  6411  0059E0  D018               	goto	l361
  6412                           
  6413                           ;newmain.c: 806: set_led(show4_2[i][j]);
  6414  0059E2  505C               	movf	animation4@i,w,c
  6415  0059E4  0D08               	mullw	8
  6416  0059E6  0E89               	movlw	low _show4_2
  6417  0059E8  6E59               	movwf	??_animation4& (0+255),c
  6418  0059EA  0E7A               	movlw	high _show4_2
  6419  0059EC  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6420  0059EE  50F3               	movf	prodl,w,c
  6421  0059F0  2659               	addwf	??_animation4,f,c
  6422  0059F2  50F4               	movf	prodh,w,c
  6423  0059F4  225A               	addwfc	??_animation4+1,f,c
  6424  0059F6  505D               	movf	animation4@j,w,c
  6425  0059F8  0D01               	mullw	1
  6426  0059FA  50F3               	movf	prodl,w,c
  6427  0059FC  2659               	addwf	??_animation4,f,c
  6428  0059FE  50F4               	movf	prodh,w,c
  6429  005A00  225A               	addwfc	??_animation4+1,f,c
  6430  005A02  C059  FFF6         	movff	??_animation4,tblptrl
  6431  005A06  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6432  005A0A                     	if	0	;tblptru may be non-zero
  6433  005A0A                     	endif
  6434  005A0A                     	if	0	;tblptru may be non-zero
  6435  005A0A                     	endif
  6436  005A0A  0008               	tblrd		*
  6437  005A0C  50F5               	movf	tablat,w,c
  6438  005A0E  ECDA  F024         	call	_set_led
  6439  005A12                     l361:
  6440  005A12  2A5D               	incf	animation4@j,f,c
  6441  005A14  D7C9               	goto	l4006
  6442  005A16                     u4970:
  6443                           
  6444                           ;newmain.c: 807: write_display();
  6445  005A16  EC8C  F025         	call	_write_display	;wreg free
  6446                           
  6447                           ;newmain.c: 808: _delay((unsigned long)((30)*(4000000/4000.0)));
  6448  005A1A  0E27               	movlw	39
  6449  005A1C  6E59               	movwf	??_animation4& (0+255),c
  6450  005A1E  0EF5               	movlw	245
  6451  005A20                     u6787:
  6452  005A20  2EE8               	decfsz	wreg,f,c
  6453  005A22  D7FE               	bra	u6787
  6454  005A24  2E59               	decfsz	??_animation4& (0+255),f,c
  6455  005A26  D7FC               	bra	u6787
  6456  005A28  F000               	nop	
  6457                           
  6458                           ;newmain.c: 810: for (j = 0; j < 8; j++)
  6459  005A2A  0E00               	movlw	0
  6460  005A2C  6E5D               	movwf	animation4@j,c
  6461  005A2E                     l4024:
  6462  005A2E  0E07               	movlw	7
  6463  005A30  645D               	cpfsgt	animation4@j,c
  6464  005A32  D001               	goto	l362
  6465  005A34  D033               	goto	u5000
  6466  005A36                     l362:
  6467                           
  6468                           ;newmain.c: 811: if (show4_2[i][j] != 100)
  6469  005A36  505C               	movf	animation4@i,w,c
  6470  005A38  0D08               	mullw	8
  6471  005A3A  0E89               	movlw	low _show4_2
  6472  005A3C  6E59               	movwf	??_animation4& (0+255),c
  6473  005A3E  0E7A               	movlw	high _show4_2
  6474  005A40  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6475  005A42  50F3               	movf	prodl,w,c
  6476  005A44  2659               	addwf	??_animation4,f,c
  6477  005A46  50F4               	movf	prodh,w,c
  6478  005A48  225A               	addwfc	??_animation4+1,f,c
  6479  005A4A  505D               	movf	animation4@j,w,c
  6480  005A4C  0D01               	mullw	1
  6481  005A4E  50F3               	movf	prodl,w,c
  6482  005A50  2659               	addwf	??_animation4,f,c
  6483  005A52  50F4               	movf	prodh,w,c
  6484  005A54  225A               	addwfc	??_animation4+1,f,c
  6485  005A56  C059  FFF6         	movff	??_animation4,tblptrl
  6486  005A5A  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6487  005A5E                     	if	0	;tblptru may be non-zero
  6488  005A5E                     	endif
  6489  005A5E                     	if	0	;tblptru may be non-zero
  6490  005A5E                     	endif
  6491  005A5E  0008               	tblrd		*
  6492  005A60  50F5               	movf	tablat,w,c
  6493  005A62  0A64               	xorlw	100
  6494  005A64  B4D8               	btfsc	status,2,c
  6495  005A66  D018               	goto	l364
  6496                           
  6497                           ;newmain.c: 812: clr_led(show4_2[i][j]);
  6498  005A68  505C               	movf	animation4@i,w,c
  6499  005A6A  0D08               	mullw	8
  6500  005A6C  0E89               	movlw	low _show4_2
  6501  005A6E  6E59               	movwf	??_animation4& (0+255),c
  6502  005A70  0E7A               	movlw	high _show4_2
  6503  005A72  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6504  005A74  50F3               	movf	prodl,w,c
  6505  005A76  2659               	addwf	??_animation4,f,c
  6506  005A78  50F4               	movf	prodh,w,c
  6507  005A7A  225A               	addwfc	??_animation4+1,f,c
  6508  005A7C  505D               	movf	animation4@j,w,c
  6509  005A7E  0D01               	mullw	1
  6510  005A80  50F3               	movf	prodl,w,c
  6511  005A82  2659               	addwf	??_animation4,f,c
  6512  005A84  50F4               	movf	prodh,w,c
  6513  005A86  225A               	addwfc	??_animation4+1,f,c
  6514  005A88  C059  FFF6         	movff	??_animation4,tblptrl
  6515  005A8C  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6516  005A90                     	if	0	;tblptru may be non-zero
  6517  005A90                     	endif
  6518  005A90                     	if	0	;tblptru may be non-zero
  6519  005A90                     	endif
  6520  005A90  0008               	tblrd		*
  6521  005A92  50F5               	movf	tablat,w,c
  6522  005A94  EC31  F025         	call	_clr_led
  6523  005A98                     l364:
  6524  005A98  2A5D               	incf	animation4@j,f,c
  6525  005A9A  D7C9               	goto	l4024
  6526  005A9C                     u5000:
  6527                           
  6528                           ;newmain.c: 813: write_display();
  6529  005A9C  EC8C  F025         	call	_write_display	;wreg free
  6530  005AA0  2A5C               	incf	animation4@i,f,c
  6531  005AA2  D77C               	goto	l4000
  6532  005AA4                     l356:
  6533  005AA4  0E02               	movlw	2
  6534  005AA6  185B               	xorwf	animation4@m,w,c
  6535  005AA8  A4D8               	btfss	status,2,c
  6536  005AAA  D086               	goto	l366
  6537                           
  6538                           ;newmain.c: 816: for (i = 0; i < 12; i++) {
  6539  005AAC  0E00               	movlw	0
  6540  005AAE  6E5C               	movwf	animation4@i,c
  6541  005AB0                     l4046:
  6542  005AB0  0E0B               	movlw	11
  6543  005AB2  645C               	cpfsgt	animation4@i,c
  6544  005AB4  D001               	goto	l367
  6545  005AB6  D109               	goto	u5190
  6546  005AB8                     l367:
  6547                           
  6548                           ;newmain.c: 817: for (j = 0; j < 8; j++)
  6549  005AB8  0E00               	movlw	0
  6550  005ABA  6E5D               	movwf	animation4@j,c
  6551  005ABC                     l4052:
  6552  005ABC  0E07               	movlw	7
  6553  005ABE  645D               	cpfsgt	animation4@j,c
  6554  005AC0  D001               	goto	l369
  6555  005AC2  D033               	goto	u5060
  6556  005AC4                     l369:
  6557                           
  6558                           ;newmain.c: 818: if (show4_2[i][j] != 100)
  6559  005AC4  505C               	movf	animation4@i,w,c
  6560  005AC6  0D08               	mullw	8
  6561  005AC8  0E89               	movlw	low _show4_2
  6562  005ACA  6E59               	movwf	??_animation4& (0+255),c
  6563  005ACC  0E7A               	movlw	high _show4_2
  6564  005ACE  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6565  005AD0  50F3               	movf	prodl,w,c
  6566  005AD2  2659               	addwf	??_animation4,f,c
  6567  005AD4  50F4               	movf	prodh,w,c
  6568  005AD6  225A               	addwfc	??_animation4+1,f,c
  6569  005AD8  505D               	movf	animation4@j,w,c
  6570  005ADA  0D01               	mullw	1
  6571  005ADC  50F3               	movf	prodl,w,c
  6572  005ADE  2659               	addwf	??_animation4,f,c
  6573  005AE0  50F4               	movf	prodh,w,c
  6574  005AE2  225A               	addwfc	??_animation4+1,f,c
  6575  005AE4  C059  FFF6         	movff	??_animation4,tblptrl
  6576  005AE8  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6577  005AEC                     	if	0	;tblptru may be non-zero
  6578  005AEC                     	endif
  6579  005AEC                     	if	0	;tblptru may be non-zero
  6580  005AEC                     	endif
  6581  005AEC  0008               	tblrd		*
  6582  005AEE  50F5               	movf	tablat,w,c
  6583  005AF0  0A64               	xorlw	100
  6584  005AF2  B4D8               	btfsc	status,2,c
  6585  005AF4  D018               	goto	l371
  6586                           
  6587                           ;newmain.c: 819: set_led(show4_3[i][j]);
  6588  005AF6  505C               	movf	animation4@i,w,c
  6589  005AF8  0D08               	mullw	8
  6590  005AFA  0E29               	movlw	low _show4_3
  6591  005AFC  6E59               	movwf	??_animation4& (0+255),c
  6592  005AFE  0E7A               	movlw	high _show4_3
  6593  005B00  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6594  005B02  50F3               	movf	prodl,w,c
  6595  005B04  2659               	addwf	??_animation4,f,c
  6596  005B06  50F4               	movf	prodh,w,c
  6597  005B08  225A               	addwfc	??_animation4+1,f,c
  6598  005B0A  505D               	movf	animation4@j,w,c
  6599  005B0C  0D01               	mullw	1
  6600  005B0E  50F3               	movf	prodl,w,c
  6601  005B10  2659               	addwf	??_animation4,f,c
  6602  005B12  50F4               	movf	prodh,w,c
  6603  005B14  225A               	addwfc	??_animation4+1,f,c
  6604  005B16  C059  FFF6         	movff	??_animation4,tblptrl
  6605  005B1A  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6606  005B1E                     	if	0	;tblptru may be non-zero
  6607  005B1E                     	endif
  6608  005B1E                     	if	0	;tblptru may be non-zero
  6609  005B1E                     	endif
  6610  005B1E  0008               	tblrd		*
  6611  005B20  50F5               	movf	tablat,w,c
  6612  005B22  ECDA  F024         	call	_set_led
  6613  005B26                     l371:
  6614  005B26  2A5D               	incf	animation4@j,f,c
  6615  005B28  D7C9               	goto	l4052
  6616  005B2A                     u5060:
  6617                           
  6618                           ;newmain.c: 820: write_display();
  6619  005B2A  EC8C  F025         	call	_write_display	;wreg free
  6620                           
  6621                           ;newmain.c: 821: _delay((unsigned long)((30)*(4000000/4000.0)));
  6622  005B2E  0E27               	movlw	39
  6623  005B30  6E59               	movwf	??_animation4& (0+255),c
  6624  005B32  0EF5               	movlw	245
  6625  005B34                     u6797:
  6626  005B34  2EE8               	decfsz	wreg,f,c
  6627  005B36  D7FE               	bra	u6797
  6628  005B38  2E59               	decfsz	??_animation4& (0+255),f,c
  6629  005B3A  D7FC               	bra	u6797
  6630  005B3C  F000               	nop	
  6631                           
  6632                           ;newmain.c: 823: for (j = 0; j < 8; j++)
  6633  005B3E  0E00               	movlw	0
  6634  005B40  6E5D               	movwf	animation4@j,c
  6635  005B42                     l4070:
  6636  005B42  0E07               	movlw	7
  6637  005B44  645D               	cpfsgt	animation4@j,c
  6638  005B46  D001               	goto	l372
  6639  005B48  D033               	goto	u5090
  6640  005B4A                     l372:
  6641                           
  6642                           ;newmain.c: 824: if (show4_2[i][j] != 100)
  6643  005B4A  505C               	movf	animation4@i,w,c
  6644  005B4C  0D08               	mullw	8
  6645  005B4E  0E89               	movlw	low _show4_2
  6646  005B50  6E59               	movwf	??_animation4& (0+255),c
  6647  005B52  0E7A               	movlw	high _show4_2
  6648  005B54  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6649  005B56  50F3               	movf	prodl,w,c
  6650  005B58  2659               	addwf	??_animation4,f,c
  6651  005B5A  50F4               	movf	prodh,w,c
  6652  005B5C  225A               	addwfc	??_animation4+1,f,c
  6653  005B5E  505D               	movf	animation4@j,w,c
  6654  005B60  0D01               	mullw	1
  6655  005B62  50F3               	movf	prodl,w,c
  6656  005B64  2659               	addwf	??_animation4,f,c
  6657  005B66  50F4               	movf	prodh,w,c
  6658  005B68  225A               	addwfc	??_animation4+1,f,c
  6659  005B6A  C059  FFF6         	movff	??_animation4,tblptrl
  6660  005B6E  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6661  005B72                     	if	0	;tblptru may be non-zero
  6662  005B72                     	endif
  6663  005B72                     	if	0	;tblptru may be non-zero
  6664  005B72                     	endif
  6665  005B72  0008               	tblrd		*
  6666  005B74  50F5               	movf	tablat,w,c
  6667  005B76  0A64               	xorlw	100
  6668  005B78  B4D8               	btfsc	status,2,c
  6669  005B7A  D018               	goto	l374
  6670                           
  6671                           ;newmain.c: 825: clr_led(show4_3[i][j]);
  6672  005B7C  505C               	movf	animation4@i,w,c
  6673  005B7E  0D08               	mullw	8
  6674  005B80  0E29               	movlw	low _show4_3
  6675  005B82  6E59               	movwf	??_animation4& (0+255),c
  6676  005B84  0E7A               	movlw	high _show4_3
  6677  005B86  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6678  005B88  50F3               	movf	prodl,w,c
  6679  005B8A  2659               	addwf	??_animation4,f,c
  6680  005B8C  50F4               	movf	prodh,w,c
  6681  005B8E  225A               	addwfc	??_animation4+1,f,c
  6682  005B90  505D               	movf	animation4@j,w,c
  6683  005B92  0D01               	mullw	1
  6684  005B94  50F3               	movf	prodl,w,c
  6685  005B96  2659               	addwf	??_animation4,f,c
  6686  005B98  50F4               	movf	prodh,w,c
  6687  005B9A  225A               	addwfc	??_animation4+1,f,c
  6688  005B9C  C059  FFF6         	movff	??_animation4,tblptrl
  6689  005BA0  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6690  005BA4                     	if	0	;tblptru may be non-zero
  6691  005BA4                     	endif
  6692  005BA4                     	if	0	;tblptru may be non-zero
  6693  005BA4                     	endif
  6694  005BA4  0008               	tblrd		*
  6695  005BA6  50F5               	movf	tablat,w,c
  6696  005BA8  EC31  F025         	call	_clr_led
  6697  005BAC                     l374:
  6698  005BAC  2A5D               	incf	animation4@j,f,c
  6699  005BAE  D7C9               	goto	l4070
  6700  005BB0                     u5090:
  6701                           
  6702                           ;newmain.c: 826: write_display();
  6703  005BB0  EC8C  F025         	call	_write_display	;wreg free
  6704  005BB4  2A5C               	incf	animation4@i,f,c
  6705  005BB6  D77C               	goto	l4046
  6706  005BB8                     l366:
  6707  005BB8  0E03               	movlw	3
  6708  005BBA  185B               	xorwf	animation4@m,w,c
  6709  005BBC  A4D8               	btfss	status,2,c
  6710  005BBE  D085               	goto	u5190
  6711                           
  6712                           ;newmain.c: 830: for (i = 0; i < 8; i++) {
  6713  005BC0  0E00               	movlw	0
  6714  005BC2  6E5C               	movwf	animation4@i,c
  6715  005BC4                     l4092:
  6716  005BC4  0E07               	movlw	7
  6717  005BC6  645C               	cpfsgt	animation4@i,c
  6718  005BC8  D001               	goto	l377
  6719  005BCA  D07F               	goto	u5190
  6720  005BCC                     l377:
  6721                           
  6722                           ;newmain.c: 831: for (j = 0; j < 8; j++)
  6723  005BCC  0E00               	movlw	0
  6724  005BCE  6E5D               	movwf	animation4@j,c
  6725  005BD0                     l4098:
  6726  005BD0  0E07               	movlw	7
  6727  005BD2  645D               	cpfsgt	animation4@j,c
  6728  005BD4  D001               	goto	l379
  6729  005BD6  D033               	goto	u5150
  6730  005BD8                     l379:
  6731                           
  6732                           ;newmain.c: 832: if (show4_3[i][j] != 100)
  6733  005BD8  505C               	movf	animation4@i,w,c
  6734  005BDA  0D08               	mullw	8
  6735  005BDC  0E29               	movlw	low _show4_3
  6736  005BDE  6E59               	movwf	??_animation4& (0+255),c
  6737  005BE0  0E7A               	movlw	high _show4_3
  6738  005BE2  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6739  005BE4  50F3               	movf	prodl,w,c
  6740  005BE6  2659               	addwf	??_animation4,f,c
  6741  005BE8  50F4               	movf	prodh,w,c
  6742  005BEA  225A               	addwfc	??_animation4+1,f,c
  6743  005BEC  505D               	movf	animation4@j,w,c
  6744  005BEE  0D01               	mullw	1
  6745  005BF0  50F3               	movf	prodl,w,c
  6746  005BF2  2659               	addwf	??_animation4,f,c
  6747  005BF4  50F4               	movf	prodh,w,c
  6748  005BF6  225A               	addwfc	??_animation4+1,f,c
  6749  005BF8  C059  FFF6         	movff	??_animation4,tblptrl
  6750  005BFC  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6751  005C00                     	if	0	;tblptru may be non-zero
  6752  005C00                     	endif
  6753  005C00                     	if	0	;tblptru may be non-zero
  6754  005C00                     	endif
  6755  005C00  0008               	tblrd		*
  6756  005C02  50F5               	movf	tablat,w,c
  6757  005C04  0A64               	xorlw	100
  6758  005C06  B4D8               	btfsc	status,2,c
  6759  005C08  D018               	goto	l381
  6760                           
  6761                           ;newmain.c: 833: set_led(show4_4[i][j]);
  6762  005C0A  505C               	movf	animation4@i,w,c
  6763  005C0C  0D08               	mullw	8
  6764  005C0E  0E79               	movlw	low _show4_4
  6765  005C10  6E59               	movwf	??_animation4& (0+255),c
  6766  005C12  0E7B               	movlw	high _show4_4
  6767  005C14  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6768  005C16  50F3               	movf	prodl,w,c
  6769  005C18  2659               	addwf	??_animation4,f,c
  6770  005C1A  50F4               	movf	prodh,w,c
  6771  005C1C  225A               	addwfc	??_animation4+1,f,c
  6772  005C1E  505D               	movf	animation4@j,w,c
  6773  005C20  0D01               	mullw	1
  6774  005C22  50F3               	movf	prodl,w,c
  6775  005C24  2659               	addwf	??_animation4,f,c
  6776  005C26  50F4               	movf	prodh,w,c
  6777  005C28  225A               	addwfc	??_animation4+1,f,c
  6778  005C2A  C059  FFF6         	movff	??_animation4,tblptrl
  6779  005C2E  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6780  005C32                     	if	0	;tblptru may be non-zero
  6781  005C32                     	endif
  6782  005C32                     	if	0	;tblptru may be non-zero
  6783  005C32                     	endif
  6784  005C32  0008               	tblrd		*
  6785  005C34  50F5               	movf	tablat,w,c
  6786  005C36  ECDA  F024         	call	_set_led
  6787  005C3A                     l381:
  6788  005C3A  2A5D               	incf	animation4@j,f,c
  6789  005C3C  D7C9               	goto	l4098
  6790  005C3E                     u5150:
  6791                           
  6792                           ;newmain.c: 834: write_display();
  6793  005C3E  EC8C  F025         	call	_write_display	;wreg free
  6794                           
  6795                           ;newmain.c: 835: _delay((unsigned long)((40)*(4000000/4000.0)));
  6796  005C42  0E34               	movlw	52
  6797  005C44  6E59               	movwf	??_animation4& (0+255),c
  6798  005C46  0EF2               	movlw	242
  6799  005C48                     u6807:
  6800  005C48  2EE8               	decfsz	wreg,f,c
  6801  005C4A  D7FE               	bra	u6807
  6802  005C4C  2E59               	decfsz	??_animation4& (0+255),f,c
  6803  005C4E  D7FC               	bra	u6807
  6804                           
  6805                           ;newmain.c: 837: for (j = 0; j < 8; j++)
  6806  005C50  0E00               	movlw	0
  6807  005C52  6E5D               	movwf	animation4@j,c
  6808  005C54                     l4116:
  6809  005C54  0E07               	movlw	7
  6810  005C56  645D               	cpfsgt	animation4@j,c
  6811  005C58  D001               	goto	l382
  6812  005C5A  D033               	goto	u5180
  6813  005C5C                     l382:
  6814                           
  6815                           ;newmain.c: 838: if (show4_3[i][j] != 100)
  6816  005C5C  505C               	movf	animation4@i,w,c
  6817  005C5E  0D08               	mullw	8
  6818  005C60  0E29               	movlw	low _show4_3
  6819  005C62  6E59               	movwf	??_animation4& (0+255),c
  6820  005C64  0E7A               	movlw	high _show4_3
  6821  005C66  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6822  005C68  50F3               	movf	prodl,w,c
  6823  005C6A  2659               	addwf	??_animation4,f,c
  6824  005C6C  50F4               	movf	prodh,w,c
  6825  005C6E  225A               	addwfc	??_animation4+1,f,c
  6826  005C70  505D               	movf	animation4@j,w,c
  6827  005C72  0D01               	mullw	1
  6828  005C74  50F3               	movf	prodl,w,c
  6829  005C76  2659               	addwf	??_animation4,f,c
  6830  005C78  50F4               	movf	prodh,w,c
  6831  005C7A  225A               	addwfc	??_animation4+1,f,c
  6832  005C7C  C059  FFF6         	movff	??_animation4,tblptrl
  6833  005C80  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6834  005C84                     	if	0	;tblptru may be non-zero
  6835  005C84                     	endif
  6836  005C84                     	if	0	;tblptru may be non-zero
  6837  005C84                     	endif
  6838  005C84  0008               	tblrd		*
  6839  005C86  50F5               	movf	tablat,w,c
  6840  005C88  0A64               	xorlw	100
  6841  005C8A  B4D8               	btfsc	status,2,c
  6842  005C8C  D018               	goto	l384
  6843                           
  6844                           ;newmain.c: 839: clr_led(show4_4[i][j]);
  6845  005C8E  505C               	movf	animation4@i,w,c
  6846  005C90  0D08               	mullw	8
  6847  005C92  0E79               	movlw	low _show4_4
  6848  005C94  6E59               	movwf	??_animation4& (0+255),c
  6849  005C96  0E7B               	movlw	high _show4_4
  6850  005C98  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6851  005C9A  50F3               	movf	prodl,w,c
  6852  005C9C  2659               	addwf	??_animation4,f,c
  6853  005C9E  50F4               	movf	prodh,w,c
  6854  005CA0  225A               	addwfc	??_animation4+1,f,c
  6855  005CA2  505D               	movf	animation4@j,w,c
  6856  005CA4  0D01               	mullw	1
  6857  005CA6  50F3               	movf	prodl,w,c
  6858  005CA8  2659               	addwf	??_animation4,f,c
  6859  005CAA  50F4               	movf	prodh,w,c
  6860  005CAC  225A               	addwfc	??_animation4+1,f,c
  6861  005CAE  C059  FFF6         	movff	??_animation4,tblptrl
  6862  005CB2  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6863  005CB6                     	if	0	;tblptru may be non-zero
  6864  005CB6                     	endif
  6865  005CB6                     	if	0	;tblptru may be non-zero
  6866  005CB6                     	endif
  6867  005CB6  0008               	tblrd		*
  6868  005CB8  50F5               	movf	tablat,w,c
  6869  005CBA  EC31  F025         	call	_clr_led
  6870  005CBE                     l384:
  6871  005CBE  2A5D               	incf	animation4@j,f,c
  6872  005CC0  D7C9               	goto	l4116
  6873  005CC2                     u5180:
  6874                           
  6875                           ;newmain.c: 840: write_display();
  6876  005CC2  EC8C  F025         	call	_write_display	;wreg free
  6877  005CC6  2A5C               	incf	animation4@i,f,c
  6878  005CC8  D77D               	goto	l4092
  6879  005CCA                     u5190:
  6880                           
  6881                           ;newmain.c: 841: }
  6882                           ;newmain.c: 842: }
  6883                           ;newmain.c: 843: clr_led(h);
  6884  005CCA  5058               	movf	animation4@h,w,c
  6885  005CCC  EC31  F025         	call	_clr_led
  6886                           
  6887                           ;newmain.c: 844: write_display();
  6888  005CD0  EC8C  F025         	call	_write_display	;wreg free
  6889  005CD4  0012               	return		;funcret
  6890  005CD6                     __end_of_animation4:
  6891                           	opt stack 0
  6892                           tblptru	equ	0xFF8
  6893                           tblptrh	equ	0xFF7
  6894                           tblptrl	equ	0xFF6
  6895                           tablat	equ	0xFF5
  6896                           prodh	equ	0xFF4
  6897                           prodl	equ	0xFF3
  6898                           postinc0	equ	0xFEE
  6899                           wreg	equ	0xFE8
  6900                           postinc1	equ	0xFE6
  6901                           fsr1h	equ	0xFE2
  6902                           fsr1l	equ	0xFE1
  6903                           indf2	equ	0xFDF
  6904                           postinc2	equ	0xFDE
  6905                           fsr2h	equ	0xFDA
  6906                           fsr2l	equ	0xFD9
  6907                           status	equ	0xFD8
  6908                           
  6909 ;; *************** function _animation3 *****************
  6910 ;; Defined at:
  6911 ;;		line 708 in file "newmain.c"
  6912 ;; Parameters:    Size  Location     Type
  6913 ;;  m               1    wreg     unsigned char 
  6914 ;; Auto vars:     Size  Location     Type
  6915 ;;  m               1   25[COMRAM] unsigned char 
  6916 ;;  j               2   28[COMRAM] int 
  6917 ;;  i               2   26[COMRAM] int 
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  1    wreg      void 
  6920 ;; Registers used:
  6921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6927 ;;      Params:         0       0       0       0       0       0       0
  6928 ;;      Locals:         5       0       0       0       0       0       0
  6929 ;;      Temps:          4       0       0       0       0       0       0
  6930 ;;      Totals:         9       0       0       0       0       0       0
  6931 ;;Total ram usage:        9 bytes
  6932 ;; Hardware stack levels used:    1
  6933 ;; Hardware stack levels required when called:    4
  6934 ;; This function calls:
  6935 ;;		___wmul
  6936 ;;		_clr_led
  6937 ;;		_set_led
  6938 ;;		_write_display
  6939 ;; This function is called by:
  6940 ;;		_main
  6941 ;; This function uses a non-reentrant model
  6942 ;;
  6943                           
  6944                           	psect	text12
  6945  006F8C                     __ptext12:
  6946                           	opt stack 0
  6947  006F8C                     _animation3:
  6948                           	opt stack 26
  6949                           
  6950                           ;incstack = 0
  6951                           ;animation3@m stored from wreg
  6952  006F8C  6E5C               	movwf	animation3@m,c
  6953                           
  6954                           ;newmain.c: 709: int i = 0, j = 0;
  6955  006F8E  0E00               	movlw	0
  6956  006F90  6E5E               	movwf	animation3@i+1,c
  6957  006F92  0E00               	movlw	0
  6958  006F94  6E5D               	movwf	animation3@i,c
  6959  006F96  0E00               	movlw	0
  6960  006F98  6E60               	movwf	animation3@j+1,c
  6961  006F9A  0E00               	movlw	0
  6962  006F9C  6E5F               	movwf	animation3@j,c
  6963                           
  6964                           ;newmain.c: 710: if (m == 0) {
  6965  006F9E  505C               	movf	animation3@m,w,c
  6966  006FA0  A4D8               	btfss	status,2,c
  6967  006FA2  D0C6               	goto	l296
  6968                           
  6969                           ;newmain.c: 711: for (i = 0; i < 10; i++) {
  6970  006FA4  0E00               	movlw	0
  6971  006FA6  6E5E               	movwf	animation3@i+1,c
  6972  006FA8  0E00               	movlw	0
  6973  006FAA  6E5D               	movwf	animation3@i,c
  6974  006FAC  BE5E               	btfsc	animation3@i+1,7,c
  6975  006FAE  D008               	goto	l297
  6976  006FB0  505E               	movf	animation3@i+1,w,c
  6977  006FB2  E105               	bnz	u4410
  6978  006FB4  0E0A               	movlw	10
  6979  006FB6  5C5D               	subwf	animation3@i,w,c
  6980  006FB8  B0D8               	btfsc	status,0,c
  6981  006FBA  0012               	return	
  6982  006FBC  D001               	goto	l297
  6983  006FBE                     u4410:
  6984  006FBE  0012               	return	
  6985  006FC0                     l297:
  6986                           
  6987                           ;newmain.c: 712: for (j = 0; j < 8; j++) {
  6988  006FC0  0E00               	movlw	0
  6989  006FC2  6E60               	movwf	animation3@j+1,c
  6990  006FC4  0E00               	movlw	0
  6991  006FC6  6E5F               	movwf	animation3@j,c
  6992  006FC8                     l3726:
  6993  006FC8  BE60               	btfsc	animation3@j+1,7,c
  6994  006FCA  D006               	goto	l299
  6995  006FCC  5060               	movf	animation3@j+1,w,c
  6996  006FCE  E14A               	bnz	l3738
  6997  006FD0  0E08               	movlw	8
  6998  006FD2  5C5F               	subwf	animation3@j,w,c
  6999  006FD4  B0D8               	btfsc	status,0,c
  7000  006FD6  D046               	goto	u4440
  7001  006FD8                     l299:
  7002                           
  7003                           ;newmain.c: 713: if (show3_1[i][j] != 100)
  7004  006FD8  C05D  F058         	movff	animation3@i,??_animation3
  7005  006FDC  C05E  F059         	movff	animation3@i+1,??_animation3+1
  7006  006FE0  90D8               	bcf	status,0,c
  7007  006FE2  3658               	rlcf	??_animation3,f,c
  7008  006FE4  3659               	rlcf	??_animation3+1,f,c
  7009  006FE6  90D8               	bcf	status,0,c
  7010  006FE8  3658               	rlcf	??_animation3,f,c
  7011  006FEA  3659               	rlcf	??_animation3+1,f,c
  7012  006FEC  90D8               	bcf	status,0,c
  7013  006FEE  3658               	rlcf	??_animation3,f,c
  7014  006FF0  3659               	rlcf	??_animation3+1,f,c
  7015  006FF2  0EE9               	movlw	low _show3_1
  7016  006FF4  6E5A               	movwf	(??_animation3+2)& (0+255),c
  7017  006FF6  0E7A               	movlw	high _show3_1
  7018  006FF8  6E5B               	movwf	(??_animation3+3)& (0+255),c
  7019  006FFA  5058               	movf	??_animation3,w,c
  7020  006FFC  265A               	addwf	??_animation3+2,f,c
  7021  006FFE  5059               	movf	??_animation3+1,w,c
  7022  007000  225B               	addwfc	??_animation3+3,f,c
  7023  007002  505F               	movf	animation3@j,w,c
  7024  007004  265A               	addwf	??_animation3+2,f,c
  7025  007006  5060               	movf	animation3@j+1,w,c
  7026  007008  225B               	addwfc	??_animation3+3,f,c
  7027  00700A  C05A  FFF6         	movff	??_animation3+2,tblptrl
  7028  00700E  C05B  FFF7         	movff	??_animation3+3,tblptrh
  7029  007012                     	if	0	;tblptru may be non-zero
  7030  007012                     	endif
  7031  007012                     	if	0	;tblptru may be non-zero
  7032  007012                     	endif
  7033  007012  0008               	tblrd		*
  7034  007014  50F5               	movf	tablat,w,c
  7035  007016  0A64               	xorlw	100
  7036  007018  B4D8               	btfsc	status,2,c
  7037  00701A  D021               	goto	l301
  7038                           
  7039                           ;newmain.c: 714: set_led(show3_1[i][j]);
  7040  00701C  C05D  F058         	movff	animation3@i,??_animation3
  7041  007020  C05E  F059         	movff	animation3@i+1,??_animation3+1
  7042  007024  90D8               	bcf	status,0,c
  7043  007026  3658               	rlcf	??_animation3,f,c
  7044  007028  3659               	rlcf	??_animation3+1,f,c
  7045  00702A  90D8               	bcf	status,0,c
  7046  00702C  3658               	rlcf	??_animation3,f,c
  7047  00702E  3659               	rlcf	??_animation3+1,f,c
  7048  007030  90D8               	bcf	status,0,c
  7049  007032  3658               	rlcf	??_animation3,f,c
  7050  007034  3659               	rlcf	??_animation3+1,f,c
  7051  007036  0EE9               	movlw	low _show3_1
  7052  007038  6E5A               	movwf	(??_animation3+2)& (0+255),c
  7053  00703A  0E7A               	movlw	high _show3_1
  7054  00703C  6E5B               	movwf	(??_animation3+3)& (0+255),c
  7055  00703E  5058               	movf	??_animation3,w,c
  7056  007040  265A               	addwf	??_animation3+2,f,c
  7057  007042  5059               	movf	??_animation3+1,w,c
  7058  007044  225B               	addwfc	??_animation3+3,f,c
  7059  007046  505F               	movf	animation3@j,w,c
  7060  007048  265A               	addwf	??_animation3+2,f,c
  7061  00704A  5060               	movf	animation3@j+1,w,c
  7062  00704C  225B               	addwfc	??_animation3+3,f,c
  7063  00704E  C05A  FFF6         	movff	??_animation3+2,tblptrl
  7064  007052  C05B  FFF7         	movff	??_animation3+3,tblptrh
  7065  007056                     	if	0	;tblptru may be non-zero
  7066  007056                     	endif
  7067  007056                     	if	0	;tblptru may be non-zero
  7068  007056                     	endif
  7069  007056  0008               	tblrd		*
  7070  007058  50F5               	movf	tablat,w,c
  7071  00705A  ECDA  F024         	call	_set_led
  7072  00705E                     l301:
  7073  00705E  4A5F               	infsnz	animation3@j,f,c
  7074  007060  2A60               	incf	animation3@j+1,f,c
  7075  007062  D7B2               	goto	l3726
  7076  007064                     u4440:
  7077  007064                     l3738:
  7078                           
  7079                           ;newmain.c: 715: }
  7080                           ;newmain.c: 716: write_display();
  7081  007064  EC8C  F025         	call	_write_display	;wreg free
  7082                           
  7083                           ;newmain.c: 718: _delay((unsigned long)((30)*(4000000/4000.0)));
  7084  007068  0E27               	movlw	39
  7085  00706A  6E58               	movwf	??_animation3& (0+255),c
  7086  00706C  0EF5               	movlw	245
  7087  00706E                     u6817:
  7088  00706E  2EE8               	decfsz	wreg,f,c
  7089  007070  D7FE               	bra	u6817
  7090  007072  2E58               	decfsz	??_animation3& (0+255),f,c
  7091  007074  D7FC               	bra	u6817
  7092  007076  F000               	nop	
  7093                           
  7094                           ;newmain.c: 719: for (j = 0; j < 8; j++) {
  7095  007078  0E00               	movlw	0
  7096  00707A  6E60               	movwf	animation3@j+1,c
  7097  00707C  0E00               	movlw	0
  7098  00707E  6E5F               	movwf	animation3@j,c
  7099  007080                     l3744:
  7100  007080  BE60               	btfsc	animation3@j+1,7,c
  7101  007082  D006               	goto	l302
  7102  007084  5060               	movf	animation3@j+1,w,c
  7103  007086  E14A               	bnz	l3756
  7104  007088  0E08               	movlw	8
  7105  00708A  5C5F               	subwf	animation3@j,w,c
  7106  00708C  B0D8               	btfsc	status,0,c
  7107  00708E  D046               	goto	u4470
  7108  007090                     l302:
  7109                           
  7110                           ;newmain.c: 720: if (show3_1[i][j] != 100)
  7111  007090  C05D  F058         	movff	animation3@i,??_animation3
  7112  007094  C05E  F059         	movff	animation3@i+1,??_animation3+1
  7113  007098  90D8               	bcf	status,0,c
  7114  00709A  3658               	rlcf	??_animation3,f,c
  7115  00709C  3659               	rlcf	??_animation3+1,f,c
  7116  00709E  90D8               	bcf	status,0,c
  7117  0070A0  3658               	rlcf	??_animation3,f,c
  7118  0070A2  3659               	rlcf	??_animation3+1,f,c
  7119  0070A4  90D8               	bcf	status,0,c
  7120  0070A6  3658               	rlcf	??_animation3,f,c
  7121  0070A8  3659               	rlcf	??_animation3+1,f,c
  7122  0070AA  0EE9               	movlw	low _show3_1
  7123  0070AC  6E5A               	movwf	(??_animation3+2)& (0+255),c
  7124  0070AE  0E7A               	movlw	high _show3_1
  7125  0070B0  6E5B               	movwf	(??_animation3+3)& (0+255),c
  7126  0070B2  5058               	movf	??_animation3,w,c
  7127  0070B4  265A               	addwf	??_animation3+2,f,c
  7128  0070B6  5059               	movf	??_animation3+1,w,c
  7129  0070B8  225B               	addwfc	??_animation3+3,f,c
  7130  0070BA  505F               	movf	animation3@j,w,c
  7131  0070BC  265A               	addwf	??_animation3+2,f,c
  7132  0070BE  5060               	movf	animation3@j+1,w,c
  7133  0070C0  225B               	addwfc	??_animation3+3,f,c
  7134  0070C2  C05A  FFF6         	movff	??_animation3+2,tblptrl
  7135  0070C6  C05B  FFF7         	movff	??_animation3+3,tblptrh
  7136  0070CA                     	if	0	;tblptru may be non-zero
  7137  0070CA                     	endif
  7138  0070CA                     	if	0	;tblptru may be non-zero
  7139  0070CA                     	endif
  7140  0070CA  0008               	tblrd		*
  7141  0070CC  50F5               	movf	tablat,w,c
  7142  0070CE  0A64               	xorlw	100
  7143  0070D0  B4D8               	btfsc	status,2,c
  7144  0070D2  D021               	goto	l304
  7145                           
  7146                           ;newmain.c: 721: clr_led(show3_1[i][j]);
  7147  0070D4  C05D  F058         	movff	animation3@i,??_animation3
  7148  0070D8  C05E  F059         	movff	animation3@i+1,??_animation3+1
  7149  0070DC  90D8               	bcf	status,0,c
  7150  0070DE  3658               	rlcf	??_animation3,f,c
  7151  0070E0  3659               	rlcf	??_animation3+1,f,c
  7152  0070E2  90D8               	bcf	status,0,c
  7153  0070E4  3658               	rlcf	??_animation3,f,c
  7154  0070E6  3659               	rlcf	??_animation3+1,f,c
  7155  0070E8  90D8               	bcf	status,0,c
  7156  0070EA  3658               	rlcf	??_animation3,f,c
  7157  0070EC  3659               	rlcf	??_animation3+1,f,c
  7158  0070EE  0EE9               	movlw	low _show3_1
  7159  0070F0  6E5A               	movwf	(??_animation3+2)& (0+255),c
  7160  0070F2  0E7A               	movlw	high _show3_1
  7161  0070F4  6E5B               	movwf	(??_animation3+3)& (0+255),c
  7162  0070F6  5058               	movf	??_animation3,w,c
  7163  0070F8  265A               	addwf	??_animation3+2,f,c
  7164  0070FA  5059               	movf	??_animation3+1,w,c
  7165  0070FC  225B               	addwfc	??_animation3+3,f,c
  7166  0070FE  505F               	movf	animation3@j,w,c
  7167  007100  265A               	addwf	??_animation3+2,f,c
  7168  007102  5060               	movf	animation3@j+1,w,c
  7169  007104  225B               	addwfc	??_animation3+3,f,c
  7170  007106  C05A  FFF6         	movff	??_animation3+2,tblptrl
  7171  00710A  C05B  FFF7         	movff	??_animation3+3,tblptrh
  7172  00710E                     	if	0	;tblptru may be non-zero
  7173  00710E                     	endif
  7174  00710E                     	if	0	;tblptru may be non-zero
  7175  00710E                     	endif
  7176  00710E  0008               	tblrd		*
  7177  007110  50F5               	movf	tablat,w,c
  7178  007112  EC31  F025         	call	_clr_led
  7179  007116                     l304:
  7180  007116  4A5F               	infsnz	animation3@j,f,c
  7181  007118  2A60               	incf	animation3@j+1,f,c
  7182  00711A  D7B2               	goto	l3744
  7183  00711C                     u4470:
  7184  00711C                     l3756:
  7185                           
  7186                           ;newmain.c: 722: }
  7187                           ;newmain.c: 723: write_display();
  7188  00711C  EC8C  F025         	call	_write_display	;wreg free
  7189  007120  4A5D               	infsnz	animation3@i,f,c
  7190  007122  2A5E               	incf	animation3@i+1,f,c
  7191  007124  BE5E               	btfsc	animation3@i+1,7,c
  7192  007126  D74C               	goto	l297
  7193  007128  505E               	movf	animation3@i+1,w,c
  7194  00712A  E101               	bnz	u4480
  7195  00712C  D743               	goto	L11
  7196  00712E                     u4480:
  7197                           
  7198                           ;newmain.c: 724: }
  7199                           ;newmain.c: 725: } else if (m == 1) {
  7200  00712E  0012               	return	
  7201  007130                     l296:
  7202  007130  045C               	decf	animation3@m,w,c
  7203  007132  A4D8               	btfss	status,2,c
  7204  007134  D0BA               	goto	l306
  7205                           
  7206                           ;newmain.c: 726: for (i = 0; i < 7; i++) {
  7207  007136  0E00               	movlw	0
  7208  007138  6E5E               	movwf	animation3@i+1,c
  7209  00713A  0E00               	movlw	0
  7210  00713C  6E5D               	movwf	animation3@i,c
  7211  00713E  BE5E               	btfsc	animation3@i+1,7,c
  7212  007140  D008               	goto	l307
  7213  007142  505E               	movf	animation3@i+1,w,c
  7214  007144  E105               	bnz	u4500
  7215  007146  0E07               	movlw	7
  7216  007148  5C5D               	subwf	animation3@i,w,c
  7217  00714A  B0D8               	btfsc	status,0,c
  7218  00714C  0012               	return	
  7219  00714E  D001               	goto	l307
  7220  007150                     u4500:
  7221  007150  0012               	return	
  7222  007152                     l307:
  7223                           
  7224                           ;newmain.c: 727: for (j = 0; j < 6; j++) {
  7225  007152  0E00               	movlw	0
  7226  007154  6E60               	movwf	animation3@j+1,c
  7227  007156  0E00               	movlw	0
  7228  007158  6E5F               	movwf	animation3@j,c
  7229  00715A                     l3772:
  7230  00715A  BE60               	btfsc	animation3@j+1,7,c
  7231  00715C  D006               	goto	l309
  7232  00715E  5060               	movf	animation3@j+1,w,c
  7233  007160  E144               	bnz	l3784
  7234  007162  0E06               	movlw	6
  7235  007164  5C5F               	subwf	animation3@j,w,c
  7236  007166  B0D8               	btfsc	status,0,c
  7237  007168  D040               	goto	u4530
  7238  00716A                     l309:
  7239                           
  7240                           ;newmain.c: 728: if (show3_2[i][j] != 100)
  7241  00716A  C05D  F043         	movff	animation3@i,___wmul@multiplier
  7242  00716E  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  7243  007172  0E00               	movlw	0
  7244  007174  6E46               	movwf	___wmul@multiplicand+1,c
  7245  007176  0E06               	movlw	6
  7246  007178  6E45               	movwf	___wmul@multiplicand,c
  7247  00717A  EC54  F023         	call	___wmul	;wreg free
  7248  00717E  0E39               	movlw	low _show3_2
  7249  007180  6E58               	movwf	??_animation3& (0+255),c
  7250  007182  0E7C               	movlw	high _show3_2
  7251  007184  6E59               	movwf	(??_animation3+1)& (0+255),c
  7252  007186  5043               	movf	?___wmul,w,c
  7253  007188  2658               	addwf	??_animation3,f,c
  7254  00718A  5044               	movf	?___wmul+1,w,c
  7255  00718C  2259               	addwfc	??_animation3+1,f,c
  7256  00718E  505F               	movf	animation3@j,w,c
  7257  007190  2658               	addwf	??_animation3,f,c
  7258  007192  5060               	movf	animation3@j+1,w,c
  7259  007194  2259               	addwfc	??_animation3+1,f,c
  7260  007196  C058  FFF6         	movff	??_animation3,tblptrl
  7261  00719A  C059  FFF7         	movff	??_animation3+1,tblptrh
  7262  00719E                     	if	0	;tblptru may be non-zero
  7263  00719E                     	endif
  7264  00719E                     	if	0	;tblptru may be non-zero
  7265  00719E                     	endif
  7266  00719E  0008               	tblrd		*
  7267  0071A0  50F5               	movf	tablat,w,c
  7268  0071A2  0A64               	xorlw	100
  7269  0071A4  B4D8               	btfsc	status,2,c
  7270  0071A6  D01E               	goto	l311
  7271                           
  7272                           ;newmain.c: 729: set_led(show3_2[i][j]);
  7273  0071A8  C05D  F043         	movff	animation3@i,___wmul@multiplier
  7274  0071AC  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  7275  0071B0  0E00               	movlw	0
  7276  0071B2  6E46               	movwf	___wmul@multiplicand+1,c
  7277  0071B4  0E06               	movlw	6
  7278  0071B6  6E45               	movwf	___wmul@multiplicand,c
  7279  0071B8  EC54  F023         	call	___wmul	;wreg free
  7280  0071BC  0E39               	movlw	low _show3_2
  7281  0071BE  6E58               	movwf	??_animation3& (0+255),c
  7282  0071C0  0E7C               	movlw	high _show3_2
  7283  0071C2  6E59               	movwf	(??_animation3+1)& (0+255),c
  7284  0071C4  5043               	movf	?___wmul,w,c
  7285  0071C6  2658               	addwf	??_animation3,f,c
  7286  0071C8  5044               	movf	?___wmul+1,w,c
  7287  0071CA  2259               	addwfc	??_animation3+1,f,c
  7288  0071CC  505F               	movf	animation3@j,w,c
  7289  0071CE  2658               	addwf	??_animation3,f,c
  7290  0071D0  5060               	movf	animation3@j+1,w,c
  7291  0071D2  2259               	addwfc	??_animation3+1,f,c
  7292  0071D4  C058  FFF6         	movff	??_animation3,tblptrl
  7293  0071D8  C059  FFF7         	movff	??_animation3+1,tblptrh
  7294  0071DC                     	if	0	;tblptru may be non-zero
  7295  0071DC                     	endif
  7296  0071DC                     	if	0	;tblptru may be non-zero
  7297  0071DC                     	endif
  7298  0071DC  0008               	tblrd		*
  7299  0071DE  50F5               	movf	tablat,w,c
  7300  0071E0  ECDA  F024         	call	_set_led
  7301  0071E4                     l311:
  7302  0071E4  4A5F               	infsnz	animation3@j,f,c
  7303  0071E6  2A60               	incf	animation3@j+1,f,c
  7304  0071E8  D7B8               	goto	l3772
  7305  0071EA                     u4530:
  7306  0071EA                     l3784:
  7307                           
  7308                           ;newmain.c: 730: }
  7309                           ;newmain.c: 731: write_display();
  7310  0071EA  EC8C  F025         	call	_write_display	;wreg free
  7311                           
  7312                           ;newmain.c: 732: _delay((unsigned long)((30)*(4000000/4000.0)));
  7313  0071EE  0E27               	movlw	39
  7314  0071F0  6E58               	movwf	??_animation3& (0+255),c
  7315  0071F2  0EF5               	movlw	245
  7316  0071F4                     u6827:
  7317  0071F4  2EE8               	decfsz	wreg,f,c
  7318  0071F6  D7FE               	bra	u6827
  7319  0071F8  2E58               	decfsz	??_animation3& (0+255),f,c
  7320  0071FA  D7FC               	bra	u6827
  7321  0071FC  F000               	nop	
  7322                           
  7323                           ;newmain.c: 733: for (j = 0; j < 6; j++) {
  7324  0071FE  0E00               	movlw	0
  7325  007200  6E60               	movwf	animation3@j+1,c
  7326  007202  0E00               	movlw	0
  7327  007204  6E5F               	movwf	animation3@j,c
  7328  007206                     l3790:
  7329  007206  BE60               	btfsc	animation3@j+1,7,c
  7330  007208  D006               	goto	l312
  7331  00720A  5060               	movf	animation3@j+1,w,c
  7332  00720C  E144               	bnz	l3802
  7333  00720E  0E06               	movlw	6
  7334  007210  5C5F               	subwf	animation3@j,w,c
  7335  007212  B0D8               	btfsc	status,0,c
  7336  007214  D040               	goto	u4560
  7337  007216                     l312:
  7338                           
  7339                           ;newmain.c: 734: if (show3_2[i][j] != 100)
  7340  007216  C05D  F043         	movff	animation3@i,___wmul@multiplier
  7341  00721A  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  7342  00721E  0E00               	movlw	0
  7343  007220  6E46               	movwf	___wmul@multiplicand+1,c
  7344  007222  0E06               	movlw	6
  7345  007224  6E45               	movwf	___wmul@multiplicand,c
  7346  007226  EC54  F023         	call	___wmul	;wreg free
  7347  00722A  0E39               	movlw	low _show3_2
  7348  00722C  6E58               	movwf	??_animation3& (0+255),c
  7349  00722E  0E7C               	movlw	high _show3_2
  7350  007230  6E59               	movwf	(??_animation3+1)& (0+255),c
  7351  007232  5043               	movf	?___wmul,w,c
  7352  007234  2658               	addwf	??_animation3,f,c
  7353  007236  5044               	movf	?___wmul+1,w,c
  7354  007238  2259               	addwfc	??_animation3+1,f,c
  7355  00723A  505F               	movf	animation3@j,w,c
  7356  00723C  2658               	addwf	??_animation3,f,c
  7357  00723E  5060               	movf	animation3@j+1,w,c
  7358  007240  2259               	addwfc	??_animation3+1,f,c
  7359  007242  C058  FFF6         	movff	??_animation3,tblptrl
  7360  007246  C059  FFF7         	movff	??_animation3+1,tblptrh
  7361  00724A                     	if	0	;tblptru may be non-zero
  7362  00724A                     	endif
  7363  00724A                     	if	0	;tblptru may be non-zero
  7364  00724A                     	endif
  7365  00724A  0008               	tblrd		*
  7366  00724C  50F5               	movf	tablat,w,c
  7367  00724E  0A64               	xorlw	100
  7368  007250  B4D8               	btfsc	status,2,c
  7369  007252  D01E               	goto	l314
  7370                           
  7371                           ;newmain.c: 735: clr_led(show3_2[i][j]);
  7372  007254  C05D  F043         	movff	animation3@i,___wmul@multiplier
  7373  007258  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  7374  00725C  0E00               	movlw	0
  7375  00725E  6E46               	movwf	___wmul@multiplicand+1,c
  7376  007260  0E06               	movlw	6
  7377  007262  6E45               	movwf	___wmul@multiplicand,c
  7378  007264  EC54  F023         	call	___wmul	;wreg free
  7379  007268  0E39               	movlw	low _show3_2
  7380  00726A  6E58               	movwf	??_animation3& (0+255),c
  7381  00726C  0E7C               	movlw	high _show3_2
  7382  00726E  6E59               	movwf	(??_animation3+1)& (0+255),c
  7383  007270  5043               	movf	?___wmul,w,c
  7384  007272  2658               	addwf	??_animation3,f,c
  7385  007274  5044               	movf	?___wmul+1,w,c
  7386  007276  2259               	addwfc	??_animation3+1,f,c
  7387  007278  505F               	movf	animation3@j,w,c
  7388  00727A  2658               	addwf	??_animation3,f,c
  7389  00727C  5060               	movf	animation3@j+1,w,c
  7390  00727E  2259               	addwfc	??_animation3+1,f,c
  7391  007280  C058  FFF6         	movff	??_animation3,tblptrl
  7392  007284  C059  FFF7         	movff	??_animation3+1,tblptrh
  7393  007288                     	if	0	;tblptru may be non-zero
  7394  007288                     	endif
  7395  007288                     	if	0	;tblptru may be non-zero
  7396  007288                     	endif
  7397  007288  0008               	tblrd		*
  7398  00728A  50F5               	movf	tablat,w,c
  7399  00728C  EC31  F025         	call	_clr_led
  7400  007290                     l314:
  7401  007290  4A5F               	infsnz	animation3@j,f,c
  7402  007292  2A60               	incf	animation3@j+1,f,c
  7403  007294  D7B8               	goto	l3790
  7404  007296                     u4560:
  7405  007296                     l3802:
  7406                           
  7407                           ;newmain.c: 736: }
  7408                           ;newmain.c: 737: write_display();
  7409  007296  EC8C  F025         	call	_write_display	;wreg free
  7410  00729A  4A5D               	infsnz	animation3@i,f,c
  7411  00729C  2A5E               	incf	animation3@i+1,f,c
  7412  00729E  BE5E               	btfsc	animation3@i+1,7,c
  7413  0072A0  D758               	goto	l307
  7414  0072A2  505E               	movf	animation3@i+1,w,c
  7415  0072A4  E101               	bnz	u4570
  7416  0072A6  D74F               	goto	L12
  7417  0072A8                     u4570:
  7418                           
  7419                           ;newmain.c: 738: }
  7420                           ;newmain.c: 739: } else if (m == 2) {
  7421  0072A8  0012               	return	
  7422  0072AA                     l306:
  7423  0072AA  0E02               	movlw	2
  7424  0072AC  185C               	xorwf	animation3@m,w,c
  7425  0072AE  A4D8               	btfss	status,2,c
  7426  0072B0  D0BA               	goto	l316
  7427                           
  7428                           ;newmain.c: 740: for (i = 0; i < 5; i++) {
  7429  0072B2  0E00               	movlw	0
  7430  0072B4  6E5E               	movwf	animation3@i+1,c
  7431  0072B6  0E00               	movlw	0
  7432  0072B8  6E5D               	movwf	animation3@i,c
  7433  0072BA  BE5E               	btfsc	animation3@i+1,7,c
  7434  0072BC  D008               	goto	l317
  7435  0072BE  505E               	movf	animation3@i+1,w,c
  7436  0072C0  E105               	bnz	u4590
  7437  0072C2  0E05               	movlw	5
  7438  0072C4  5C5D               	subwf	animation3@i,w,c
  7439  0072C6  B0D8               	btfsc	status,0,c
  7440  0072C8  0012               	return	
  7441  0072CA  D001               	goto	l317
  7442  0072CC                     u4590:
  7443  0072CC  0012               	return	
  7444  0072CE                     l317:
  7445                           
  7446                           ;newmain.c: 741: for (j = 0; j < 4; j++) {
  7447  0072CE  0E00               	movlw	0
  7448  0072D0  6E60               	movwf	animation3@j+1,c
  7449  0072D2  0E00               	movlw	0
  7450  0072D4  6E5F               	movwf	animation3@j,c
  7451  0072D6                     l3818:
  7452  0072D6  BE60               	btfsc	animation3@j+1,7,c
  7453  0072D8  D006               	goto	l319
  7454  0072DA  5060               	movf	animation3@j+1,w,c
  7455  0072DC  E144               	bnz	l3830
  7456  0072DE  0E04               	movlw	4
  7457  0072E0  5C5F               	subwf	animation3@j,w,c
  7458  0072E2  B0D8               	btfsc	status,0,c
  7459  0072E4  D040               	goto	u4620
  7460  0072E6                     l319:
  7461                           
  7462                           ;newmain.c: 742: if (show3_3[i][j] != 100)
  7463  0072E6  C05D  F058         	movff	animation3@i,??_animation3
  7464  0072EA  C05E  F059         	movff	animation3@i+1,??_animation3+1
  7465  0072EE  90D8               	bcf	status,0,c
  7466  0072F0  3658               	rlcf	??_animation3,f,c
  7467  0072F2  3659               	rlcf	??_animation3+1,f,c
  7468  0072F4  90D8               	bcf	status,0,c
  7469  0072F6  3658               	rlcf	??_animation3,f,c
  7470  0072F8  3659               	rlcf	??_animation3+1,f,c
  7471  0072FA  0ECB               	movlw	low _show3_3
  7472  0072FC  6E5A               	movwf	(??_animation3+2)& (0+255),c
  7473  0072FE  0E7C               	movlw	high _show3_3
  7474  007300  6E5B               	movwf	(??_animation3+3)& (0+255),c
  7475  007302  5058               	movf	??_animation3,w,c
  7476  007304  265A               	addwf	??_animation3+2,f,c
  7477  007306  5059               	movf	??_animation3+1,w,c
  7478  007308  225B               	addwfc	??_animation3+3,f,c
  7479  00730A  505F               	movf	animation3@j,w,c
  7480  00730C  265A               	addwf	??_animation3+2,f,c
  7481  00730E  5060               	movf	animation3@j+1,w,c
  7482  007310  225B               	addwfc	??_animation3+3,f,c
  7483  007312  C05A  FFF6         	movff	??_animation3+2,tblptrl
  7484  007316  C05B  FFF7         	movff	??_animation3+3,tblptrh
  7485  00731A                     	if	0	;tblptru may be non-zero
  7486  00731A                     	endif
  7487  00731A                     	if	0	;tblptru may be non-zero
  7488  00731A                     	endif
  7489  00731A  0008               	tblrd		*
  7490  00731C  50F5               	movf	tablat,w,c
  7491  00731E  0A64               	xorlw	100
  7492  007320  B4D8               	btfsc	status,2,c
  7493  007322  D01E               	goto	l321
  7494                           
  7495                           ;newmain.c: 743: set_led(show3_3[i][j]);
  7496  007324  C05D  F058         	movff	animation3@i,??_animation3
  7497  007328  C05E  F059         	movff	animation3@i+1,??_animation3+1
  7498  00732C  90D8               	bcf	status,0,c
  7499  00732E  3658               	rlcf	??_animation3,f,c
  7500  007330  3659               	rlcf	??_animation3+1,f,c
  7501  007332  90D8               	bcf	status,0,c
  7502  007334  3658               	rlcf	??_animation3,f,c
  7503  007336  3659               	rlcf	??_animation3+1,f,c
  7504  007338  0ECB               	movlw	low _show3_3
  7505  00733A  6E5A               	movwf	(??_animation3+2)& (0+255),c
  7506  00733C  0E7C               	movlw	high _show3_3
  7507  00733E  6E5B               	movwf	(??_animation3+3)& (0+255),c
  7508  007340  5058               	movf	??_animation3,w,c
  7509  007342  265A               	addwf	??_animation3+2,f,c
  7510  007344  5059               	movf	??_animation3+1,w,c
  7511  007346  225B               	addwfc	??_animation3+3,f,c
  7512  007348  505F               	movf	animation3@j,w,c
  7513  00734A  265A               	addwf	??_animation3+2,f,c
  7514  00734C  5060               	movf	animation3@j+1,w,c
  7515  00734E  225B               	addwfc	??_animation3+3,f,c
  7516  007350  C05A  FFF6         	movff	??_animation3+2,tblptrl
  7517  007354  C05B  FFF7         	movff	??_animation3+3,tblptrh
  7518  007358                     	if	0	;tblptru may be non-zero
  7519  007358                     	endif
  7520  007358                     	if	0	;tblptru may be non-zero
  7521  007358                     	endif
  7522  007358  0008               	tblrd		*
  7523  00735A  50F5               	movf	tablat,w,c
  7524  00735C  ECDA  F024         	call	_set_led
  7525  007360                     l321:
  7526  007360  4A5F               	infsnz	animation3@j,f,c
  7527  007362  2A60               	incf	animation3@j+1,f,c
  7528  007364  D7B8               	goto	l3818
  7529  007366                     u4620:
  7530  007366                     l3830:
  7531                           
  7532                           ;newmain.c: 744: }
  7533                           ;newmain.c: 745: write_display();
  7534  007366  EC8C  F025         	call	_write_display	;wreg free
  7535                           
  7536                           ;newmain.c: 746: _delay((unsigned long)((30)*(4000000/4000.0)));
  7537  00736A  0E27               	movlw	39
  7538  00736C  6E58               	movwf	??_animation3& (0+255),c
  7539  00736E  0EF5               	movlw	245
  7540  007370                     u6837:
  7541  007370  2EE8               	decfsz	wreg,f,c
  7542  007372  D7FE               	bra	u6837
  7543  007374  2E58               	decfsz	??_animation3& (0+255),f,c
  7544  007376  D7FC               	bra	u6837
  7545  007378  F000               	nop	
  7546                           
  7547                           ;newmain.c: 747: for (j = 0; j < 4; j++) {
  7548  00737A  0E00               	movlw	0
  7549  00737C  6E60               	movwf	animation3@j+1,c
  7550  00737E  0E00               	movlw	0
  7551  007380  6E5F               	movwf	animation3@j,c
  7552  007382                     l3836:
  7553  007382  BE60               	btfsc	animation3@j+1,7,c
  7554  007384  D006               	goto	l322
  7555  007386  5060               	movf	animation3@j+1,w,c
  7556  007388  E144               	bnz	l3848
  7557  00738A  0E04               	movlw	4
  7558  00738C  5C5F               	subwf	animation3@j,w,c
  7559  00738E  B0D8               	btfsc	status,0,c
  7560  007390  D040               	goto	u4650
  7561  007392                     l322:
  7562                           
  7563                           ;newmain.c: 748: if (show3_3[i][j] != 100)
  7564  007392  C05D  F058         	movff	animation3@i,??_animation3
  7565  007396  C05E  F059         	movff	animation3@i+1,??_animation3+1
  7566  00739A  90D8               	bcf	status,0,c
  7567  00739C  3658               	rlcf	??_animation3,f,c
  7568  00739E  3659               	rlcf	??_animation3+1,f,c
  7569  0073A0  90D8               	bcf	status,0,c
  7570  0073A2  3658               	rlcf	??_animation3,f,c
  7571  0073A4  3659               	rlcf	??_animation3+1,f,c
  7572  0073A6  0ECB               	movlw	low _show3_3
  7573  0073A8  6E5A               	movwf	(??_animation3+2)& (0+255),c
  7574  0073AA  0E7C               	movlw	high _show3_3
  7575  0073AC  6E5B               	movwf	(??_animation3+3)& (0+255),c
  7576  0073AE  5058               	movf	??_animation3,w,c
  7577  0073B0  265A               	addwf	??_animation3+2,f,c
  7578  0073B2  5059               	movf	??_animation3+1,w,c
  7579  0073B4  225B               	addwfc	??_animation3+3,f,c
  7580  0073B6  505F               	movf	animation3@j,w,c
  7581  0073B8  265A               	addwf	??_animation3+2,f,c
  7582  0073BA  5060               	movf	animation3@j+1,w,c
  7583  0073BC  225B               	addwfc	??_animation3+3,f,c
  7584  0073BE  C05A  FFF6         	movff	??_animation3+2,tblptrl
  7585  0073C2  C05B  FFF7         	movff	??_animation3+3,tblptrh
  7586  0073C6                     	if	0	;tblptru may be non-zero
  7587  0073C6                     	endif
  7588  0073C6                     	if	0	;tblptru may be non-zero
  7589  0073C6                     	endif
  7590  0073C6  0008               	tblrd		*
  7591  0073C8  50F5               	movf	tablat,w,c
  7592  0073CA  0A64               	xorlw	100
  7593  0073CC  B4D8               	btfsc	status,2,c
  7594  0073CE  D01E               	goto	l324
  7595                           
  7596                           ;newmain.c: 749: clr_led(show3_3[i][j]);
  7597  0073D0  C05D  F058         	movff	animation3@i,??_animation3
  7598  0073D4  C05E  F059         	movff	animation3@i+1,??_animation3+1
  7599  0073D8  90D8               	bcf	status,0,c
  7600  0073DA  3658               	rlcf	??_animation3,f,c
  7601  0073DC  3659               	rlcf	??_animation3+1,f,c
  7602  0073DE  90D8               	bcf	status,0,c
  7603  0073E0  3658               	rlcf	??_animation3,f,c
  7604  0073E2  3659               	rlcf	??_animation3+1,f,c
  7605  0073E4  0ECB               	movlw	low _show3_3
  7606  0073E6  6E5A               	movwf	(??_animation3+2)& (0+255),c
  7607  0073E8  0E7C               	movlw	high _show3_3
  7608  0073EA  6E5B               	movwf	(??_animation3+3)& (0+255),c
  7609  0073EC  5058               	movf	??_animation3,w,c
  7610  0073EE  265A               	addwf	??_animation3+2,f,c
  7611  0073F0  5059               	movf	??_animation3+1,w,c
  7612  0073F2  225B               	addwfc	??_animation3+3,f,c
  7613  0073F4  505F               	movf	animation3@j,w,c
  7614  0073F6  265A               	addwf	??_animation3+2,f,c
  7615  0073F8  5060               	movf	animation3@j+1,w,c
  7616  0073FA  225B               	addwfc	??_animation3+3,f,c
  7617  0073FC  C05A  FFF6         	movff	??_animation3+2,tblptrl
  7618  007400  C05B  FFF7         	movff	??_animation3+3,tblptrh
  7619  007404                     	if	0	;tblptru may be non-zero
  7620  007404                     	endif
  7621  007404                     	if	0	;tblptru may be non-zero
  7622  007404                     	endif
  7623  007404  0008               	tblrd		*
  7624  007406  50F5               	movf	tablat,w,c
  7625  007408  EC31  F025         	call	_clr_led
  7626  00740C                     l324:
  7627  00740C  4A5F               	infsnz	animation3@j,f,c
  7628  00740E  2A60               	incf	animation3@j+1,f,c
  7629  007410  D7B8               	goto	l3836
  7630  007412                     u4650:
  7631  007412                     l3848:
  7632                           
  7633                           ;newmain.c: 750: }
  7634                           ;newmain.c: 751: write_display();
  7635  007412  EC8C  F025         	call	_write_display	;wreg free
  7636  007416  4A5D               	infsnz	animation3@i,f,c
  7637  007418  2A5E               	incf	animation3@i+1,f,c
  7638  00741A  BE5E               	btfsc	animation3@i+1,7,c
  7639  00741C  D758               	goto	l317
  7640  00741E  505E               	movf	animation3@i+1,w,c
  7641  007420  E101               	bnz	u4660
  7642  007422  D74F               	goto	L13
  7643  007424                     u4660:
  7644                           
  7645                           ;newmain.c: 752: }
  7646                           ;newmain.c: 753: } else if (m == 3) {
  7647  007424  0012               	return	
  7648  007426                     l316:
  7649  007426  0E03               	movlw	3
  7650  007428  185C               	xorwf	animation3@m,w,c
  7651  00742A  A4D8               	btfss	status,2,c
  7652  00742C  0012               	return	
  7653                           
  7654                           ;newmain.c: 755: for (i = 3; i >= 0; i--) {
  7655  00742E  0E00               	movlw	0
  7656  007430  6E5E               	movwf	animation3@i+1,c
  7657  007432  0E03               	movlw	3
  7658  007434  6E5D               	movwf	animation3@i,c
  7659  007436                     l3858:
  7660  007436  BE5E               	btfsc	animation3@i+1,7,c
  7661  007438  D0A8               	goto	u4750
  7662                           
  7663                           ;newmain.c: 756: for (j = 0; j < 26; j++) {
  7664  00743A  0E00               	movlw	0
  7665  00743C  6E60               	movwf	animation3@j+1,c
  7666  00743E  0E00               	movlw	0
  7667  007440  6E5F               	movwf	animation3@j,c
  7668  007442                     l3864:
  7669  007442  BE60               	btfsc	animation3@j+1,7,c
  7670  007444  D006               	goto	l329
  7671  007446  5060               	movf	animation3@j+1,w,c
  7672  007448  E144               	bnz	l3876
  7673  00744A  0E1A               	movlw	26
  7674  00744C  5C5F               	subwf	animation3@j,w,c
  7675  00744E  B0D8               	btfsc	status,0,c
  7676  007450  D040               	goto	u4710
  7677  007452                     l329:
  7678                           
  7679                           ;newmain.c: 757: if (circle[i][j] != 100)
  7680  007452  C05D  F043         	movff	animation3@i,___wmul@multiplier
  7681  007456  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  7682  00745A  0E00               	movlw	0
  7683  00745C  6E46               	movwf	___wmul@multiplicand+1,c
  7684  00745E  0E1A               	movlw	26
  7685  007460  6E45               	movwf	___wmul@multiplicand,c
  7686  007462  EC54  F023         	call	___wmul	;wreg free
  7687  007466  0EC1               	movlw	low _circle
  7688  007468  6E58               	movwf	??_animation3& (0+255),c
  7689  00746A  0E79               	movlw	high _circle
  7690  00746C  6E59               	movwf	(??_animation3+1)& (0+255),c
  7691  00746E  5043               	movf	?___wmul,w,c
  7692  007470  2658               	addwf	??_animation3,f,c
  7693  007472  5044               	movf	?___wmul+1,w,c
  7694  007474  2259               	addwfc	??_animation3+1,f,c
  7695  007476  505F               	movf	animation3@j,w,c
  7696  007478  2658               	addwf	??_animation3,f,c
  7697  00747A  5060               	movf	animation3@j+1,w,c
  7698  00747C  2259               	addwfc	??_animation3+1,f,c
  7699  00747E  C058  FFF6         	movff	??_animation3,tblptrl
  7700  007482  C059  FFF7         	movff	??_animation3+1,tblptrh
  7701  007486                     	if	0	;tblptru may be non-zero
  7702  007486                     	endif
  7703  007486                     	if	0	;tblptru may be non-zero
  7704  007486                     	endif
  7705  007486  0008               	tblrd		*
  7706  007488  50F5               	movf	tablat,w,c
  7707  00748A  0A64               	xorlw	100
  7708  00748C  B4D8               	btfsc	status,2,c
  7709  00748E  D01E               	goto	l331
  7710                           
  7711                           ;newmain.c: 758: set_led(circle[i][j]);
  7712  007490  C05D  F043         	movff	animation3@i,___wmul@multiplier
  7713  007494  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  7714  007498  0E00               	movlw	0
  7715  00749A  6E46               	movwf	___wmul@multiplicand+1,c
  7716  00749C  0E1A               	movlw	26
  7717  00749E  6E45               	movwf	___wmul@multiplicand,c
  7718  0074A0  EC54  F023         	call	___wmul	;wreg free
  7719  0074A4  0EC1               	movlw	low _circle
  7720  0074A6  6E58               	movwf	??_animation3& (0+255),c
  7721  0074A8  0E79               	movlw	high _circle
  7722  0074AA  6E59               	movwf	(??_animation3+1)& (0+255),c
  7723  0074AC  5043               	movf	?___wmul,w,c
  7724  0074AE  2658               	addwf	??_animation3,f,c
  7725  0074B0  5044               	movf	?___wmul+1,w,c
  7726  0074B2  2259               	addwfc	??_animation3+1,f,c
  7727  0074B4  505F               	movf	animation3@j,w,c
  7728  0074B6  2658               	addwf	??_animation3,f,c
  7729  0074B8  5060               	movf	animation3@j+1,w,c
  7730  0074BA  2259               	addwfc	??_animation3+1,f,c
  7731  0074BC  C058  FFF6         	movff	??_animation3,tblptrl
  7732  0074C0  C059  FFF7         	movff	??_animation3+1,tblptrh
  7733  0074C4                     	if	0	;tblptru may be non-zero
  7734  0074C4                     	endif
  7735  0074C4                     	if	0	;tblptru may be non-zero
  7736  0074C4                     	endif
  7737  0074C4  0008               	tblrd		*
  7738  0074C6  50F5               	movf	tablat,w,c
  7739  0074C8  ECDA  F024         	call	_set_led
  7740  0074CC                     l331:
  7741  0074CC  4A5F               	infsnz	animation3@j,f,c
  7742  0074CE  2A60               	incf	animation3@j+1,f,c
  7743  0074D0  D7B8               	goto	l3864
  7744  0074D2                     u4710:
  7745  0074D2                     l3876:
  7746                           
  7747                           ;newmain.c: 759: }
  7748                           ;newmain.c: 760: write_display();
  7749  0074D2  EC8C  F025         	call	_write_display	;wreg free
  7750                           
  7751                           ;newmain.c: 761: _delay((unsigned long)((30)*(4000000/4000.0)));
  7752  0074D6  0E27               	movlw	39
  7753  0074D8  6E58               	movwf	??_animation3& (0+255),c
  7754  0074DA  0EF5               	movlw	245
  7755  0074DC                     u6847:
  7756  0074DC  2EE8               	decfsz	wreg,f,c
  7757  0074DE  D7FE               	bra	u6847
  7758  0074E0  2E58               	decfsz	??_animation3& (0+255),f,c
  7759  0074E2  D7FC               	bra	u6847
  7760  0074E4  F000               	nop	
  7761                           
  7762                           ;newmain.c: 762: for (j = 0; j < 26; j++) {
  7763  0074E6  0E00               	movlw	0
  7764  0074E8  6E60               	movwf	animation3@j+1,c
  7765  0074EA  0E00               	movlw	0
  7766  0074EC  6E5F               	movwf	animation3@j,c
  7767  0074EE                     l3882:
  7768  0074EE  BE60               	btfsc	animation3@j+1,7,c
  7769  0074F0  D006               	goto	l332
  7770  0074F2  5060               	movf	animation3@j+1,w,c
  7771  0074F4  E144               	bnz	l3894
  7772  0074F6  0E1A               	movlw	26
  7773  0074F8  5C5F               	subwf	animation3@j,w,c
  7774  0074FA  B0D8               	btfsc	status,0,c
  7775  0074FC  D040               	goto	u4740
  7776  0074FE                     l332:
  7777                           
  7778                           ;newmain.c: 763: if (circle[i][j] != 100)
  7779  0074FE  C05D  F043         	movff	animation3@i,___wmul@multiplier
  7780  007502  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  7781  007506  0E00               	movlw	0
  7782  007508  6E46               	movwf	___wmul@multiplicand+1,c
  7783  00750A  0E1A               	movlw	26
  7784  00750C  6E45               	movwf	___wmul@multiplicand,c
  7785  00750E  EC54  F023         	call	___wmul	;wreg free
  7786  007512  0EC1               	movlw	low _circle
  7787  007514  6E58               	movwf	??_animation3& (0+255),c
  7788  007516  0E79               	movlw	high _circle
  7789  007518  6E59               	movwf	(??_animation3+1)& (0+255),c
  7790  00751A  5043               	movf	?___wmul,w,c
  7791  00751C  2658               	addwf	??_animation3,f,c
  7792  00751E  5044               	movf	?___wmul+1,w,c
  7793  007520  2259               	addwfc	??_animation3+1,f,c
  7794  007522  505F               	movf	animation3@j,w,c
  7795  007524  2658               	addwf	??_animation3,f,c
  7796  007526  5060               	movf	animation3@j+1,w,c
  7797  007528  2259               	addwfc	??_animation3+1,f,c
  7798  00752A  C058  FFF6         	movff	??_animation3,tblptrl
  7799  00752E  C059  FFF7         	movff	??_animation3+1,tblptrh
  7800  007532                     	if	0	;tblptru may be non-zero
  7801  007532                     	endif
  7802  007532                     	if	0	;tblptru may be non-zero
  7803  007532                     	endif
  7804  007532  0008               	tblrd		*
  7805  007534  50F5               	movf	tablat,w,c
  7806  007536  0A64               	xorlw	100
  7807  007538  B4D8               	btfsc	status,2,c
  7808  00753A  D01E               	goto	l334
  7809                           
  7810                           ;newmain.c: 764: clr_led(circle[i][j]);
  7811  00753C  C05D  F043         	movff	animation3@i,___wmul@multiplier
  7812  007540  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  7813  007544  0E00               	movlw	0
  7814  007546  6E46               	movwf	___wmul@multiplicand+1,c
  7815  007548  0E1A               	movlw	26
  7816  00754A  6E45               	movwf	___wmul@multiplicand,c
  7817  00754C  EC54  F023         	call	___wmul	;wreg free
  7818  007550  0EC1               	movlw	low _circle
  7819  007552  6E58               	movwf	??_animation3& (0+255),c
  7820  007554  0E79               	movlw	high _circle
  7821  007556  6E59               	movwf	(??_animation3+1)& (0+255),c
  7822  007558  5043               	movf	?___wmul,w,c
  7823  00755A  2658               	addwf	??_animation3,f,c
  7824  00755C  5044               	movf	?___wmul+1,w,c
  7825  00755E  2259               	addwfc	??_animation3+1,f,c
  7826  007560  505F               	movf	animation3@j,w,c
  7827  007562  2658               	addwf	??_animation3,f,c
  7828  007564  5060               	movf	animation3@j+1,w,c
  7829  007566  2259               	addwfc	??_animation3+1,f,c
  7830  007568  C058  FFF6         	movff	??_animation3,tblptrl
  7831  00756C  C059  FFF7         	movff	??_animation3+1,tblptrh
  7832  007570                     	if	0	;tblptru may be non-zero
  7833  007570                     	endif
  7834  007570                     	if	0	;tblptru may be non-zero
  7835  007570                     	endif
  7836  007570  0008               	tblrd		*
  7837  007572  50F5               	movf	tablat,w,c
  7838  007574  EC31  F025         	call	_clr_led
  7839  007578                     l334:
  7840  007578  4A5F               	infsnz	animation3@j,f,c
  7841  00757A  2A60               	incf	animation3@j+1,f,c
  7842  00757C  D7B8               	goto	l3882
  7843  00757E                     u4740:
  7844  00757E                     l3894:
  7845                           
  7846                           ;newmain.c: 765: }
  7847                           ;newmain.c: 766: write_display();
  7848  00757E  EC8C  F025         	call	_write_display	;wreg free
  7849  007582  065D               	decf	animation3@i,f,c
  7850  007584  A0D8               	btfss	status,0,c
  7851  007586  065E               	decf	animation3@i+1,f,c
  7852  007588  D756               	goto	l3858
  7853  00758A                     u4750:
  7854                           
  7855                           ;newmain.c: 767: }
  7856                           ;newmain.c: 769: for (i = 0; i < 3; i++) {
  7857  00758A  0E00               	movlw	0
  7858  00758C  6E5E               	movwf	animation3@i+1,c
  7859  00758E  0E00               	movlw	0
  7860  007590  6E5D               	movwf	animation3@i,c
  7861  007592  BE5E               	btfsc	animation3@i+1,7,c
  7862  007594  D008               	goto	l335
  7863  007596  505E               	movf	animation3@i+1,w,c
  7864  007598  E105               	bnz	u4760
  7865  00759A  0E03               	movlw	3
  7866  00759C  5C5D               	subwf	animation3@i,w,c
  7867  00759E  B0D8               	btfsc	status,0,c
  7868  0075A0  0012               	return	
  7869  0075A2  D001               	goto	l335
  7870  0075A4                     u4760:
  7871  0075A4  0012               	return	
  7872  0075A6                     l335:
  7873                           
  7874                           ;newmain.c: 770: for (j = 0; j < 26; j++) {
  7875  0075A6  0E00               	movlw	0
  7876  0075A8  6E60               	movwf	animation3@j+1,c
  7877  0075AA  0E00               	movlw	0
  7878  0075AC  6E5F               	movwf	animation3@j,c
  7879  0075AE                     l3908:
  7880  0075AE  BE60               	btfsc	animation3@j+1,7,c
  7881  0075B0  D006               	goto	l337
  7882  0075B2  5060               	movf	animation3@j+1,w,c
  7883  0075B4  E144               	bnz	l3920
  7884  0075B6  0E1A               	movlw	26
  7885  0075B8  5C5F               	subwf	animation3@j,w,c
  7886  0075BA  B0D8               	btfsc	status,0,c
  7887  0075BC  D040               	goto	u4790
  7888  0075BE                     l337:
  7889                           
  7890                           ;newmain.c: 771: if (circle[i][j] != 100)
  7891  0075BE  C05D  F043         	movff	animation3@i,___wmul@multiplier
  7892  0075C2  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  7893  0075C6  0E00               	movlw	0
  7894  0075C8  6E46               	movwf	___wmul@multiplicand+1,c
  7895  0075CA  0E1A               	movlw	26
  7896  0075CC  6E45               	movwf	___wmul@multiplicand,c
  7897  0075CE  EC54  F023         	call	___wmul	;wreg free
  7898  0075D2  0EC1               	movlw	low _circle
  7899  0075D4  6E58               	movwf	??_animation3& (0+255),c
  7900  0075D6  0E79               	movlw	high _circle
  7901  0075D8  6E59               	movwf	(??_animation3+1)& (0+255),c
  7902  0075DA  5043               	movf	?___wmul,w,c
  7903  0075DC  2658               	addwf	??_animation3,f,c
  7904  0075DE  5044               	movf	?___wmul+1,w,c
  7905  0075E0  2259               	addwfc	??_animation3+1,f,c
  7906  0075E2  505F               	movf	animation3@j,w,c
  7907  0075E4  2658               	addwf	??_animation3,f,c
  7908  0075E6  5060               	movf	animation3@j+1,w,c
  7909  0075E8  2259               	addwfc	??_animation3+1,f,c
  7910  0075EA  C058  FFF6         	movff	??_animation3,tblptrl
  7911  0075EE  C059  FFF7         	movff	??_animation3+1,tblptrh
  7912  0075F2                     	if	0	;tblptru may be non-zero
  7913  0075F2                     	endif
  7914  0075F2                     	if	0	;tblptru may be non-zero
  7915  0075F2                     	endif
  7916  0075F2  0008               	tblrd		*
  7917  0075F4  50F5               	movf	tablat,w,c
  7918  0075F6  0A64               	xorlw	100
  7919  0075F8  B4D8               	btfsc	status,2,c
  7920  0075FA  D01E               	goto	l339
  7921                           
  7922                           ;newmain.c: 772: set_led(circle[i][j]);
  7923  0075FC  C05D  F043         	movff	animation3@i,___wmul@multiplier
  7924  007600  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  7925  007604  0E00               	movlw	0
  7926  007606  6E46               	movwf	___wmul@multiplicand+1,c
  7927  007608  0E1A               	movlw	26
  7928  00760A  6E45               	movwf	___wmul@multiplicand,c
  7929  00760C  EC54  F023         	call	___wmul	;wreg free
  7930  007610  0EC1               	movlw	low _circle
  7931  007612  6E58               	movwf	??_animation3& (0+255),c
  7932  007614  0E79               	movlw	high _circle
  7933  007616  6E59               	movwf	(??_animation3+1)& (0+255),c
  7934  007618  5043               	movf	?___wmul,w,c
  7935  00761A  2658               	addwf	??_animation3,f,c
  7936  00761C  5044               	movf	?___wmul+1,w,c
  7937  00761E  2259               	addwfc	??_animation3+1,f,c
  7938  007620  505F               	movf	animation3@j,w,c
  7939  007622  2658               	addwf	??_animation3,f,c
  7940  007624  5060               	movf	animation3@j+1,w,c
  7941  007626  2259               	addwfc	??_animation3+1,f,c
  7942  007628  C058  FFF6         	movff	??_animation3,tblptrl
  7943  00762C  C059  FFF7         	movff	??_animation3+1,tblptrh
  7944  007630                     	if	0	;tblptru may be non-zero
  7945  007630                     	endif
  7946  007630                     	if	0	;tblptru may be non-zero
  7947  007630                     	endif
  7948  007630  0008               	tblrd		*
  7949  007632  50F5               	movf	tablat,w,c
  7950  007634  ECDA  F024         	call	_set_led
  7951  007638                     l339:
  7952  007638  4A5F               	infsnz	animation3@j,f,c
  7953  00763A  2A60               	incf	animation3@j+1,f,c
  7954  00763C  D7B8               	goto	l3908
  7955  00763E                     u4790:
  7956  00763E                     l3920:
  7957                           
  7958                           ;newmain.c: 773: }
  7959                           ;newmain.c: 774: write_display();
  7960  00763E  EC8C  F025         	call	_write_display	;wreg free
  7961                           
  7962                           ;newmain.c: 775: _delay((unsigned long)((40)*(4000000/4000.0)));
  7963  007642  0E34               	movlw	52
  7964  007644  6E58               	movwf	??_animation3& (0+255),c
  7965  007646  0EF2               	movlw	242
  7966  007648                     u6857:
  7967  007648  2EE8               	decfsz	wreg,f,c
  7968  00764A  D7FE               	bra	u6857
  7969  00764C  2E58               	decfsz	??_animation3& (0+255),f,c
  7970  00764E  D7FC               	bra	u6857
  7971                           
  7972                           ;newmain.c: 776: for (j = 0; j < 26; j++) {
  7973  007650  0E00               	movlw	0
  7974  007652  6E60               	movwf	animation3@j+1,c
  7975  007654  0E00               	movlw	0
  7976  007656  6E5F               	movwf	animation3@j,c
  7977  007658                     l3926:
  7978  007658  BE60               	btfsc	animation3@j+1,7,c
  7979  00765A  D006               	goto	l340
  7980  00765C  5060               	movf	animation3@j+1,w,c
  7981  00765E  E144               	bnz	l3938
  7982  007660  0E1A               	movlw	26
  7983  007662  5C5F               	subwf	animation3@j,w,c
  7984  007664  B0D8               	btfsc	status,0,c
  7985  007666  D040               	goto	u4820
  7986  007668                     l340:
  7987                           
  7988                           ;newmain.c: 777: if (circle[i][j] != 100)
  7989  007668  C05D  F043         	movff	animation3@i,___wmul@multiplier
  7990  00766C  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  7991  007670  0E00               	movlw	0
  7992  007672  6E46               	movwf	___wmul@multiplicand+1,c
  7993  007674  0E1A               	movlw	26
  7994  007676  6E45               	movwf	___wmul@multiplicand,c
  7995  007678  EC54  F023         	call	___wmul	;wreg free
  7996  00767C  0EC1               	movlw	low _circle
  7997  00767E  6E58               	movwf	??_animation3& (0+255),c
  7998  007680  0E79               	movlw	high _circle
  7999  007682  6E59               	movwf	(??_animation3+1)& (0+255),c
  8000  007684  5043               	movf	?___wmul,w,c
  8001  007686  2658               	addwf	??_animation3,f,c
  8002  007688  5044               	movf	?___wmul+1,w,c
  8003  00768A  2259               	addwfc	??_animation3+1,f,c
  8004  00768C  505F               	movf	animation3@j,w,c
  8005  00768E  2658               	addwf	??_animation3,f,c
  8006  007690  5060               	movf	animation3@j+1,w,c
  8007  007692  2259               	addwfc	??_animation3+1,f,c
  8008  007694  C058  FFF6         	movff	??_animation3,tblptrl
  8009  007698  C059  FFF7         	movff	??_animation3+1,tblptrh
  8010  00769C                     	if	0	;tblptru may be non-zero
  8011  00769C                     	endif
  8012  00769C                     	if	0	;tblptru may be non-zero
  8013  00769C                     	endif
  8014  00769C  0008               	tblrd		*
  8015  00769E  50F5               	movf	tablat,w,c
  8016  0076A0  0A64               	xorlw	100
  8017  0076A2  B4D8               	btfsc	status,2,c
  8018  0076A4  D01E               	goto	l342
  8019                           
  8020                           ;newmain.c: 778: clr_led(circle[i][j]);
  8021  0076A6  C05D  F043         	movff	animation3@i,___wmul@multiplier
  8022  0076AA  C05E  F044         	movff	animation3@i+1,___wmul@multiplier+1
  8023  0076AE  0E00               	movlw	0
  8024  0076B0  6E46               	movwf	___wmul@multiplicand+1,c
  8025  0076B2  0E1A               	movlw	26
  8026  0076B4  6E45               	movwf	___wmul@multiplicand,c
  8027  0076B6  EC54  F023         	call	___wmul	;wreg free
  8028  0076BA  0EC1               	movlw	low _circle
  8029  0076BC  6E58               	movwf	??_animation3& (0+255),c
  8030  0076BE  0E79               	movlw	high _circle
  8031  0076C0  6E59               	movwf	(??_animation3+1)& (0+255),c
  8032  0076C2  5043               	movf	?___wmul,w,c
  8033  0076C4  2658               	addwf	??_animation3,f,c
  8034  0076C6  5044               	movf	?___wmul+1,w,c
  8035  0076C8  2259               	addwfc	??_animation3+1,f,c
  8036  0076CA  505F               	movf	animation3@j,w,c
  8037  0076CC  2658               	addwf	??_animation3,f,c
  8038  0076CE  5060               	movf	animation3@j+1,w,c
  8039  0076D0  2259               	addwfc	??_animation3+1,f,c
  8040  0076D2  C058  FFF6         	movff	??_animation3,tblptrl
  8041  0076D6  C059  FFF7         	movff	??_animation3+1,tblptrh
  8042  0076DA                     	if	0	;tblptru may be non-zero
  8043  0076DA                     	endif
  8044  0076DA                     	if	0	;tblptru may be non-zero
  8045  0076DA                     	endif
  8046  0076DA  0008               	tblrd		*
  8047  0076DC  50F5               	movf	tablat,w,c
  8048  0076DE  EC31  F025         	call	_clr_led
  8049  0076E2                     l342:
  8050  0076E2  4A5F               	infsnz	animation3@j,f,c
  8051  0076E4  2A60               	incf	animation3@j+1,f,c
  8052  0076E6  D7B8               	goto	l3926
  8053  0076E8                     u4820:
  8054  0076E8                     l3938:
  8055                           
  8056                           ;newmain.c: 779: }
  8057                           ;newmain.c: 780: write_display();
  8058  0076E8  EC8C  F025         	call	_write_display	;wreg free
  8059  0076EC  4A5D               	infsnz	animation3@i,f,c
  8060  0076EE  2A5E               	incf	animation3@i+1,f,c
  8061  0076F0  BE5E               	btfsc	animation3@i+1,7,c
  8062  0076F2  D759               	goto	l335
  8063  0076F4  505E               	movf	animation3@i+1,w,c
  8064  0076F6  E101               	bnz	l343
  8065  0076F8  D750               	goto	L14
  8066  0076FA                     l343:
  8067  0076FA  0012               	return		;funcret
  8068  0076FC                     __end_of_animation3:
  8069                           	opt stack 0
  8070                           tblptru	equ	0xFF8
  8071                           tblptrh	equ	0xFF7
  8072                           tblptrl	equ	0xFF6
  8073                           tablat	equ	0xFF5
  8074                           prodh	equ	0xFF4
  8075                           prodl	equ	0xFF3
  8076                           postinc0	equ	0xFEE
  8077                           wreg	equ	0xFE8
  8078                           postinc1	equ	0xFE6
  8079                           fsr1h	equ	0xFE2
  8080                           fsr1l	equ	0xFE1
  8081                           indf2	equ	0xFDF
  8082                           postinc2	equ	0xFDE
  8083                           fsr2h	equ	0xFDA
  8084                           fsr2l	equ	0xFD9
  8085                           status	equ	0xFD8
  8086                           
  8087 ;; *************** function _animation2 *****************
  8088 ;; Defined at:
  8089 ;;		line 628 in file "newmain.c"
  8090 ;; Parameters:    Size  Location     Type
  8091 ;;  m               1    wreg     unsigned char 
  8092 ;;  n               1   21[COMRAM] unsigned char 
  8093 ;;  h               1   22[COMRAM] unsigned char 
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;  m               1   29[COMRAM] unsigned char 
  8096 ;;  j               2   36[COMRAM] int 
  8097 ;;  i               2   34[COMRAM] int 
  8098 ;;  x               2   32[COMRAM] int 
  8099 ;;  row             2   30[COMRAM] int 
  8100 ;;  col             2   27[COMRAM] int 
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  1    wreg      void 
  8103 ;; Registers used:
  8104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8105 ;; Tracked objects:
  8106 ;;		On entry : 0/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8110 ;;      Params:         2       0       0       0       0       0       0
  8111 ;;      Locals:        11       0       0       0       0       0       0
  8112 ;;      Temps:          4       0       0       0       0       0       0
  8113 ;;      Totals:        17       0       0       0       0       0       0
  8114 ;;Total ram usage:       17 bytes
  8115 ;; Hardware stack levels used:    1
  8116 ;; Hardware stack levels required when called:    4
  8117 ;; This function calls:
  8118 ;;		___wmul
  8119 ;;		_clr_led
  8120 ;;		_set_led
  8121 ;;		_write_display
  8122 ;; This function is called by:
  8123 ;;		_main
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           	psect	text13
  8128  00618E                     __ptext13:
  8129                           	opt stack 0
  8130  00618E                     _animation2:
  8131                           	opt stack 26
  8132                           
  8133                           ;incstack = 0
  8134                           ;animation2@m stored from wreg
  8135  00618E  6E60               	movwf	animation2@m,c
  8136                           
  8137                           ;newmain.c: 629: int i = 0, j = 0, x = 0;
  8138  006190  0E00               	movlw	0
  8139  006192  6E66               	movwf	animation2@i+1,c
  8140  006194  0E00               	movlw	0
  8141  006196  6E65               	movwf	animation2@i,c
  8142  006198  0E00               	movlw	0
  8143  00619A  6E68               	movwf	animation2@j+1,c
  8144  00619C  0E00               	movlw	0
  8145  00619E  6E67               	movwf	animation2@j,c
  8146  0061A0  0E00               	movlw	0
  8147  0061A2  6E64               	movwf	animation2@x+1,c
  8148  0061A4  0E00               	movlw	0
  8149  0061A6  6E63               	movwf	animation2@x,c
  8150                           
  8151                           ;newmain.c: 630: int row = 0, col = n % 4;
  8152  0061A8  0E00               	movlw	0
  8153  0061AA  6E62               	movwf	animation2@row+1,c
  8154  0061AC  0E00               	movlw	0
  8155  0061AE  6E61               	movwf	animation2@row,c
  8156  0061B0  C058  F05A         	movff	animation2@n,??_animation2
  8157  0061B4  0E03               	movlw	3
  8158  0061B6  165A               	andwf	??_animation2,f,c
  8159  0061B8  505A               	movf	??_animation2,w,c
  8160  0061BA  6E5E               	movwf	animation2@col,c
  8161  0061BC  6A5F               	clrf	animation2@col+1,c
  8162                           
  8163                           ;newmain.c: 631: for (i = 0; i < 8; i++) {
  8164  0061BE  0E00               	movlw	0
  8165  0061C0  6E66               	movwf	animation2@i+1,c
  8166  0061C2  0E00               	movlw	0
  8167  0061C4  6E65               	movwf	animation2@i,c
  8168  0061C6                     l3496:
  8169  0061C6  BE66               	btfsc	animation2@i+1,7,c
  8170  0061C8  D006               	goto	l249
  8171  0061CA  5066               	movf	animation2@i+1,w,c
  8172  0061CC  E150               	bnz	l3518
  8173  0061CE  0E08               	movlw	8
  8174  0061D0  5C65               	subwf	animation2@i,w,c
  8175  0061D2  B0D8               	btfsc	status,0,c
  8176  0061D4  D04C               	goto	u4030
  8177  0061D6                     l249:
  8178                           
  8179                           ;newmain.c: 632: for (j = 0; j < 8; j++) {
  8180  0061D6  0E00               	movlw	0
  8181  0061D8  6E68               	movwf	animation2@j+1,c
  8182  0061DA  0E00               	movlw	0
  8183  0061DC  6E67               	movwf	animation2@j,c
  8184  0061DE                     l3502:
  8185  0061DE  BE68               	btfsc	animation2@j+1,7,c
  8186  0061E0  D006               	goto	l251
  8187  0061E2  5068               	movf	animation2@j+1,w,c
  8188  0061E4  E141               	bnz	l3514
  8189  0061E6  0E08               	movlw	8
  8190  0061E8  5C67               	subwf	animation2@j,w,c
  8191  0061EA  B0D8               	btfsc	status,0,c
  8192  0061EC  D03D               	goto	u4020
  8193  0061EE                     l251:
  8194                           
  8195                           ;newmain.c: 633: if (h == Buttons[i][j]) {
  8196  0061EE  C065  F05A         	movff	animation2@i,??_animation2
  8197  0061F2  C066  F05B         	movff	animation2@i+1,??_animation2+1
  8198  0061F6  90D8               	bcf	status,0,c
  8199  0061F8  365A               	rlcf	??_animation2,f,c
  8200  0061FA  365B               	rlcf	??_animation2+1,f,c
  8201  0061FC  90D8               	bcf	status,0,c
  8202  0061FE  365A               	rlcf	??_animation2,f,c
  8203  006200  365B               	rlcf	??_animation2+1,f,c
  8204  006202  90D8               	bcf	status,0,c
  8205  006204  365A               	rlcf	??_animation2,f,c
  8206  006206  365B               	rlcf	??_animation2+1,f,c
  8207  006208  0EF9               	movlw	low _Buttons
  8208  00620A  6E5C               	movwf	(??_animation2+2)& (0+255),c
  8209  00620C  0E7B               	movlw	high _Buttons
  8210  00620E  6E5D               	movwf	(??_animation2+3)& (0+255),c
  8211  006210  505A               	movf	??_animation2,w,c
  8212  006212  265C               	addwf	??_animation2+2,f,c
  8213  006214  505B               	movf	??_animation2+1,w,c
  8214  006216  225D               	addwfc	??_animation2+3,f,c
  8215  006218  5067               	movf	animation2@j,w,c
  8216  00621A  265C               	addwf	??_animation2+2,f,c
  8217  00621C  5068               	movf	animation2@j+1,w,c
  8218  00621E  225D               	addwfc	??_animation2+3,f,c
  8219  006220  C05C  FFF6         	movff	??_animation2+2,tblptrl
  8220  006224  C05D  FFF7         	movff	??_animation2+3,tblptrh
  8221  006228                     	if	0	;tblptru may be non-zero
  8222  006228                     	endif
  8223  006228                     	if	0	;tblptru may be non-zero
  8224  006228                     	endif
  8225  006228  0008               	tblrd		*
  8226  00622A  50F5               	movf	tablat,w,c
  8227  00622C  1859               	xorwf	animation2@h,w,c
  8228  00622E  A4D8               	btfss	status,2,c
  8229  006230  D018               	goto	l253
  8230                           
  8231                           ;newmain.c: 634: row = Buttons[i][0];
  8232  006232  C065  F05A         	movff	animation2@i,??_animation2
  8233  006236  C066  F05B         	movff	animation2@i+1,??_animation2+1
  8234  00623A  90D8               	bcf	status,0,c
  8235  00623C  365A               	rlcf	??_animation2,f,c
  8236  00623E  365B               	rlcf	??_animation2+1,f,c
  8237  006240  90D8               	bcf	status,0,c
  8238  006242  365A               	rlcf	??_animation2,f,c
  8239  006244  365B               	rlcf	??_animation2+1,f,c
  8240  006246  90D8               	bcf	status,0,c
  8241  006248  365A               	rlcf	??_animation2,f,c
  8242  00624A  365B               	rlcf	??_animation2+1,f,c
  8243  00624C  0EF9               	movlw	low _Buttons
  8244  00624E  245A               	addwf	??_animation2,w,c
  8245  006250  6EF6               	movwf	tblptrl,c
  8246  006252  0E7B               	movlw	high _Buttons
  8247  006254  205B               	addwfc	??_animation2+1,w,c
  8248  006256  6EF7               	movwf	tblptrh,c
  8249  006258                     	if	0	;There are less than 3 active tblptr bytes
  8250  006258                     	endif
  8251  006258  0008               	tblrd		*
  8252  00625A  50F5               	movf	tablat,w,c
  8253  00625C  6E61               	movwf	animation2@row,c
  8254  00625E  6A62               	clrf	animation2@row+1,c
  8255                           
  8256                           ;newmain.c: 635: break;
  8257  006260  D003               	goto	u4020
  8258  006262                     l253:
  8259  006262  4A67               	infsnz	animation2@j,f,c
  8260  006264  2A68               	incf	animation2@j+1,f,c
  8261  006266  D7BB               	goto	l3502
  8262  006268                     u4020:
  8263  006268                     l3514:
  8264  006268  4A65               	infsnz	animation2@i,f,c
  8265  00626A  2A66               	incf	animation2@i+1,f,c
  8266  00626C  D7AC               	goto	l3496
  8267  00626E                     u4030:
  8268  00626E                     l3518:
  8269                           
  8270                           ;newmain.c: 636: }
  8271                           ;newmain.c: 637: }
  8272                           ;newmain.c: 638: }
  8273                           ;newmain.c: 640: if (m == 0) {
  8274  00626E  5060               	movf	animation2@m,w,c
  8275  006270  A4D8               	btfss	status,2,c
  8276  006272  D0C6               	goto	l254
  8277                           
  8278                           ;newmain.c: 641: for (i = col; i < 8; i++) {
  8279  006274  C05E  F065         	movff	animation2@col,animation2@i
  8280  006278  C05F  F066         	movff	animation2@col+1,animation2@i+1
  8281  00627C  BE66               	btfsc	animation2@i+1,7,c
  8282  00627E  D008               	goto	l255
  8283  006280  5066               	movf	animation2@i+1,w,c
  8284  006282  E105               	bnz	u4050
  8285  006284  0E08               	movlw	8
  8286  006286  5C65               	subwf	animation2@i,w,c
  8287  006288  B0D8               	btfsc	status,0,c
  8288  00628A  0012               	return	
  8289  00628C  D001               	goto	l255
  8290  00628E                     u4050:
  8291  00628E  0012               	return	
  8292  006290                     l255:
  8293                           
  8294                           ;newmain.c: 642: for (j = 0; j < 3; j++)
  8295  006290  0E00               	movlw	0
  8296  006292  6E68               	movwf	animation2@j+1,c
  8297  006294  0E00               	movlw	0
  8298  006296  6E67               	movwf	animation2@j,c
  8299  006298                     l3528:
  8300  006298  BE68               	btfsc	animation2@j+1,7,c
  8301  00629A  D006               	goto	l257
  8302  00629C  5068               	movf	animation2@j+1,w,c
  8303  00629E  E14A               	bnz	l3542
  8304  0062A0  0E03               	movlw	3
  8305  0062A2  5C67               	subwf	animation2@j,w,c
  8306  0062A4  B0D8               	btfsc	status,0,c
  8307  0062A6  D046               	goto	u4080
  8308  0062A8                     l257:
  8309                           
  8310                           ;newmain.c: 643: if (horizental_flash[i][j] != 100) {
  8311  0062A8  C065  F043         	movff	animation2@i,___wmul@multiplier
  8312  0062AC  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  8313  0062B0  0E00               	movlw	0
  8314  0062B2  6E46               	movwf	___wmul@multiplicand+1,c
  8315  0062B4  0E03               	movlw	3
  8316  0062B6  6E45               	movwf	___wmul@multiplicand,c
  8317  0062B8  EC54  F023         	call	___wmul	;wreg free
  8318  0062BC  0EB3               	movlw	low _horizental_flash
  8319  0062BE  6E5A               	movwf	??_animation2& (0+255),c
  8320  0062C0  0E7C               	movlw	high _horizental_flash
  8321  0062C2  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8322  0062C4  5043               	movf	?___wmul,w,c
  8323  0062C6  265A               	addwf	??_animation2,f,c
  8324  0062C8  5044               	movf	?___wmul+1,w,c
  8325  0062CA  225B               	addwfc	??_animation2+1,f,c
  8326  0062CC  5067               	movf	animation2@j,w,c
  8327  0062CE  265A               	addwf	??_animation2,f,c
  8328  0062D0  5068               	movf	animation2@j+1,w,c
  8329  0062D2  225B               	addwfc	??_animation2+1,f,c
  8330  0062D4  C05A  FFF6         	movff	??_animation2,tblptrl
  8331  0062D8  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8332  0062DC                     	if	0	;tblptru may be non-zero
  8333  0062DC                     	endif
  8334  0062DC                     	if	0	;tblptru may be non-zero
  8335  0062DC                     	endif
  8336  0062DC  0008               	tblrd		*
  8337  0062DE  50F5               	movf	tablat,w,c
  8338  0062E0  0A64               	xorlw	100
  8339  0062E2  B4D8               	btfsc	status,2,c
  8340  0062E4  D024               	goto	l259
  8341                           
  8342                           ;newmain.c: 644: x = horizental_flash[i][j] + row;
  8343  0062E6  C065  F043         	movff	animation2@i,___wmul@multiplier
  8344  0062EA  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  8345  0062EE  0E00               	movlw	0
  8346  0062F0  6E46               	movwf	___wmul@multiplicand+1,c
  8347  0062F2  0E03               	movlw	3
  8348  0062F4  6E45               	movwf	___wmul@multiplicand,c
  8349  0062F6  EC54  F023         	call	___wmul	;wreg free
  8350  0062FA  0EB3               	movlw	low _horizental_flash
  8351  0062FC  6E5A               	movwf	??_animation2& (0+255),c
  8352  0062FE  0E7C               	movlw	high _horizental_flash
  8353  006300  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8354  006302  5043               	movf	?___wmul,w,c
  8355  006304  265A               	addwf	??_animation2,f,c
  8356  006306  5044               	movf	?___wmul+1,w,c
  8357  006308  225B               	addwfc	??_animation2+1,f,c
  8358  00630A  5067               	movf	animation2@j,w,c
  8359  00630C  265A               	addwf	??_animation2,f,c
  8360  00630E  5068               	movf	animation2@j+1,w,c
  8361  006310  225B               	addwfc	??_animation2+1,f,c
  8362  006312  C05A  FFF6         	movff	??_animation2,tblptrl
  8363  006316  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8364  00631A                     	if	0	;tblptru may be non-zero
  8365  00631A                     	endif
  8366  00631A                     	if	0	;tblptru may be non-zero
  8367  00631A                     	endif
  8368  00631A  0008               	tblrd		*
  8369  00631C  50F5               	movf	tablat,w,c
  8370  00631E  2461               	addwf	animation2@row,w,c
  8371  006320  6E63               	movwf	animation2@x,c
  8372  006322  0E00               	movlw	0
  8373  006324  2062               	addwfc	animation2@row+1,w,c
  8374  006326  6E64               	movwf	animation2@x+1,c
  8375                           
  8376                           ;newmain.c: 645: set_led(x);
  8377  006328  5063               	movf	animation2@x,w,c
  8378  00632A  ECDA  F024         	call	_set_led
  8379  00632E                     l259:
  8380  00632E  4A67               	infsnz	animation2@j,f,c
  8381  006330  2A68               	incf	animation2@j+1,f,c
  8382  006332  D7B2               	goto	l3528
  8383  006334                     u4080:
  8384  006334                     l3542:
  8385                           
  8386                           ;newmain.c: 646: }
  8387                           ;newmain.c: 647: write_display();
  8388  006334  EC8C  F025         	call	_write_display	;wreg free
  8389                           
  8390                           ;newmain.c: 648: _delay((unsigned long)((30)*(4000000/4000.0)));
  8391  006338  0E27               	movlw	39
  8392  00633A  6E5A               	movwf	??_animation2& (0+255),c
  8393  00633C  0EF5               	movlw	245
  8394  00633E                     u6867:
  8395  00633E  2EE8               	decfsz	wreg,f,c
  8396  006340  D7FE               	bra	u6867
  8397  006342  2E5A               	decfsz	??_animation2& (0+255),f,c
  8398  006344  D7FC               	bra	u6867
  8399  006346  F000               	nop	
  8400                           
  8401                           ;newmain.c: 649: for (j = 0; j < 3; j++)
  8402  006348  0E00               	movlw	0
  8403  00634A  6E68               	movwf	animation2@j+1,c
  8404  00634C  0E00               	movlw	0
  8405  00634E  6E67               	movwf	animation2@j,c
  8406  006350                     l3548:
  8407  006350  BE68               	btfsc	animation2@j+1,7,c
  8408  006352  D006               	goto	l260
  8409  006354  5068               	movf	animation2@j+1,w,c
  8410  006356  E14A               	bnz	l3562
  8411  006358  0E03               	movlw	3
  8412  00635A  5C67               	subwf	animation2@j,w,c
  8413  00635C  B0D8               	btfsc	status,0,c
  8414  00635E  D046               	goto	u4110
  8415  006360                     l260:
  8416                           
  8417                           ;newmain.c: 650: if (horizental_flash[i][j] != 100) {
  8418  006360  C065  F043         	movff	animation2@i,___wmul@multiplier
  8419  006364  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  8420  006368  0E00               	movlw	0
  8421  00636A  6E46               	movwf	___wmul@multiplicand+1,c
  8422  00636C  0E03               	movlw	3
  8423  00636E  6E45               	movwf	___wmul@multiplicand,c
  8424  006370  EC54  F023         	call	___wmul	;wreg free
  8425  006374  0EB3               	movlw	low _horizental_flash
  8426  006376  6E5A               	movwf	??_animation2& (0+255),c
  8427  006378  0E7C               	movlw	high _horizental_flash
  8428  00637A  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8429  00637C  5043               	movf	?___wmul,w,c
  8430  00637E  265A               	addwf	??_animation2,f,c
  8431  006380  5044               	movf	?___wmul+1,w,c
  8432  006382  225B               	addwfc	??_animation2+1,f,c
  8433  006384  5067               	movf	animation2@j,w,c
  8434  006386  265A               	addwf	??_animation2,f,c
  8435  006388  5068               	movf	animation2@j+1,w,c
  8436  00638A  225B               	addwfc	??_animation2+1,f,c
  8437  00638C  C05A  FFF6         	movff	??_animation2,tblptrl
  8438  006390  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8439  006394                     	if	0	;tblptru may be non-zero
  8440  006394                     	endif
  8441  006394                     	if	0	;tblptru may be non-zero
  8442  006394                     	endif
  8443  006394  0008               	tblrd		*
  8444  006396  50F5               	movf	tablat,w,c
  8445  006398  0A64               	xorlw	100
  8446  00639A  B4D8               	btfsc	status,2,c
  8447  00639C  D024               	goto	l262
  8448                           
  8449                           ;newmain.c: 651: x = horizental_flash[i][j] + row;
  8450  00639E  C065  F043         	movff	animation2@i,___wmul@multiplier
  8451  0063A2  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  8452  0063A6  0E00               	movlw	0
  8453  0063A8  6E46               	movwf	___wmul@multiplicand+1,c
  8454  0063AA  0E03               	movlw	3
  8455  0063AC  6E45               	movwf	___wmul@multiplicand,c
  8456  0063AE  EC54  F023         	call	___wmul	;wreg free
  8457  0063B2  0EB3               	movlw	low _horizental_flash
  8458  0063B4  6E5A               	movwf	??_animation2& (0+255),c
  8459  0063B6  0E7C               	movlw	high _horizental_flash
  8460  0063B8  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8461  0063BA  5043               	movf	?___wmul,w,c
  8462  0063BC  265A               	addwf	??_animation2,f,c
  8463  0063BE  5044               	movf	?___wmul+1,w,c
  8464  0063C0  225B               	addwfc	??_animation2+1,f,c
  8465  0063C2  5067               	movf	animation2@j,w,c
  8466  0063C4  265A               	addwf	??_animation2,f,c
  8467  0063C6  5068               	movf	animation2@j+1,w,c
  8468  0063C8  225B               	addwfc	??_animation2+1,f,c
  8469  0063CA  C05A  FFF6         	movff	??_animation2,tblptrl
  8470  0063CE  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8471  0063D2                     	if	0	;tblptru may be non-zero
  8472  0063D2                     	endif
  8473  0063D2                     	if	0	;tblptru may be non-zero
  8474  0063D2                     	endif
  8475  0063D2  0008               	tblrd		*
  8476  0063D4  50F5               	movf	tablat,w,c
  8477  0063D6  2461               	addwf	animation2@row,w,c
  8478  0063D8  6E63               	movwf	animation2@x,c
  8479  0063DA  0E00               	movlw	0
  8480  0063DC  2062               	addwfc	animation2@row+1,w,c
  8481  0063DE  6E64               	movwf	animation2@x+1,c
  8482                           
  8483                           ;newmain.c: 652: clr_led(x);
  8484  0063E0  5063               	movf	animation2@x,w,c
  8485  0063E2  EC31  F025         	call	_clr_led
  8486  0063E6                     l262:
  8487  0063E6  4A67               	infsnz	animation2@j,f,c
  8488  0063E8  2A68               	incf	animation2@j+1,f,c
  8489  0063EA  D7B2               	goto	l3548
  8490  0063EC                     u4110:
  8491  0063EC                     l3562:
  8492                           
  8493                           ;newmain.c: 653: }
  8494                           ;newmain.c: 654: write_display();
  8495  0063EC  EC8C  F025         	call	_write_display	;wreg free
  8496  0063F0  4A65               	infsnz	animation2@i,f,c
  8497  0063F2  2A66               	incf	animation2@i+1,f,c
  8498  0063F4  BE66               	btfsc	animation2@i+1,7,c
  8499  0063F6  D74C               	goto	l255
  8500  0063F8  5066               	movf	animation2@i+1,w,c
  8501  0063FA  E101               	bnz	u4120
  8502  0063FC  D743               	goto	L15
  8503  0063FE                     u4120:
  8504                           
  8505                           ;newmain.c: 655: }
  8506                           ;newmain.c: 656: } else if (m == 1) {
  8507  0063FE  0012               	return	
  8508  006400                     l254:
  8509  006400  0460               	decf	animation2@m,w,c
  8510  006402  A4D8               	btfss	status,2,c
  8511  006404  D0BB               	goto	l264
  8512                           
  8513                           ;newmain.c: 657: for (i = col + 2; i >= 0; i--) {
  8514  006406  0E02               	movlw	2
  8515  006408  245E               	addwf	animation2@col,w,c
  8516  00640A  6E65               	movwf	animation2@i,c
  8517  00640C  0E00               	movlw	0
  8518  00640E  205F               	addwfc	animation2@col+1,w,c
  8519  006410  6E66               	movwf	animation2@i+1,c
  8520  006412  BE66               	btfsc	animation2@i+1,7,c
  8521  006414  0012               	return	
  8522                           
  8523                           ;newmain.c: 658: for (j = 0; j < 3; j++) {
  8524  006416  0E00               	movlw	0
  8525  006418  6E68               	movwf	animation2@j+1,c
  8526  00641A  0E00               	movlw	0
  8527  00641C  6E67               	movwf	animation2@j,c
  8528  00641E                     l3576:
  8529  00641E  BE68               	btfsc	animation2@j+1,7,c
  8530  006420  D006               	goto	l267
  8531  006422  5068               	movf	animation2@j+1,w,c
  8532  006424  E14A               	bnz	l3590
  8533  006426  0E03               	movlw	3
  8534  006428  5C67               	subwf	animation2@j,w,c
  8535  00642A  B0D8               	btfsc	status,0,c
  8536  00642C  D046               	goto	u4170
  8537  00642E                     l267:
  8538                           
  8539                           ;newmain.c: 659: if (horizental_flash[i][j] != 100) {
  8540  00642E  C065  F043         	movff	animation2@i,___wmul@multiplier
  8541  006432  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  8542  006436  0E00               	movlw	0
  8543  006438  6E46               	movwf	___wmul@multiplicand+1,c
  8544  00643A  0E03               	movlw	3
  8545  00643C  6E45               	movwf	___wmul@multiplicand,c
  8546  00643E  EC54  F023         	call	___wmul	;wreg free
  8547  006442  0EB3               	movlw	low _horizental_flash
  8548  006444  6E5A               	movwf	??_animation2& (0+255),c
  8549  006446  0E7C               	movlw	high _horizental_flash
  8550  006448  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8551  00644A  5043               	movf	?___wmul,w,c
  8552  00644C  265A               	addwf	??_animation2,f,c
  8553  00644E  5044               	movf	?___wmul+1,w,c
  8554  006450  225B               	addwfc	??_animation2+1,f,c
  8555  006452  5067               	movf	animation2@j,w,c
  8556  006454  265A               	addwf	??_animation2,f,c
  8557  006456  5068               	movf	animation2@j+1,w,c
  8558  006458  225B               	addwfc	??_animation2+1,f,c
  8559  00645A  C05A  FFF6         	movff	??_animation2,tblptrl
  8560  00645E  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8561  006462                     	if	0	;tblptru may be non-zero
  8562  006462                     	endif
  8563  006462                     	if	0	;tblptru may be non-zero
  8564  006462                     	endif
  8565  006462  0008               	tblrd		*
  8566  006464  50F5               	movf	tablat,w,c
  8567  006466  0A64               	xorlw	100
  8568  006468  B4D8               	btfsc	status,2,c
  8569  00646A  D024               	goto	l269
  8570                           
  8571                           ;newmain.c: 660: x = horizental_flash[i][j] + row;
  8572  00646C  C065  F043         	movff	animation2@i,___wmul@multiplier
  8573  006470  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  8574  006474  0E00               	movlw	0
  8575  006476  6E46               	movwf	___wmul@multiplicand+1,c
  8576  006478  0E03               	movlw	3
  8577  00647A  6E45               	movwf	___wmul@multiplicand,c
  8578  00647C  EC54  F023         	call	___wmul	;wreg free
  8579  006480  0EB3               	movlw	low _horizental_flash
  8580  006482  6E5A               	movwf	??_animation2& (0+255),c
  8581  006484  0E7C               	movlw	high _horizental_flash
  8582  006486  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8583  006488  5043               	movf	?___wmul,w,c
  8584  00648A  265A               	addwf	??_animation2,f,c
  8585  00648C  5044               	movf	?___wmul+1,w,c
  8586  00648E  225B               	addwfc	??_animation2+1,f,c
  8587  006490  5067               	movf	animation2@j,w,c
  8588  006492  265A               	addwf	??_animation2,f,c
  8589  006494  5068               	movf	animation2@j+1,w,c
  8590  006496  225B               	addwfc	??_animation2+1,f,c
  8591  006498  C05A  FFF6         	movff	??_animation2,tblptrl
  8592  00649C  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8593  0064A0                     	if	0	;tblptru may be non-zero
  8594  0064A0                     	endif
  8595  0064A0                     	if	0	;tblptru may be non-zero
  8596  0064A0                     	endif
  8597  0064A0  0008               	tblrd		*
  8598  0064A2  50F5               	movf	tablat,w,c
  8599  0064A4  2461               	addwf	animation2@row,w,c
  8600  0064A6  6E63               	movwf	animation2@x,c
  8601  0064A8  0E00               	movlw	0
  8602  0064AA  2062               	addwfc	animation2@row+1,w,c
  8603  0064AC  6E64               	movwf	animation2@x+1,c
  8604                           
  8605                           ;newmain.c: 661: set_led(x);
  8606  0064AE  5063               	movf	animation2@x,w,c
  8607  0064B0  ECDA  F024         	call	_set_led
  8608  0064B4                     l269:
  8609  0064B4  4A67               	infsnz	animation2@j,f,c
  8610  0064B6  2A68               	incf	animation2@j+1,f,c
  8611  0064B8  D7B2               	goto	l3576
  8612  0064BA                     u4170:
  8613  0064BA                     l3590:
  8614                           
  8615                           ;newmain.c: 662: }
  8616                           ;newmain.c: 663: }
  8617                           ;newmain.c: 664: write_display();
  8618  0064BA  EC8C  F025         	call	_write_display	;wreg free
  8619                           
  8620                           ;newmain.c: 665: _delay((unsigned long)((40)*(4000000/4000.0)));
  8621  0064BE  0E34               	movlw	52
  8622  0064C0  6E5A               	movwf	??_animation2& (0+255),c
  8623  0064C2  0EF2               	movlw	242
  8624  0064C4                     u6877:
  8625  0064C4  2EE8               	decfsz	wreg,f,c
  8626  0064C6  D7FE               	bra	u6877
  8627  0064C8  2E5A               	decfsz	??_animation2& (0+255),f,c
  8628  0064CA  D7FC               	bra	u6877
  8629                           
  8630                           ;newmain.c: 666: for (j = 0; j < 3; j++)
  8631  0064CC  0E00               	movlw	0
  8632  0064CE  6E68               	movwf	animation2@j+1,c
  8633  0064D0  0E00               	movlw	0
  8634  0064D2  6E67               	movwf	animation2@j,c
  8635  0064D4                     l3596:
  8636  0064D4  BE68               	btfsc	animation2@j+1,7,c
  8637  0064D6  D006               	goto	l270
  8638  0064D8  5068               	movf	animation2@j+1,w,c
  8639  0064DA  E14A               	bnz	l3610
  8640  0064DC  0E03               	movlw	3
  8641  0064DE  5C67               	subwf	animation2@j,w,c
  8642  0064E0  B0D8               	btfsc	status,0,c
  8643  0064E2  D046               	goto	u4200
  8644  0064E4                     l270:
  8645                           
  8646                           ;newmain.c: 667: if (horizental_flash[i][j] != 100) {
  8647  0064E4  C065  F043         	movff	animation2@i,___wmul@multiplier
  8648  0064E8  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  8649  0064EC  0E00               	movlw	0
  8650  0064EE  6E46               	movwf	___wmul@multiplicand+1,c
  8651  0064F0  0E03               	movlw	3
  8652  0064F2  6E45               	movwf	___wmul@multiplicand,c
  8653  0064F4  EC54  F023         	call	___wmul	;wreg free
  8654  0064F8  0EB3               	movlw	low _horizental_flash
  8655  0064FA  6E5A               	movwf	??_animation2& (0+255),c
  8656  0064FC  0E7C               	movlw	high _horizental_flash
  8657  0064FE  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8658  006500  5043               	movf	?___wmul,w,c
  8659  006502  265A               	addwf	??_animation2,f,c
  8660  006504  5044               	movf	?___wmul+1,w,c
  8661  006506  225B               	addwfc	??_animation2+1,f,c
  8662  006508  5067               	movf	animation2@j,w,c
  8663  00650A  265A               	addwf	??_animation2,f,c
  8664  00650C  5068               	movf	animation2@j+1,w,c
  8665  00650E  225B               	addwfc	??_animation2+1,f,c
  8666  006510  C05A  FFF6         	movff	??_animation2,tblptrl
  8667  006514  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8668  006518                     	if	0	;tblptru may be non-zero
  8669  006518                     	endif
  8670  006518                     	if	0	;tblptru may be non-zero
  8671  006518                     	endif
  8672  006518  0008               	tblrd		*
  8673  00651A  50F5               	movf	tablat,w,c
  8674  00651C  0A64               	xorlw	100
  8675  00651E  B4D8               	btfsc	status,2,c
  8676  006520  D024               	goto	l272
  8677                           
  8678                           ;newmain.c: 668: x = horizental_flash[i][j] + row;
  8679  006522  C065  F043         	movff	animation2@i,___wmul@multiplier
  8680  006526  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  8681  00652A  0E00               	movlw	0
  8682  00652C  6E46               	movwf	___wmul@multiplicand+1,c
  8683  00652E  0E03               	movlw	3
  8684  006530  6E45               	movwf	___wmul@multiplicand,c
  8685  006532  EC54  F023         	call	___wmul	;wreg free
  8686  006536  0EB3               	movlw	low _horizental_flash
  8687  006538  6E5A               	movwf	??_animation2& (0+255),c
  8688  00653A  0E7C               	movlw	high _horizental_flash
  8689  00653C  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8690  00653E  5043               	movf	?___wmul,w,c
  8691  006540  265A               	addwf	??_animation2,f,c
  8692  006542  5044               	movf	?___wmul+1,w,c
  8693  006544  225B               	addwfc	??_animation2+1,f,c
  8694  006546  5067               	movf	animation2@j,w,c
  8695  006548  265A               	addwf	??_animation2,f,c
  8696  00654A  5068               	movf	animation2@j+1,w,c
  8697  00654C  225B               	addwfc	??_animation2+1,f,c
  8698  00654E  C05A  FFF6         	movff	??_animation2,tblptrl
  8699  006552  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8700  006556                     	if	0	;tblptru may be non-zero
  8701  006556                     	endif
  8702  006556                     	if	0	;tblptru may be non-zero
  8703  006556                     	endif
  8704  006556  0008               	tblrd		*
  8705  006558  50F5               	movf	tablat,w,c
  8706  00655A  2461               	addwf	animation2@row,w,c
  8707  00655C  6E63               	movwf	animation2@x,c
  8708  00655E  0E00               	movlw	0
  8709  006560  2062               	addwfc	animation2@row+1,w,c
  8710  006562  6E64               	movwf	animation2@x+1,c
  8711                           
  8712                           ;newmain.c: 669: clr_led(x);
  8713  006564  5063               	movf	animation2@x,w,c
  8714  006566  EC31  F025         	call	_clr_led
  8715  00656A                     l272:
  8716  00656A  4A67               	infsnz	animation2@j,f,c
  8717  00656C  2A68               	incf	animation2@j+1,f,c
  8718  00656E  D7B2               	goto	l3596
  8719  006570                     u4200:
  8720  006570                     l3610:
  8721                           
  8722                           ;newmain.c: 670: }
  8723                           ;newmain.c: 671: write_display();
  8724  006570  EC8C  F025         	call	_write_display	;wreg free
  8725  006574  0665               	decf	animation2@i,f,c
  8726  006576  A0D8               	btfss	status,0,c
  8727  006578  0666               	decf	animation2@i+1,f,c
  8728  00657A  D74B               	goto	L16
  8729  00657C                     l264:
  8730  00657C  0E02               	movlw	2
  8731  00657E  1860               	xorwf	animation2@m,w,c
  8732  006580  A4D8               	btfss	status,2,c
  8733  006582  D0C5               	goto	l274
  8734                           
  8735                           ;newmain.c: 674: for (i = col; i < 7; i++) {
  8736  006584  C05E  F065         	movff	animation2@col,animation2@i
  8737  006588  C05F  F066         	movff	animation2@col+1,animation2@i+1
  8738  00658C  BE66               	btfsc	animation2@i+1,7,c
  8739  00658E  D008               	goto	l275
  8740  006590  5066               	movf	animation2@i+1,w,c
  8741  006592  E105               	bnz	u4230
  8742  006594  0E07               	movlw	7
  8743  006596  5C65               	subwf	animation2@i,w,c
  8744  006598  B0D8               	btfsc	status,0,c
  8745  00659A  0012               	return	
  8746  00659C  D001               	goto	l275
  8747  00659E                     u4230:
  8748  00659E  0012               	return	
  8749  0065A0                     l275:
  8750                           
  8751                           ;newmain.c: 675: for (j = 0; j < 3; j++)
  8752  0065A0  0E00               	movlw	0
  8753  0065A2  6E68               	movwf	animation2@j+1,c
  8754  0065A4  0E00               	movlw	0
  8755  0065A6  6E67               	movwf	animation2@j,c
  8756  0065A8                     l3626:
  8757  0065A8  BE68               	btfsc	animation2@j+1,7,c
  8758  0065AA  D006               	goto	l277
  8759  0065AC  5068               	movf	animation2@j+1,w,c
  8760  0065AE  E14A               	bnz	l3640
  8761  0065B0  0E03               	movlw	3
  8762  0065B2  5C67               	subwf	animation2@j,w,c
  8763  0065B4  B0D8               	btfsc	status,0,c
  8764  0065B6  D046               	goto	u4260
  8765  0065B8                     l277:
  8766                           
  8767                           ;newmain.c: 676: if (horizental_flash[i][j] != 100) {
  8768  0065B8  C065  F043         	movff	animation2@i,___wmul@multiplier
  8769  0065BC  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  8770  0065C0  0E00               	movlw	0
  8771  0065C2  6E46               	movwf	___wmul@multiplicand+1,c
  8772  0065C4  0E03               	movlw	3
  8773  0065C6  6E45               	movwf	___wmul@multiplicand,c
  8774  0065C8  EC54  F023         	call	___wmul	;wreg free
  8775  0065CC  0EB3               	movlw	low _horizental_flash
  8776  0065CE  6E5A               	movwf	??_animation2& (0+255),c
  8777  0065D0  0E7C               	movlw	high _horizental_flash
  8778  0065D2  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8779  0065D4  5043               	movf	?___wmul,w,c
  8780  0065D6  265A               	addwf	??_animation2,f,c
  8781  0065D8  5044               	movf	?___wmul+1,w,c
  8782  0065DA  225B               	addwfc	??_animation2+1,f,c
  8783  0065DC  5067               	movf	animation2@j,w,c
  8784  0065DE  265A               	addwf	??_animation2,f,c
  8785  0065E0  5068               	movf	animation2@j+1,w,c
  8786  0065E2  225B               	addwfc	??_animation2+1,f,c
  8787  0065E4  C05A  FFF6         	movff	??_animation2,tblptrl
  8788  0065E8  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8789  0065EC                     	if	0	;tblptru may be non-zero
  8790  0065EC                     	endif
  8791  0065EC                     	if	0	;tblptru may be non-zero
  8792  0065EC                     	endif
  8793  0065EC  0008               	tblrd		*
  8794  0065EE  50F5               	movf	tablat,w,c
  8795  0065F0  0A64               	xorlw	100
  8796  0065F2  B4D8               	btfsc	status,2,c
  8797  0065F4  D024               	goto	l279
  8798                           
  8799                           ;newmain.c: 677: x = horizental_flash[i][j] + row;
  8800  0065F6  C065  F043         	movff	animation2@i,___wmul@multiplier
  8801  0065FA  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  8802  0065FE  0E00               	movlw	0
  8803  006600  6E46               	movwf	___wmul@multiplicand+1,c
  8804  006602  0E03               	movlw	3
  8805  006604  6E45               	movwf	___wmul@multiplicand,c
  8806  006606  EC54  F023         	call	___wmul	;wreg free
  8807  00660A  0EB3               	movlw	low _horizental_flash
  8808  00660C  6E5A               	movwf	??_animation2& (0+255),c
  8809  00660E  0E7C               	movlw	high _horizental_flash
  8810  006610  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8811  006612  5043               	movf	?___wmul,w,c
  8812  006614  265A               	addwf	??_animation2,f,c
  8813  006616  5044               	movf	?___wmul+1,w,c
  8814  006618  225B               	addwfc	??_animation2+1,f,c
  8815  00661A  5067               	movf	animation2@j,w,c
  8816  00661C  265A               	addwf	??_animation2,f,c
  8817  00661E  5068               	movf	animation2@j+1,w,c
  8818  006620  225B               	addwfc	??_animation2+1,f,c
  8819  006622  C05A  FFF6         	movff	??_animation2,tblptrl
  8820  006626  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8821  00662A                     	if	0	;tblptru may be non-zero
  8822  00662A                     	endif
  8823  00662A                     	if	0	;tblptru may be non-zero
  8824  00662A                     	endif
  8825  00662A  0008               	tblrd		*
  8826  00662C  50F5               	movf	tablat,w,c
  8827  00662E  2461               	addwf	animation2@row,w,c
  8828  006630  6E63               	movwf	animation2@x,c
  8829  006632  0E00               	movlw	0
  8830  006634  2062               	addwfc	animation2@row+1,w,c
  8831  006636  6E64               	movwf	animation2@x+1,c
  8832                           
  8833                           ;newmain.c: 678: set_led(x);
  8834  006638  5063               	movf	animation2@x,w,c
  8835  00663A  ECDA  F024         	call	_set_led
  8836  00663E                     l279:
  8837  00663E  4A67               	infsnz	animation2@j,f,c
  8838  006640  2A68               	incf	animation2@j+1,f,c
  8839  006642  D7B2               	goto	l3626
  8840  006644                     u4260:
  8841  006644                     l3640:
  8842                           
  8843                           ;newmain.c: 679: }
  8844                           ;newmain.c: 680: write_display();
  8845  006644  EC8C  F025         	call	_write_display	;wreg free
  8846                           
  8847                           ;newmain.c: 681: _delay((unsigned long)((40)*(4000000/4000.0)));
  8848  006648  0E34               	movlw	52
  8849  00664A  6E5A               	movwf	??_animation2& (0+255),c
  8850  00664C  0EF2               	movlw	242
  8851  00664E                     u6887:
  8852  00664E  2EE8               	decfsz	wreg,f,c
  8853  006650  D7FE               	bra	u6887
  8854  006652  2E5A               	decfsz	??_animation2& (0+255),f,c
  8855  006654  D7FC               	bra	u6887
  8856                           
  8857                           ;newmain.c: 682: for (j = 0; j < 3; j++)
  8858  006656  0E00               	movlw	0
  8859  006658  6E68               	movwf	animation2@j+1,c
  8860  00665A  0E00               	movlw	0
  8861  00665C  6E67               	movwf	animation2@j,c
  8862  00665E                     l3646:
  8863  00665E  BE68               	btfsc	animation2@j+1,7,c
  8864  006660  D006               	goto	l280
  8865  006662  5068               	movf	animation2@j+1,w,c
  8866  006664  E14A               	bnz	l3660
  8867  006666  0E03               	movlw	3
  8868  006668  5C67               	subwf	animation2@j,w,c
  8869  00666A  B0D8               	btfsc	status,0,c
  8870  00666C  D046               	goto	u4290
  8871  00666E                     l280:
  8872                           
  8873                           ;newmain.c: 683: if (horizental_flash[i][j] != 100) {
  8874  00666E  C065  F043         	movff	animation2@i,___wmul@multiplier
  8875  006672  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  8876  006676  0E00               	movlw	0
  8877  006678  6E46               	movwf	___wmul@multiplicand+1,c
  8878  00667A  0E03               	movlw	3
  8879  00667C  6E45               	movwf	___wmul@multiplicand,c
  8880  00667E  EC54  F023         	call	___wmul	;wreg free
  8881  006682  0EB3               	movlw	low _horizental_flash
  8882  006684  6E5A               	movwf	??_animation2& (0+255),c
  8883  006686  0E7C               	movlw	high _horizental_flash
  8884  006688  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8885  00668A  5043               	movf	?___wmul,w,c
  8886  00668C  265A               	addwf	??_animation2,f,c
  8887  00668E  5044               	movf	?___wmul+1,w,c
  8888  006690  225B               	addwfc	??_animation2+1,f,c
  8889  006692  5067               	movf	animation2@j,w,c
  8890  006694  265A               	addwf	??_animation2,f,c
  8891  006696  5068               	movf	animation2@j+1,w,c
  8892  006698  225B               	addwfc	??_animation2+1,f,c
  8893  00669A  C05A  FFF6         	movff	??_animation2,tblptrl
  8894  00669E  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8895  0066A2                     	if	0	;tblptru may be non-zero
  8896  0066A2                     	endif
  8897  0066A2                     	if	0	;tblptru may be non-zero
  8898  0066A2                     	endif
  8899  0066A2  0008               	tblrd		*
  8900  0066A4  50F5               	movf	tablat,w,c
  8901  0066A6  0A64               	xorlw	100
  8902  0066A8  B4D8               	btfsc	status,2,c
  8903  0066AA  D024               	goto	l282
  8904                           
  8905                           ;newmain.c: 684: x = horizental_flash[i][j] + row;
  8906  0066AC  C065  F043         	movff	animation2@i,___wmul@multiplier
  8907  0066B0  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  8908  0066B4  0E00               	movlw	0
  8909  0066B6  6E46               	movwf	___wmul@multiplicand+1,c
  8910  0066B8  0E03               	movlw	3
  8911  0066BA  6E45               	movwf	___wmul@multiplicand,c
  8912  0066BC  EC54  F023         	call	___wmul	;wreg free
  8913  0066C0  0EB3               	movlw	low _horizental_flash
  8914  0066C2  6E5A               	movwf	??_animation2& (0+255),c
  8915  0066C4  0E7C               	movlw	high _horizental_flash
  8916  0066C6  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8917  0066C8  5043               	movf	?___wmul,w,c
  8918  0066CA  265A               	addwf	??_animation2,f,c
  8919  0066CC  5044               	movf	?___wmul+1,w,c
  8920  0066CE  225B               	addwfc	??_animation2+1,f,c
  8921  0066D0  5067               	movf	animation2@j,w,c
  8922  0066D2  265A               	addwf	??_animation2,f,c
  8923  0066D4  5068               	movf	animation2@j+1,w,c
  8924  0066D6  225B               	addwfc	??_animation2+1,f,c
  8925  0066D8  C05A  FFF6         	movff	??_animation2,tblptrl
  8926  0066DC  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8927  0066E0                     	if	0	;tblptru may be non-zero
  8928  0066E0                     	endif
  8929  0066E0                     	if	0	;tblptru may be non-zero
  8930  0066E0                     	endif
  8931  0066E0  0008               	tblrd		*
  8932  0066E2  50F5               	movf	tablat,w,c
  8933  0066E4  2461               	addwf	animation2@row,w,c
  8934  0066E6  6E63               	movwf	animation2@x,c
  8935  0066E8  0E00               	movlw	0
  8936  0066EA  2062               	addwfc	animation2@row+1,w,c
  8937  0066EC  6E64               	movwf	animation2@x+1,c
  8938                           
  8939                           ;newmain.c: 685: clr_led(x);
  8940  0066EE  5063               	movf	animation2@x,w,c
  8941  0066F0  EC31  F025         	call	_clr_led
  8942  0066F4                     l282:
  8943  0066F4  4A67               	infsnz	animation2@j,f,c
  8944  0066F6  2A68               	incf	animation2@j+1,f,c
  8945  0066F8  D7B2               	goto	l3646
  8946  0066FA                     u4290:
  8947  0066FA                     l3660:
  8948                           
  8949                           ;newmain.c: 686: }
  8950                           ;newmain.c: 687: write_display();
  8951  0066FA  EC8C  F025         	call	_write_display	;wreg free
  8952  0066FE  4A65               	infsnz	animation2@i,f,c
  8953  006700  2A66               	incf	animation2@i+1,f,c
  8954  006702  BE66               	btfsc	animation2@i+1,7,c
  8955  006704  D74D               	goto	l275
  8956  006706  5066               	movf	animation2@i+1,w,c
  8957  006708  E101               	bnz	u4300
  8958  00670A  D744               	goto	L17
  8959  00670C                     u4300:
  8960                           
  8961                           ;newmain.c: 688: }
  8962                           ;newmain.c: 689: } else if (m == 3) {
  8963  00670C  0012               	return	
  8964  00670E                     l274:
  8965  00670E  0E03               	movlw	3
  8966  006710  1860               	xorwf	animation2@m,w,c
  8967  006712  A4D8               	btfss	status,2,c
  8968  006714  0012               	return	
  8969                           
  8970                           ;newmain.c: 690: for (i = col + 2; i >= 0; i--) {
  8971  006716  0E02               	movlw	2
  8972  006718  245E               	addwf	animation2@col,w,c
  8973  00671A  6E65               	movwf	animation2@i,c
  8974  00671C  0E00               	movlw	0
  8975  00671E  205F               	addwfc	animation2@col+1,w,c
  8976  006720  6E66               	movwf	animation2@i+1,c
  8977  006722  BE66               	btfsc	animation2@i+1,7,c
  8978  006724  0012               	return	
  8979                           
  8980                           ;newmain.c: 691: for (j = 0; j < 3; j++)
  8981  006726  0E00               	movlw	0
  8982  006728  6E68               	movwf	animation2@j+1,c
  8983  00672A  0E00               	movlw	0
  8984  00672C  6E67               	movwf	animation2@j,c
  8985  00672E                     l3674:
  8986  00672E  BE68               	btfsc	animation2@j+1,7,c
  8987  006730  D006               	goto	l287
  8988  006732  5068               	movf	animation2@j+1,w,c
  8989  006734  E14A               	bnz	l3688
  8990  006736  0E03               	movlw	3
  8991  006738  5C67               	subwf	animation2@j,w,c
  8992  00673A  B0D8               	btfsc	status,0,c
  8993  00673C  D046               	goto	u4350
  8994  00673E                     l287:
  8995                           
  8996                           ;newmain.c: 692: if (horizental_flash[i][j] != 100) {
  8997  00673E  C065  F043         	movff	animation2@i,___wmul@multiplier
  8998  006742  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  8999  006746  0E00               	movlw	0
  9000  006748  6E46               	movwf	___wmul@multiplicand+1,c
  9001  00674A  0E03               	movlw	3
  9002  00674C  6E45               	movwf	___wmul@multiplicand,c
  9003  00674E  EC54  F023         	call	___wmul	;wreg free
  9004  006752  0EB3               	movlw	low _horizental_flash
  9005  006754  6E5A               	movwf	??_animation2& (0+255),c
  9006  006756  0E7C               	movlw	high _horizental_flash
  9007  006758  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9008  00675A  5043               	movf	?___wmul,w,c
  9009  00675C  265A               	addwf	??_animation2,f,c
  9010  00675E  5044               	movf	?___wmul+1,w,c
  9011  006760  225B               	addwfc	??_animation2+1,f,c
  9012  006762  5067               	movf	animation2@j,w,c
  9013  006764  265A               	addwf	??_animation2,f,c
  9014  006766  5068               	movf	animation2@j+1,w,c
  9015  006768  225B               	addwfc	??_animation2+1,f,c
  9016  00676A  C05A  FFF6         	movff	??_animation2,tblptrl
  9017  00676E  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9018  006772                     	if	0	;tblptru may be non-zero
  9019  006772                     	endif
  9020  006772                     	if	0	;tblptru may be non-zero
  9021  006772                     	endif
  9022  006772  0008               	tblrd		*
  9023  006774  50F5               	movf	tablat,w,c
  9024  006776  0A64               	xorlw	100
  9025  006778  B4D8               	btfsc	status,2,c
  9026  00677A  D024               	goto	l289
  9027                           
  9028                           ;newmain.c: 693: x = horizental_flash[i][j] + row;
  9029  00677C  C065  F043         	movff	animation2@i,___wmul@multiplier
  9030  006780  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9031  006784  0E00               	movlw	0
  9032  006786  6E46               	movwf	___wmul@multiplicand+1,c
  9033  006788  0E03               	movlw	3
  9034  00678A  6E45               	movwf	___wmul@multiplicand,c
  9035  00678C  EC54  F023         	call	___wmul	;wreg free
  9036  006790  0EB3               	movlw	low _horizental_flash
  9037  006792  6E5A               	movwf	??_animation2& (0+255),c
  9038  006794  0E7C               	movlw	high _horizental_flash
  9039  006796  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9040  006798  5043               	movf	?___wmul,w,c
  9041  00679A  265A               	addwf	??_animation2,f,c
  9042  00679C  5044               	movf	?___wmul+1,w,c
  9043  00679E  225B               	addwfc	??_animation2+1,f,c
  9044  0067A0  5067               	movf	animation2@j,w,c
  9045  0067A2  265A               	addwf	??_animation2,f,c
  9046  0067A4  5068               	movf	animation2@j+1,w,c
  9047  0067A6  225B               	addwfc	??_animation2+1,f,c
  9048  0067A8  C05A  FFF6         	movff	??_animation2,tblptrl
  9049  0067AC  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9050  0067B0                     	if	0	;tblptru may be non-zero
  9051  0067B0                     	endif
  9052  0067B0                     	if	0	;tblptru may be non-zero
  9053  0067B0                     	endif
  9054  0067B0  0008               	tblrd		*
  9055  0067B2  50F5               	movf	tablat,w,c
  9056  0067B4  2461               	addwf	animation2@row,w,c
  9057  0067B6  6E63               	movwf	animation2@x,c
  9058  0067B8  0E00               	movlw	0
  9059  0067BA  2062               	addwfc	animation2@row+1,w,c
  9060  0067BC  6E64               	movwf	animation2@x+1,c
  9061                           
  9062                           ;newmain.c: 694: set_led(x);
  9063  0067BE  5063               	movf	animation2@x,w,c
  9064  0067C0  ECDA  F024         	call	_set_led
  9065  0067C4                     l289:
  9066  0067C4  4A67               	infsnz	animation2@j,f,c
  9067  0067C6  2A68               	incf	animation2@j+1,f,c
  9068  0067C8  D7B2               	goto	l3674
  9069  0067CA                     u4350:
  9070  0067CA                     l3688:
  9071                           
  9072                           ;newmain.c: 695: }
  9073                           ;newmain.c: 696: write_display();
  9074  0067CA  EC8C  F025         	call	_write_display	;wreg free
  9075                           
  9076                           ;newmain.c: 697: _delay((unsigned long)((40)*(4000000/4000.0)));
  9077  0067CE  0E34               	movlw	52
  9078  0067D0  6E5A               	movwf	??_animation2& (0+255),c
  9079  0067D2  0EF2               	movlw	242
  9080  0067D4                     u6897:
  9081  0067D4  2EE8               	decfsz	wreg,f,c
  9082  0067D6  D7FE               	bra	u6897
  9083  0067D8  2E5A               	decfsz	??_animation2& (0+255),f,c
  9084  0067DA  D7FC               	bra	u6897
  9085                           
  9086                           ;newmain.c: 698: for (j = 0; j < 3; j++)
  9087  0067DC  0E00               	movlw	0
  9088  0067DE  6E68               	movwf	animation2@j+1,c
  9089  0067E0  0E00               	movlw	0
  9090  0067E2  6E67               	movwf	animation2@j,c
  9091  0067E4                     l3694:
  9092  0067E4  BE68               	btfsc	animation2@j+1,7,c
  9093  0067E6  D006               	goto	l290
  9094  0067E8  5068               	movf	animation2@j+1,w,c
  9095  0067EA  E14A               	bnz	l3708
  9096  0067EC  0E03               	movlw	3
  9097  0067EE  5C67               	subwf	animation2@j,w,c
  9098  0067F0  B0D8               	btfsc	status,0,c
  9099  0067F2  D046               	goto	u4380
  9100  0067F4                     l290:
  9101                           
  9102                           ;newmain.c: 699: if (horizental_flash[i][j] != 100) {
  9103  0067F4  C065  F043         	movff	animation2@i,___wmul@multiplier
  9104  0067F8  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9105  0067FC  0E00               	movlw	0
  9106  0067FE  6E46               	movwf	___wmul@multiplicand+1,c
  9107  006800  0E03               	movlw	3
  9108  006802  6E45               	movwf	___wmul@multiplicand,c
  9109  006804  EC54  F023         	call	___wmul	;wreg free
  9110  006808  0EB3               	movlw	low _horizental_flash
  9111  00680A  6E5A               	movwf	??_animation2& (0+255),c
  9112  00680C  0E7C               	movlw	high _horizental_flash
  9113  00680E  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9114  006810  5043               	movf	?___wmul,w,c
  9115  006812  265A               	addwf	??_animation2,f,c
  9116  006814  5044               	movf	?___wmul+1,w,c
  9117  006816  225B               	addwfc	??_animation2+1,f,c
  9118  006818  5067               	movf	animation2@j,w,c
  9119  00681A  265A               	addwf	??_animation2,f,c
  9120  00681C  5068               	movf	animation2@j+1,w,c
  9121  00681E  225B               	addwfc	??_animation2+1,f,c
  9122  006820  C05A  FFF6         	movff	??_animation2,tblptrl
  9123  006824  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9124  006828                     	if	0	;tblptru may be non-zero
  9125  006828                     	endif
  9126  006828                     	if	0	;tblptru may be non-zero
  9127  006828                     	endif
  9128  006828  0008               	tblrd		*
  9129  00682A  50F5               	movf	tablat,w,c
  9130  00682C  0A64               	xorlw	100
  9131  00682E  B4D8               	btfsc	status,2,c
  9132  006830  D024               	goto	l292
  9133                           
  9134                           ;newmain.c: 700: x = horizental_flash[i][j] + row;
  9135  006832  C065  F043         	movff	animation2@i,___wmul@multiplier
  9136  006836  C066  F044         	movff	animation2@i+1,___wmul@multiplier+1
  9137  00683A  0E00               	movlw	0
  9138  00683C  6E46               	movwf	___wmul@multiplicand+1,c
  9139  00683E  0E03               	movlw	3
  9140  006840  6E45               	movwf	___wmul@multiplicand,c
  9141  006842  EC54  F023         	call	___wmul	;wreg free
  9142  006846  0EB3               	movlw	low _horizental_flash
  9143  006848  6E5A               	movwf	??_animation2& (0+255),c
  9144  00684A  0E7C               	movlw	high _horizental_flash
  9145  00684C  6E5B               	movwf	(??_animation2+1)& (0+255),c
  9146  00684E  5043               	movf	?___wmul,w,c
  9147  006850  265A               	addwf	??_animation2,f,c
  9148  006852  5044               	movf	?___wmul+1,w,c
  9149  006854  225B               	addwfc	??_animation2+1,f,c
  9150  006856  5067               	movf	animation2@j,w,c
  9151  006858  265A               	addwf	??_animation2,f,c
  9152  00685A  5068               	movf	animation2@j+1,w,c
  9153  00685C  225B               	addwfc	??_animation2+1,f,c
  9154  00685E  C05A  FFF6         	movff	??_animation2,tblptrl
  9155  006862  C05B  FFF7         	movff	??_animation2+1,tblptrh
  9156  006866                     	if	0	;tblptru may be non-zero
  9157  006866                     	endif
  9158  006866                     	if	0	;tblptru may be non-zero
  9159  006866                     	endif
  9160  006866  0008               	tblrd		*
  9161  006868  50F5               	movf	tablat,w,c
  9162  00686A  2461               	addwf	animation2@row,w,c
  9163  00686C  6E63               	movwf	animation2@x,c
  9164  00686E  0E00               	movlw	0
  9165  006870  2062               	addwfc	animation2@row+1,w,c
  9166  006872  6E64               	movwf	animation2@x+1,c
  9167                           
  9168                           ;newmain.c: 701: clr_led(x);
  9169  006874  5063               	movf	animation2@x,w,c
  9170  006876  EC31  F025         	call	_clr_led
  9171  00687A                     l292:
  9172  00687A  4A67               	infsnz	animation2@j,f,c
  9173  00687C  2A68               	incf	animation2@j+1,f,c
  9174  00687E  D7B2               	goto	l3694
  9175  006880                     u4380:
  9176  006880                     l3708:
  9177                           
  9178                           ;newmain.c: 702: }
  9179                           ;newmain.c: 703: write_display();
  9180  006880  EC8C  F025         	call	_write_display	;wreg free
  9181  006884  0665               	decf	animation2@i,f,c
  9182  006886  A0D8               	btfss	status,0,c
  9183  006888  0666               	decf	animation2@i+1,f,c
  9184  00688A  D74B               	goto	L18
  9185  00688C                     __end_of_animation2:
  9186                           	opt stack 0
  9187                           tblptru	equ	0xFF8
  9188                           tblptrh	equ	0xFF7
  9189                           tblptrl	equ	0xFF6
  9190                           tablat	equ	0xFF5
  9191                           prodh	equ	0xFF4
  9192                           prodl	equ	0xFF3
  9193                           postinc0	equ	0xFEE
  9194                           wreg	equ	0xFE8
  9195                           postinc1	equ	0xFE6
  9196                           fsr1h	equ	0xFE2
  9197                           fsr1l	equ	0xFE1
  9198                           indf2	equ	0xFDF
  9199                           postinc2	equ	0xFDE
  9200                           fsr2h	equ	0xFDA
  9201                           fsr2l	equ	0xFD9
  9202                           status	equ	0xFD8
  9203                           
  9204 ;; *************** function _animation1 *****************
  9205 ;; Defined at:
  9206 ;;		line 607 in file "newmain.c"
  9207 ;; Parameters:    Size  Location     Type
  9208 ;;  m               1    wreg     unsigned char 
  9209 ;;  n               1   21[COMRAM] unsigned char 
  9210 ;; Auto vars:     Size  Location     Type
  9211 ;;  m               1   25[COMRAM] unsigned char 
  9212 ;;  j               1   28[COMRAM] unsigned char 
  9213 ;;  i               1   27[COMRAM] unsigned char 
  9214 ;;  x               1   26[COMRAM] unsigned char 
  9215 ;; Return value:  Size  Location     Type
  9216 ;;                  1    wreg      void 
  9217 ;; Registers used:
  9218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9224 ;;      Params:         1       0       0       0       0       0       0
  9225 ;;      Locals:         4       0       0       0       0       0       0
  9226 ;;      Temps:          3       0       0       0       0       0       0
  9227 ;;      Totals:         8       0       0       0       0       0       0
  9228 ;;Total ram usage:        8 bytes
  9229 ;; Hardware stack levels used:    1
  9230 ;; Hardware stack levels required when called:    4
  9231 ;; This function calls:
  9232 ;;		_clr_led
  9233 ;;		_set_led
  9234 ;;		_write_display
  9235 ;; This function is called by:
  9236 ;;		_main
  9237 ;; This function uses a non-reentrant model
  9238 ;;
  9239                           
  9240                           	psect	text14
  9241  004C4C                     __ptext14:
  9242                           	opt stack 0
  9243  004C4C                     _animation1:
  9244                           	opt stack 26
  9245                           
  9246                           ;incstack = 0
  9247                           ;animation1@m stored from wreg
  9248  004C4C  6E5C               	movwf	animation1@m,c
  9249                           
  9250                           ;newmain.c: 608: uint8_t i = 0, j = 0, x = 0;
  9251  004C4E  0E00               	movlw	0
  9252  004C50  6E5E               	movwf	animation1@i,c
  9253  004C52  0E00               	movlw	0
  9254  004C54  6E5F               	movwf	animation1@j,c
  9255  004C56  0E00               	movlw	0
  9256  004C58  6E5D               	movwf	animation1@x,c
  9257                           
  9258                           ;newmain.c: 609: for (i = 0; i < 4; i++) {
  9259  004C5A  0E00               	movlw	0
  9260  004C5C  6E5E               	movwf	animation1@i,c
  9261  004C5E                     l3444:
  9262  004C5E  0E03               	movlw	3
  9263  004C60  645E               	cpfsgt	animation1@i,c
  9264  004C62  D001               	goto	l238
  9265  004C64  0012               	return	
  9266  004C66                     l238:
  9267                           
  9268                           ;newmain.c: 610: for (j = 0; j < 4; j++) {
  9269  004C66  0E00               	movlw	0
  9270  004C68  6E5F               	movwf	animation1@j,c
  9271  004C6A                     l3450:
  9272  004C6A  0E03               	movlw	3
  9273  004C6C  645F               	cpfsgt	animation1@j,c
  9274  004C6E  D001               	goto	l240
  9275  004C70  D046               	goto	u3940
  9276  004C72                     l240:
  9277                           
  9278                           ;newmain.c: 611: if (arrow[n][i][j] != 100) {
  9279  004C72  5058               	movf	animation1@n,w,c
  9280  004C74  0D10               	mullw	16
  9281  004C76  0EFD               	movlw	low _arrow
  9282  004C78  6E59               	movwf	??_animation1& (0+255),c
  9283  004C7A  0E76               	movlw	high _arrow
  9284  004C7C  6E5A               	movwf	(??_animation1+1)& (0+255),c
  9285  004C7E  50F3               	movf	prodl,w,c
  9286  004C80  2659               	addwf	??_animation1,f,c
  9287  004C82  50F4               	movf	prodh,w,c
  9288  004C84  225A               	addwfc	??_animation1+1,f,c
  9289  004C86  505E               	movf	animation1@i,w,c
  9290  004C88  0D04               	mullw	4
  9291  004C8A  50F3               	movf	prodl,w,c
  9292  004C8C  2659               	addwf	??_animation1,f,c
  9293  004C8E  50F4               	movf	prodh,w,c
  9294  004C90  225A               	addwfc	??_animation1+1,f,c
  9295  004C92  505F               	movf	animation1@j,w,c
  9296  004C94  0D01               	mullw	1
  9297  004C96  50F3               	movf	prodl,w,c
  9298  004C98  2659               	addwf	??_animation1,f,c
  9299  004C9A  50F4               	movf	prodh,w,c
  9300  004C9C  225A               	addwfc	??_animation1+1,f,c
  9301  004C9E  C059  FFF6         	movff	??_animation1,tblptrl
  9302  004CA2  C05A  FFF7         	movff	??_animation1+1,tblptrh
  9303  004CA6                     	if	0	;tblptru may be non-zero
  9304  004CA6                     	endif
  9305  004CA6                     	if	0	;tblptru may be non-zero
  9306  004CA6                     	endif
  9307  004CA6  0008               	tblrd		*
  9308  004CA8  50F5               	movf	tablat,w,c
  9309  004CAA  0A64               	xorlw	100
  9310  004CAC  B4D8               	btfsc	status,2,c
  9311  004CAE  D025               	goto	l242
  9312                           
  9313                           ;newmain.c: 612: x = arrow[n][i][j] + 16 * m;
  9314  004CB0  5058               	movf	animation1@n,w,c
  9315  004CB2  0D10               	mullw	16
  9316  004CB4  0EFD               	movlw	low _arrow
  9317  004CB6  6E59               	movwf	??_animation1& (0+255),c
  9318  004CB8  0E76               	movlw	high _arrow
  9319  004CBA  6E5A               	movwf	(??_animation1+1)& (0+255),c
  9320  004CBC  50F3               	movf	prodl,w,c
  9321  004CBE  2659               	addwf	??_animation1,f,c
  9322  004CC0  50F4               	movf	prodh,w,c
  9323  004CC2  225A               	addwfc	??_animation1+1,f,c
  9324  004CC4  505E               	movf	animation1@i,w,c
  9325  004CC6  0D04               	mullw	4
  9326  004CC8  50F3               	movf	prodl,w,c
  9327  004CCA  2659               	addwf	??_animation1,f,c
  9328  004CCC  50F4               	movf	prodh,w,c
  9329  004CCE  225A               	addwfc	??_animation1+1,f,c
  9330  004CD0  505F               	movf	animation1@j,w,c
  9331  004CD2  0D01               	mullw	1
  9332  004CD4  50F3               	movf	prodl,w,c
  9333  004CD6  2659               	addwf	??_animation1,f,c
  9334  004CD8  50F4               	movf	prodh,w,c
  9335  004CDA  225A               	addwfc	??_animation1+1,f,c
  9336  004CDC  C059  FFF6         	movff	??_animation1,tblptrl
  9337  004CE0  C05A  FFF7         	movff	??_animation1+1,tblptrh
  9338  004CE4                     	if	0	;tblptru may be non-zero
  9339  004CE4                     	endif
  9340  004CE4                     	if	0	;tblptru may be non-zero
  9341  004CE4                     	endif
  9342  004CE4  0008               	tblrd		*
  9343  004CE6  CFF5 F05B          	movff	tablat,??_animation1+2
  9344  004CEA  505C               	movf	animation1@m,w,c
  9345  004CEC  0D10               	mullw	16
  9346  004CEE  50F3               	movf	prodl,w,c
  9347  004CF0  245B               	addwf	??_animation1+2,w,c
  9348  004CF2  6E5D               	movwf	animation1@x,c
  9349                           
  9350                           ;newmain.c: 613: set_led(x);
  9351  004CF4  505D               	movf	animation1@x,w,c
  9352  004CF6  ECDA  F024         	call	_set_led
  9353  004CFA                     l242:
  9354  004CFA  2A5F               	incf	animation1@j,f,c
  9355  004CFC  D7B6               	goto	l3450
  9356  004CFE                     u3940:
  9357                           
  9358                           ;newmain.c: 614: }
  9359                           ;newmain.c: 615: }
  9360                           ;newmain.c: 616: write_display();
  9361  004CFE  EC8C  F025         	call	_write_display	;wreg free
  9362                           
  9363                           ;newmain.c: 617: _delay((unsigned long)((50)*(4000000/4000.0)));
  9364  004D02  0E41               	movlw	65
  9365  004D04  6E59               	movwf	??_animation1& (0+255),c
  9366  004D06  0EEE               	movlw	238
  9367  004D08                     u6907:
  9368  004D08  2EE8               	decfsz	wreg,f,c
  9369  004D0A  D7FE               	bra	u6907
  9370  004D0C  2E59               	decfsz	??_animation1& (0+255),f,c
  9371  004D0E  D7FC               	bra	u6907
  9372  004D10  D000               	nop2	
  9373                           
  9374                           ;newmain.c: 618: for (j = 0; j < 4; j++) {
  9375  004D12  0E00               	movlw	0
  9376  004D14  6E5F               	movwf	animation1@j,c
  9377  004D16                     l3470:
  9378  004D16  0E03               	movlw	3
  9379  004D18  645F               	cpfsgt	animation1@j,c
  9380  004D1A  D001               	goto	l243
  9381  004D1C  D046               	goto	u3970
  9382  004D1E                     l243:
  9383                           
  9384                           ;newmain.c: 619: if (arrow[n][i][j] != 100) {
  9385  004D1E  5058               	movf	animation1@n,w,c
  9386  004D20  0D10               	mullw	16
  9387  004D22  0EFD               	movlw	low _arrow
  9388  004D24  6E59               	movwf	??_animation1& (0+255),c
  9389  004D26  0E76               	movlw	high _arrow
  9390  004D28  6E5A               	movwf	(??_animation1+1)& (0+255),c
  9391  004D2A  50F3               	movf	prodl,w,c
  9392  004D2C  2659               	addwf	??_animation1,f,c
  9393  004D2E  50F4               	movf	prodh,w,c
  9394  004D30  225A               	addwfc	??_animation1+1,f,c
  9395  004D32  505E               	movf	animation1@i,w,c
  9396  004D34  0D04               	mullw	4
  9397  004D36  50F3               	movf	prodl,w,c
  9398  004D38  2659               	addwf	??_animation1,f,c
  9399  004D3A  50F4               	movf	prodh,w,c
  9400  004D3C  225A               	addwfc	??_animation1+1,f,c
  9401  004D3E  505F               	movf	animation1@j,w,c
  9402  004D40  0D01               	mullw	1
  9403  004D42  50F3               	movf	prodl,w,c
  9404  004D44  2659               	addwf	??_animation1,f,c
  9405  004D46  50F4               	movf	prodh,w,c
  9406  004D48  225A               	addwfc	??_animation1+1,f,c
  9407  004D4A  C059  FFF6         	movff	??_animation1,tblptrl
  9408  004D4E  C05A  FFF7         	movff	??_animation1+1,tblptrh
  9409  004D52                     	if	0	;tblptru may be non-zero
  9410  004D52                     	endif
  9411  004D52                     	if	0	;tblptru may be non-zero
  9412  004D52                     	endif
  9413  004D52  0008               	tblrd		*
  9414  004D54  50F5               	movf	tablat,w,c
  9415  004D56  0A64               	xorlw	100
  9416  004D58  B4D8               	btfsc	status,2,c
  9417  004D5A  D025               	goto	l245
  9418                           
  9419                           ;newmain.c: 620: x = arrow[n][i][j] + 16 * m;
  9420  004D5C  5058               	movf	animation1@n,w,c
  9421  004D5E  0D10               	mullw	16
  9422  004D60  0EFD               	movlw	low _arrow
  9423  004D62  6E59               	movwf	??_animation1& (0+255),c
  9424  004D64  0E76               	movlw	high _arrow
  9425  004D66  6E5A               	movwf	(??_animation1+1)& (0+255),c
  9426  004D68  50F3               	movf	prodl,w,c
  9427  004D6A  2659               	addwf	??_animation1,f,c
  9428  004D6C  50F4               	movf	prodh,w,c
  9429  004D6E  225A               	addwfc	??_animation1+1,f,c
  9430  004D70  505E               	movf	animation1@i,w,c
  9431  004D72  0D04               	mullw	4
  9432  004D74  50F3               	movf	prodl,w,c
  9433  004D76  2659               	addwf	??_animation1,f,c
  9434  004D78  50F4               	movf	prodh,w,c
  9435  004D7A  225A               	addwfc	??_animation1+1,f,c
  9436  004D7C  505F               	movf	animation1@j,w,c
  9437  004D7E  0D01               	mullw	1
  9438  004D80  50F3               	movf	prodl,w,c
  9439  004D82  2659               	addwf	??_animation1,f,c
  9440  004D84  50F4               	movf	prodh,w,c
  9441  004D86  225A               	addwfc	??_animation1+1,f,c
  9442  004D88  C059  FFF6         	movff	??_animation1,tblptrl
  9443  004D8C  C05A  FFF7         	movff	??_animation1+1,tblptrh
  9444  004D90                     	if	0	;tblptru may be non-zero
  9445  004D90                     	endif
  9446  004D90                     	if	0	;tblptru may be non-zero
  9447  004D90                     	endif
  9448  004D90  0008               	tblrd		*
  9449  004D92  CFF5 F05B          	movff	tablat,??_animation1+2
  9450  004D96  505C               	movf	animation1@m,w,c
  9451  004D98  0D10               	mullw	16
  9452  004D9A  50F3               	movf	prodl,w,c
  9453  004D9C  245B               	addwf	??_animation1+2,w,c
  9454  004D9E  6E5D               	movwf	animation1@x,c
  9455                           
  9456                           ;newmain.c: 621: clr_led(x);
  9457  004DA0  505D               	movf	animation1@x,w,c
  9458  004DA2  EC31  F025         	call	_clr_led
  9459  004DA6                     l245:
  9460  004DA6  2A5F               	incf	animation1@j,f,c
  9461  004DA8  D7B6               	goto	l3470
  9462  004DAA                     u3970:
  9463                           
  9464                           ;newmain.c: 622: }
  9465                           ;newmain.c: 623: }
  9466                           ;newmain.c: 624: write_display();
  9467  004DAA  EC8C  F025         	call	_write_display	;wreg free
  9468  004DAE  2A5E               	incf	animation1@i,f,c
  9469  004DB0  D756               	goto	l3444
  9470  004DB2                     __end_of_animation1:
  9471                           	opt stack 0
  9472                           tblptru	equ	0xFF8
  9473                           tblptrh	equ	0xFF7
  9474                           tblptrl	equ	0xFF6
  9475                           tablat	equ	0xFF5
  9476                           prodh	equ	0xFF4
  9477                           prodl	equ	0xFF3
  9478                           postinc0	equ	0xFEE
  9479                           wreg	equ	0xFE8
  9480                           postinc1	equ	0xFE6
  9481                           fsr1h	equ	0xFE2
  9482                           fsr1l	equ	0xFE1
  9483                           indf2	equ	0xFDF
  9484                           postinc2	equ	0xFDE
  9485                           fsr2h	equ	0xFDA
  9486                           fsr2l	equ	0xFD9
  9487                           status	equ	0xFD8
  9488                           
  9489 ;; *************** function _animation0 *****************
  9490 ;; Defined at:
  9491 ;;		line 556 in file "newmain.c"
  9492 ;; Parameters:    Size  Location     Type
  9493 ;;  m               1    wreg     unsigned char 
  9494 ;;  n               1   21[COMRAM] unsigned char 
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;  m               1   27[COMRAM] unsigned char 
  9497 ;;  i               1   29[COMRAM] unsigned char 
  9498 ;;  j               1   28[COMRAM] unsigned char 
  9499 ;; Return value:  Size  Location     Type
  9500 ;;                  1    wreg      void 
  9501 ;; Registers used:
  9502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9503 ;; Tracked objects:
  9504 ;;		On entry : 0/0
  9505 ;;		On exit  : 0/0
  9506 ;;		Unchanged: 0/0
  9507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9508 ;;      Params:         1       0       0       0       0       0       0
  9509 ;;      Locals:         3       0       0       0       0       0       0
  9510 ;;      Temps:          5       0       0       0       0       0       0
  9511 ;;      Totals:         9       0       0       0       0       0       0
  9512 ;;Total ram usage:        9 bytes
  9513 ;; Hardware stack levels used:    1
  9514 ;; Hardware stack levels required when called:    4
  9515 ;; This function calls:
  9516 ;;		_clr_led
  9517 ;;		_set_led
  9518 ;;		_write_display
  9519 ;; This function is called by:
  9520 ;;		_main
  9521 ;; This function uses a non-reentrant model
  9522 ;;
  9523                           
  9524                           	psect	text15
  9525  00526A                     __ptext15:
  9526                           	opt stack 0
  9527  00526A                     _animation0:
  9528                           	opt stack 26
  9529                           
  9530                           ;incstack = 0
  9531                           ;animation0@m stored from wreg
  9532  00526A  6E5E               	movwf	animation0@m,c
  9533                           
  9534                           ;newmain.c: 557: uint8_t i = 0, j = 0;
  9535  00526C  0E00               	movlw	0
  9536  00526E  6E60               	movwf	animation0@i,c
  9537  005270  0E00               	movlw	0
  9538  005272  6E5F               	movwf	animation0@j,c
  9539                           
  9540                           ;newmain.c: 558: if (m == 1) {
  9541  005274  045E               	decf	animation0@m,w,c
  9542  005276  A4D8               	btfss	status,2,c
  9543  005278  D040               	goto	l206
  9544                           
  9545                           ;newmain.c: 559: for (i = n; i < 40 - n; i++) {
  9546  00527A  C058  F060         	movff	animation0@n,animation0@i
  9547  00527E  D024               	goto	l207
  9548  005280                     
  9549                           ;newmain.c: 560: set_led(show0_1[i]);
  9550  005280  5060               	movf	animation0@i,w,c
  9551  005282  0D01               	mullw	1
  9552  005284  0E8B               	movlw	low _show0_1
  9553  005286  24F3               	addwf	prodl,w,c
  9554  005288  6EF6               	movwf	tblptrl,c
  9555  00528A  0E7C               	movlw	high _show0_1
  9556  00528C  20F4               	addwfc	prodh,w,c
  9557  00528E  6EF7               	movwf	tblptrh,c
  9558  005290                     	if	0	;There are less than 3 active tblptr bytes
  9559  005290                     	endif
  9560  005290  0008               	tblrd		*
  9561  005292  50F5               	movf	tablat,w,c
  9562  005294  ECDA  F024         	call	_set_led
  9563                           
  9564                           ;newmain.c: 561: write_display();
  9565  005298  EC8C  F025         	call	_write_display	;wreg free
  9566                           
  9567                           ;newmain.c: 562: _delay((unsigned long)((40)*(4000000/4000.0)));
  9568  00529C  0E34               	movlw	52
  9569  00529E  6E59               	movwf	??_animation0& (0+255),c
  9570  0052A0  0EF2               	movlw	242
  9571  0052A2                     u6917:
  9572  0052A2  2EE8               	decfsz	wreg,f,c
  9573  0052A4  D7FE               	bra	u6917
  9574  0052A6  2E59               	decfsz	??_animation0& (0+255),f,c
  9575  0052A8  D7FC               	bra	u6917
  9576                           
  9577                           ;newmain.c: 563: clr_led(show0_1[i]);
  9578  0052AA  5060               	movf	animation0@i,w,c
  9579  0052AC  0D01               	mullw	1
  9580  0052AE  0E8B               	movlw	low _show0_1
  9581  0052B0  24F3               	addwf	prodl,w,c
  9582  0052B2  6EF6               	movwf	tblptrl,c
  9583  0052B4  0E7C               	movlw	high _show0_1
  9584  0052B6  20F4               	addwfc	prodh,w,c
  9585  0052B8  6EF7               	movwf	tblptrh,c
  9586  0052BA                     	if	0	;There are less than 3 active tblptr bytes
  9587  0052BA                     	endif
  9588  0052BA  0008               	tblrd		*
  9589  0052BC  50F5               	movf	tablat,w,c
  9590  0052BE  EC31  F025         	call	_clr_led
  9591                           
  9592                           ;newmain.c: 564: write_display();
  9593  0052C2  EC8C  F025         	call	_write_display	;wreg free
  9594  0052C6  2A60               	incf	animation0@i,f,c
  9595  0052C8                     l207:
  9596  0052C8  5058               	movf	animation0@n,w,c
  9597  0052CA  6E59               	movwf	??_animation0& (0+255),c
  9598  0052CC  6A5A               	clrf	(??_animation0+1)& (0+255),c
  9599  0052CE  1E59               	comf	??_animation0,f,c
  9600  0052D0  1E5A               	comf	??_animation0+1,f,c
  9601  0052D2  4A59               	infsnz	??_animation0,f,c
  9602  0052D4  2A5A               	incf	??_animation0+1,f,c
  9603  0052D6  0E28               	movlw	40
  9604  0052D8  2659               	addwf	??_animation0,f,c
  9605  0052DA  0E00               	movlw	0
  9606  0052DC  225A               	addwfc	??_animation0+1,f,c
  9607  0052DE  5060               	movf	animation0@i,w,c
  9608  0052E0  6E5B               	movwf	(??_animation0+2)& (0+255),c
  9609  0052E2  6A5C               	clrf	(??_animation0+3)& (0+255),c
  9610  0052E4  5059               	movf	??_animation0,w,c
  9611  0052E6  5C5B               	subwf	??_animation0+2,w,c
  9612  0052E8  505C               	movf	??_animation0+3,w,c
  9613  0052EA  0A80               	xorlw	128
  9614  0052EC  6E5D               	movwf	(??_animation0+4)& (0+255),c
  9615  0052EE  505A               	movf	??_animation0+1,w,c
  9616  0052F0  0A80               	xorlw	128
  9617  0052F2  585D               	subwfb	(??_animation0+4)& (0+255),w,c
  9618  0052F4  B0D8               	btfsc	status,0,c
  9619  0052F6  0012               	return	
  9620  0052F8  D7C3               	goto	l208
  9621  0052FA                     l206:
  9622  0052FA  0E02               	movlw	2
  9623  0052FC  185E               	xorwf	animation0@m,w,c
  9624  0052FE  A4D8               	btfss	status,2,c
  9625  005300  D02E               	goto	l211
  9626                           
  9627                           ;newmain.c: 567: for (i = 39 - n; i >= n; i--) {
  9628  005302  5058               	movf	animation0@n,w,c
  9629  005304  0800               	sublw	0
  9630  005306  0F27               	addlw	39
  9631  005308  6E60               	movwf	animation0@i,c
  9632  00530A  D024               	goto	l212
  9633  00530C                     
  9634                           ;newmain.c: 568: set_led(show0_1[i]);
  9635  00530C  5060               	movf	animation0@i,w,c
  9636  00530E  0D01               	mullw	1
  9637  005310  0E8B               	movlw	low _show0_1
  9638  005312  24F3               	addwf	prodl,w,c
  9639  005314  6EF6               	movwf	tblptrl,c
  9640  005316  0E7C               	movlw	high _show0_1
  9641  005318  20F4               	addwfc	prodh,w,c
  9642  00531A  6EF7               	movwf	tblptrh,c
  9643  00531C                     	if	0	;There are less than 3 active tblptr bytes
  9644  00531C                     	endif
  9645  00531C  0008               	tblrd		*
  9646  00531E  50F5               	movf	tablat,w,c
  9647  005320  ECDA  F024         	call	_set_led
  9648                           
  9649                           ;newmain.c: 569: write_display();
  9650  005324  EC8C  F025         	call	_write_display	;wreg free
  9651                           
  9652                           ;newmain.c: 570: _delay((unsigned long)((40)*(4000000/4000.0)));
  9653  005328  0E34               	movlw	52
  9654  00532A  6E59               	movwf	??_animation0& (0+255),c
  9655  00532C  0EF2               	movlw	242
  9656  00532E                     u6927:
  9657  00532E  2EE8               	decfsz	wreg,f,c
  9658  005330  D7FE               	bra	u6927
  9659  005332  2E59               	decfsz	??_animation0& (0+255),f,c
  9660  005334  D7FC               	bra	u6927
  9661                           
  9662                           ;newmain.c: 571: clr_led(show0_1[i]);
  9663  005336  5060               	movf	animation0@i,w,c
  9664  005338  0D01               	mullw	1
  9665  00533A  0E8B               	movlw	low _show0_1
  9666  00533C  24F3               	addwf	prodl,w,c
  9667  00533E  6EF6               	movwf	tblptrl,c
  9668  005340  0E7C               	movlw	high _show0_1
  9669  005342  20F4               	addwfc	prodh,w,c
  9670  005344  6EF7               	movwf	tblptrh,c
  9671  005346                     	if	0	;There are less than 3 active tblptr bytes
  9672  005346                     	endif
  9673  005346  0008               	tblrd		*
  9674  005348  50F5               	movf	tablat,w,c
  9675  00534A  EC31  F025         	call	_clr_led
  9676                           
  9677                           ;newmain.c: 572: write_display();
  9678  00534E  EC8C  F025         	call	_write_display	;wreg free
  9679  005352  0660               	decf	animation0@i,f,c
  9680  005354                     l212:
  9681  005354  5058               	movf	animation0@n,w,c
  9682  005356  5C60               	subwf	animation0@i,w,c
  9683  005358  A0D8               	btfss	status,0,c
  9684  00535A  0012               	return	
  9685  00535C  D7D7               	goto	l213
  9686  00535E                     l211:
  9687  00535E  0E03               	movlw	3
  9688  005360  185E               	xorwf	animation0@m,w,c
  9689  005362  A4D8               	btfss	status,2,c
  9690  005364  D040               	goto	l216
  9691                           
  9692                           ;newmain.c: 575: for (i = n; i < 40 - n; i++) {
  9693  005366  C058  F060         	movff	animation0@n,animation0@i
  9694  00536A  D024               	goto	l217
  9695  00536C                     
  9696                           ;newmain.c: 576: set_led(show0_2[i]);
  9697  00536C  5060               	movf	animation0@i,w,c
  9698  00536E  0D01               	mullw	1
  9699  005370  0E63               	movlw	low _show0_2
  9700  005372  24F3               	addwf	prodl,w,c
  9701  005374  6EF6               	movwf	tblptrl,c
  9702  005376  0E7C               	movlw	high _show0_2
  9703  005378  20F4               	addwfc	prodh,w,c
  9704  00537A  6EF7               	movwf	tblptrh,c
  9705  00537C                     	if	0	;There are less than 3 active tblptr bytes
  9706  00537C                     	endif
  9707  00537C  0008               	tblrd		*
  9708  00537E  50F5               	movf	tablat,w,c
  9709  005380  ECDA  F024         	call	_set_led
  9710                           
  9711                           ;newmain.c: 577: write_display();
  9712  005384  EC8C  F025         	call	_write_display	;wreg free
  9713                           
  9714                           ;newmain.c: 578: _delay((unsigned long)((40)*(4000000/4000.0)));
  9715  005388  0E34               	movlw	52
  9716  00538A  6E59               	movwf	??_animation0& (0+255),c
  9717  00538C  0EF2               	movlw	242
  9718  00538E                     u6937:
  9719  00538E  2EE8               	decfsz	wreg,f,c
  9720  005390  D7FE               	bra	u6937
  9721  005392  2E59               	decfsz	??_animation0& (0+255),f,c
  9722  005394  D7FC               	bra	u6937
  9723                           
  9724                           ;newmain.c: 579: clr_led(show0_2[i]);
  9725  005396  5060               	movf	animation0@i,w,c
  9726  005398  0D01               	mullw	1
  9727  00539A  0E63               	movlw	low _show0_2
  9728  00539C  24F3               	addwf	prodl,w,c
  9729  00539E  6EF6               	movwf	tblptrl,c
  9730  0053A0  0E7C               	movlw	high _show0_2
  9731  0053A2  20F4               	addwfc	prodh,w,c
  9732  0053A4  6EF7               	movwf	tblptrh,c
  9733  0053A6                     	if	0	;There are less than 3 active tblptr bytes
  9734  0053A6                     	endif
  9735  0053A6  0008               	tblrd		*
  9736  0053A8  50F5               	movf	tablat,w,c
  9737  0053AA  EC31  F025         	call	_clr_led
  9738                           
  9739                           ;newmain.c: 580: write_display();
  9740  0053AE  EC8C  F025         	call	_write_display	;wreg free
  9741  0053B2  2A60               	incf	animation0@i,f,c
  9742  0053B4                     l217:
  9743  0053B4  5058               	movf	animation0@n,w,c
  9744  0053B6  6E59               	movwf	??_animation0& (0+255),c
  9745  0053B8  6A5A               	clrf	(??_animation0+1)& (0+255),c
  9746  0053BA  1E59               	comf	??_animation0,f,c
  9747  0053BC  1E5A               	comf	??_animation0+1,f,c
  9748  0053BE  4A59               	infsnz	??_animation0,f,c
  9749  0053C0  2A5A               	incf	??_animation0+1,f,c
  9750  0053C2  0E28               	movlw	40
  9751  0053C4  2659               	addwf	??_animation0,f,c
  9752  0053C6  0E00               	movlw	0
  9753  0053C8  225A               	addwfc	??_animation0+1,f,c
  9754  0053CA  5060               	movf	animation0@i,w,c
  9755  0053CC  6E5B               	movwf	(??_animation0+2)& (0+255),c
  9756  0053CE  6A5C               	clrf	(??_animation0+3)& (0+255),c
  9757  0053D0  5059               	movf	??_animation0,w,c
  9758  0053D2  5C5B               	subwf	??_animation0+2,w,c
  9759  0053D4  505C               	movf	??_animation0+3,w,c
  9760  0053D6  0A80               	xorlw	128
  9761  0053D8  6E5D               	movwf	(??_animation0+4)& (0+255),c
  9762  0053DA  505A               	movf	??_animation0+1,w,c
  9763  0053DC  0A80               	xorlw	128
  9764  0053DE  585D               	subwfb	(??_animation0+4)& (0+255),w,c
  9765  0053E0  B0D8               	btfsc	status,0,c
  9766  0053E2  0012               	return	
  9767  0053E4  D7C3               	goto	l218
  9768  0053E6                     l216:
  9769  0053E6  0E04               	movlw	4
  9770  0053E8  185E               	xorwf	animation0@m,w,c
  9771  0053EA  A4D8               	btfss	status,2,c
  9772  0053EC  D02E               	goto	l221
  9773                           
  9774                           ;newmain.c: 583: for (i = 39 - n; i >= n; i--) {
  9775  0053EE  5058               	movf	animation0@n,w,c
  9776  0053F0  0800               	sublw	0
  9777  0053F2  0F27               	addlw	39
  9778  0053F4  6E60               	movwf	animation0@i,c
  9779  0053F6  D024               	goto	l222
  9780  0053F8                     
  9781                           ;newmain.c: 584: set_led(show0_2[i]);
  9782  0053F8  5060               	movf	animation0@i,w,c
  9783  0053FA  0D01               	mullw	1
  9784  0053FC  0E63               	movlw	low _show0_2
  9785  0053FE  24F3               	addwf	prodl,w,c
  9786  005400  6EF6               	movwf	tblptrl,c
  9787  005402  0E7C               	movlw	high _show0_2
  9788  005404  20F4               	addwfc	prodh,w,c
  9789  005406  6EF7               	movwf	tblptrh,c
  9790  005408                     	if	0	;There are less than 3 active tblptr bytes
  9791  005408                     	endif
  9792  005408  0008               	tblrd		*
  9793  00540A  50F5               	movf	tablat,w,c
  9794  00540C  ECDA  F024         	call	_set_led
  9795                           
  9796                           ;newmain.c: 585: write_display();
  9797  005410  EC8C  F025         	call	_write_display	;wreg free
  9798                           
  9799                           ;newmain.c: 586: _delay((unsigned long)((40)*(4000000/4000.0)));
  9800  005414  0E34               	movlw	52
  9801  005416  6E59               	movwf	??_animation0& (0+255),c
  9802  005418  0EF2               	movlw	242
  9803  00541A                     u6947:
  9804  00541A  2EE8               	decfsz	wreg,f,c
  9805  00541C  D7FE               	bra	u6947
  9806  00541E  2E59               	decfsz	??_animation0& (0+255),f,c
  9807  005420  D7FC               	bra	u6947
  9808                           
  9809                           ;newmain.c: 587: clr_led(show0_2[i]);
  9810  005422  5060               	movf	animation0@i,w,c
  9811  005424  0D01               	mullw	1
  9812  005426  0E63               	movlw	low _show0_2
  9813  005428  24F3               	addwf	prodl,w,c
  9814  00542A  6EF6               	movwf	tblptrl,c
  9815  00542C  0E7C               	movlw	high _show0_2
  9816  00542E  20F4               	addwfc	prodh,w,c
  9817  005430  6EF7               	movwf	tblptrh,c
  9818  005432                     	if	0	;There are less than 3 active tblptr bytes
  9819  005432                     	endif
  9820  005432  0008               	tblrd		*
  9821  005434  50F5               	movf	tablat,w,c
  9822  005436  EC31  F025         	call	_clr_led
  9823                           
  9824                           ;newmain.c: 588: write_display();
  9825  00543A  EC8C  F025         	call	_write_display	;wreg free
  9826  00543E  0660               	decf	animation0@i,f,c
  9827  005440                     l222:
  9828  005440  5058               	movf	animation0@n,w,c
  9829  005442  5C60               	subwf	animation0@i,w,c
  9830  005444  A0D8               	btfss	status,0,c
  9831  005446  0012               	return	
  9832  005448  D7D7               	goto	l223
  9833  00544A                     l221:
  9834  00544A  0E05               	movlw	5
  9835  00544C  185E               	xorwf	animation0@m,w,c
  9836  00544E  A4D8               	btfss	status,2,c
  9837  005450  0012               	return	
  9838                           
  9839                           ;newmain.c: 591: for (i = n; i < 6; i++) {
  9840  005452  C058  F060         	movff	animation0@n,animation0@i
  9841  005456                     l3400:
  9842  005456  0E05               	movlw	5
  9843  005458  6460               	cpfsgt	animation0@i,c
  9844  00545A  D001               	goto	l227
  9845  00545C  0012               	return	
  9846  00545E                     l227:
  9847                           
  9848                           ;newmain.c: 592: for (j = 0; j < 20; j++) {
  9849  00545E  0E00               	movlw	0
  9850  005460  6E5F               	movwf	animation0@j,c
  9851  005462                     l3406:
  9852  005462  0E13               	movlw	19
  9853  005464  645F               	cpfsgt	animation0@j,c
  9854  005466  D001               	goto	l229
  9855  005468  D033               	goto	u3860
  9856  00546A                     l229:
  9857                           
  9858                           ;newmain.c: 593: if (show0_3[i][j] != 100)
  9859  00546A  5060               	movf	animation0@i,w,c
  9860  00546C  0D14               	mullw	20
  9861  00546E  0ED5               	movlw	low _show0_3
  9862  005470  6E59               	movwf	??_animation0& (0+255),c
  9863  005472  0E78               	movlw	high _show0_3
  9864  005474  6E5A               	movwf	(??_animation0+1)& (0+255),c
  9865  005476  50F3               	movf	prodl,w,c
  9866  005478  2659               	addwf	??_animation0,f,c
  9867  00547A  50F4               	movf	prodh,w,c
  9868  00547C  225A               	addwfc	??_animation0+1,f,c
  9869  00547E  505F               	movf	animation0@j,w,c
  9870  005480  0D01               	mullw	1
  9871  005482  50F3               	movf	prodl,w,c
  9872  005484  2659               	addwf	??_animation0,f,c
  9873  005486  50F4               	movf	prodh,w,c
  9874  005488  225A               	addwfc	??_animation0+1,f,c
  9875  00548A  C059  FFF6         	movff	??_animation0,tblptrl
  9876  00548E  C05A  FFF7         	movff	??_animation0+1,tblptrh
  9877  005492                     	if	0	;tblptru may be non-zero
  9878  005492                     	endif
  9879  005492                     	if	0	;tblptru may be non-zero
  9880  005492                     	endif
  9881  005492  0008               	tblrd		*
  9882  005494  50F5               	movf	tablat,w,c
  9883  005496  0A64               	xorlw	100
  9884  005498  B4D8               	btfsc	status,2,c
  9885  00549A  D018               	goto	l231
  9886                           
  9887                           ;newmain.c: 594: set_led(show0_3[i][j]);
  9888  00549C  5060               	movf	animation0@i,w,c
  9889  00549E  0D14               	mullw	20
  9890  0054A0  0ED5               	movlw	low _show0_3
  9891  0054A2  6E59               	movwf	??_animation0& (0+255),c
  9892  0054A4  0E78               	movlw	high _show0_3
  9893  0054A6  6E5A               	movwf	(??_animation0+1)& (0+255),c
  9894  0054A8  50F3               	movf	prodl,w,c
  9895  0054AA  2659               	addwf	??_animation0,f,c
  9896  0054AC  50F4               	movf	prodh,w,c
  9897  0054AE  225A               	addwfc	??_animation0+1,f,c
  9898  0054B0  505F               	movf	animation0@j,w,c
  9899  0054B2  0D01               	mullw	1
  9900  0054B4  50F3               	movf	prodl,w,c
  9901  0054B6  2659               	addwf	??_animation0,f,c
  9902  0054B8  50F4               	movf	prodh,w,c
  9903  0054BA  225A               	addwfc	??_animation0+1,f,c
  9904  0054BC  C059  FFF6         	movff	??_animation0,tblptrl
  9905  0054C0  C05A  FFF7         	movff	??_animation0+1,tblptrh
  9906  0054C4                     	if	0	;tblptru may be non-zero
  9907  0054C4                     	endif
  9908  0054C4                     	if	0	;tblptru may be non-zero
  9909  0054C4                     	endif
  9910  0054C4  0008               	tblrd		*
  9911  0054C6  50F5               	movf	tablat,w,c
  9912  0054C8  ECDA  F024         	call	_set_led
  9913  0054CC                     l231:
  9914  0054CC  2A5F               	incf	animation0@j,f,c
  9915  0054CE  D7C9               	goto	l3406
  9916  0054D0                     u3860:
  9917                           
  9918                           ;newmain.c: 595: }
  9919                           ;newmain.c: 596: write_display();
  9920  0054D0  EC8C  F025         	call	_write_display	;wreg free
  9921                           
  9922                           ;newmain.c: 597: _delay((unsigned long)((50)*(4000000/4000.0)));
  9923  0054D4  0E41               	movlw	65
  9924  0054D6  6E59               	movwf	??_animation0& (0+255),c
  9925  0054D8  0EEE               	movlw	238
  9926  0054DA                     u6957:
  9927  0054DA  2EE8               	decfsz	wreg,f,c
  9928  0054DC  D7FE               	bra	u6957
  9929  0054DE  2E59               	decfsz	??_animation0& (0+255),f,c
  9930  0054E0  D7FC               	bra	u6957
  9931  0054E2  D000               	nop2	
  9932                           
  9933                           ;newmain.c: 598: for (j = 0; j < 20; j++) {
  9934  0054E4  0E00               	movlw	0
  9935  0054E6  6E5F               	movwf	animation0@j,c
  9936  0054E8                     l3424:
  9937  0054E8  0E13               	movlw	19
  9938  0054EA  645F               	cpfsgt	animation0@j,c
  9939  0054EC  D001               	goto	l232
  9940  0054EE  D033               	goto	u3890
  9941  0054F0                     l232:
  9942                           
  9943                           ;newmain.c: 599: if (show0_3[i][j] != 100)
  9944  0054F0  5060               	movf	animation0@i,w,c
  9945  0054F2  0D14               	mullw	20
  9946  0054F4  0ED5               	movlw	low _show0_3
  9947  0054F6  6E59               	movwf	??_animation0& (0+255),c
  9948  0054F8  0E78               	movlw	high _show0_3
  9949  0054FA  6E5A               	movwf	(??_animation0+1)& (0+255),c
  9950  0054FC  50F3               	movf	prodl,w,c
  9951  0054FE  2659               	addwf	??_animation0,f,c
  9952  005500  50F4               	movf	prodh,w,c
  9953  005502  225A               	addwfc	??_animation0+1,f,c
  9954  005504  505F               	movf	animation0@j,w,c
  9955  005506  0D01               	mullw	1
  9956  005508  50F3               	movf	prodl,w,c
  9957  00550A  2659               	addwf	??_animation0,f,c
  9958  00550C  50F4               	movf	prodh,w,c
  9959  00550E  225A               	addwfc	??_animation0+1,f,c
  9960  005510  C059  FFF6         	movff	??_animation0,tblptrl
  9961  005514  C05A  FFF7         	movff	??_animation0+1,tblptrh
  9962  005518                     	if	0	;tblptru may be non-zero
  9963  005518                     	endif
  9964  005518                     	if	0	;tblptru may be non-zero
  9965  005518                     	endif
  9966  005518  0008               	tblrd		*
  9967  00551A  50F5               	movf	tablat,w,c
  9968  00551C  0A64               	xorlw	100
  9969  00551E  B4D8               	btfsc	status,2,c
  9970  005520  D018               	goto	l234
  9971                           
  9972                           ;newmain.c: 600: clr_led(show0_3[i][j]);
  9973  005522  5060               	movf	animation0@i,w,c
  9974  005524  0D14               	mullw	20
  9975  005526  0ED5               	movlw	low _show0_3
  9976  005528  6E59               	movwf	??_animation0& (0+255),c
  9977  00552A  0E78               	movlw	high _show0_3
  9978  00552C  6E5A               	movwf	(??_animation0+1)& (0+255),c
  9979  00552E  50F3               	movf	prodl,w,c
  9980  005530  2659               	addwf	??_animation0,f,c
  9981  005532  50F4               	movf	prodh,w,c
  9982  005534  225A               	addwfc	??_animation0+1,f,c
  9983  005536  505F               	movf	animation0@j,w,c
  9984  005538  0D01               	mullw	1
  9985  00553A  50F3               	movf	prodl,w,c
  9986  00553C  2659               	addwf	??_animation0,f,c
  9987  00553E  50F4               	movf	prodh,w,c
  9988  005540  225A               	addwfc	??_animation0+1,f,c
  9989  005542  C059  FFF6         	movff	??_animation0,tblptrl
  9990  005546  C05A  FFF7         	movff	??_animation0+1,tblptrh
  9991  00554A                     	if	0	;tblptru may be non-zero
  9992  00554A                     	endif
  9993  00554A                     	if	0	;tblptru may be non-zero
  9994  00554A                     	endif
  9995  00554A  0008               	tblrd		*
  9996  00554C  50F5               	movf	tablat,w,c
  9997  00554E  EC31  F025         	call	_clr_led
  9998  005552                     l234:
  9999  005552  2A5F               	incf	animation0@j,f,c
 10000  005554  D7C9               	goto	l3424
 10001  005556                     u3890:
 10002                           
 10003                           ;newmain.c: 601: }
 10004                           ;newmain.c: 602: write_display();
 10005  005556  EC8C  F025         	call	_write_display	;wreg free
 10006  00555A  2A60               	incf	animation0@i,f,c
 10007  00555C  D77C               	goto	l3400
 10008  00555E                     __end_of_animation0:
 10009                           	opt stack 0
 10010                           tblptru	equ	0xFF8
 10011                           tblptrh	equ	0xFF7
 10012                           tblptrl	equ	0xFF6
 10013                           tablat	equ	0xFF5
 10014                           prodh	equ	0xFF4
 10015                           prodl	equ	0xFF3
 10016                           postinc0	equ	0xFEE
 10017                           wreg	equ	0xFE8
 10018                           postinc1	equ	0xFE6
 10019                           fsr1h	equ	0xFE2
 10020                           fsr1l	equ	0xFE1
 10021                           indf2	equ	0xFDF
 10022                           postinc2	equ	0xFDE
 10023                           fsr2h	equ	0xFDA
 10024                           fsr2l	equ	0xFD9
 10025                           status	equ	0xFD8
 10026                           
 10027 ;; *************** function _write_display *****************
 10028 ;; Defined at:
 10029 ;;		line 1006 in file "newmain.c"
 10030 ;; Parameters:    Size  Location     Type
 10031 ;;		None
 10032 ;; Auto vars:     Size  Location     Type
 10033 ;;  i               2   14[COMRAM] int 
 10034 ;;  j               2   12[COMRAM] int 
 10035 ;; Return value:  Size  Location     Type
 10036 ;;                  1    wreg      void 
 10037 ;; Registers used:
 10038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10039 ;; Tracked objects:
 10040 ;;		On entry : 0/0
 10041 ;;		On exit  : 0/0
 10042 ;;		Unchanged: 0/0
 10043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10044 ;;      Params:         0       0       0       0       0       0       0
 10045 ;;      Locals:         4       0       0       0       0       0       0
 10046 ;;      Temps:          6       0       0       0       0       0       0
 10047 ;;      Totals:        10       0       0       0       0       0       0
 10048 ;;Total ram usage:       10 bytes
 10049 ;; Hardware stack levels used:    1
 10050 ;; Hardware stack levels required when called:    3
 10051 ;; This function calls:
 10052 ;;		_MyIdleI2C
 10053 ;;		_MyStartI2C
 10054 ;;		_MyStopI2C
 10055 ;;		___wmul
 10056 ;;		_write
 10057 ;; This function is called by:
 10058 ;;		_main
 10059 ;;		_animation0
 10060 ;;		_animation1
 10061 ;;		_animation2
 10062 ;;		_animation3
 10063 ;;		_animation4
 10064 ;;		_animation5
 10065 ;;		_animation6
 10066 ;;		_animation7
 10067 ;; This function uses a non-reentrant model
 10068 ;;
 10069                           
 10070                           	psect	text16
 10071  004B18                     __ptext16:
 10072                           	opt stack 0
 10073  004B18                     _write_display:
 10074                           	opt stack 27
 10075                           
 10076                           ;newmain.c: 1008: int i,j;
 10077                           ;newmain.c: 1009: for(i=0;i<4;i++)
 10078                           
 10079                           ;incstack = 0
 10080  004B18  0E00               	movlw	0
 10081  004B1A  6E52               	movwf	write_display@i+1,c
 10082  004B1C  0E00               	movlw	0
 10083  004B1E  6E51               	movwf	write_display@i,c
 10084  004B20  BE52               	btfsc	write_display@i+1,7,c
 10085  004B22  D008               	goto	l472
 10086  004B24  5052               	movf	write_display@i+1,w,c
 10087  004B26  E105               	bnz	u3530
 10088  004B28  0E04               	movlw	4
 10089  004B2A  5C51               	subwf	write_display@i,w,c
 10090  004B2C  B0D8               	btfsc	status,0,c
 10091  004B2E  0012               	return	
 10092  004B30  D001               	goto	l472
 10093  004B32                     u3530:
 10094  004B32  0012               	return	
 10095  004B34                     l472:
 10096                           
 10097                           ;newmain.c: 1010: {
 10098                           ;newmain.c: 1011: MyIdleI2C();
 10099  004B34  EC1D  F023         	call	_MyIdleI2C	;wreg free
 10100                           
 10101                           ;newmain.c: 1012: MyStartI2C();
 10102  004B38  EC16  F023         	call	_MyStartI2C	;wreg free
 10103                           
 10104                           ;newmain.c: 1013: MyIdleI2C();
 10105  004B3C  EC1D  F023         	call	_MyIdleI2C	;wreg free
 10106                           
 10107                           ;newmain.c: 1014: write(matrices[i].address | 0x00);
 10108  004B40  C051  F043         	movff	write_display@i,___wmul@multiplier
 10109  004B44  C052  F044         	movff	write_display@i+1,___wmul@multiplier+1
 10110  004B48  0E00               	movlw	0
 10111  004B4A  6E46               	movwf	___wmul@multiplicand+1,c
 10112  004B4C  0E1D               	movlw	29
 10113  004B4E  6E45               	movwf	___wmul@multiplicand,c
 10114  004B50  EC54  F023         	call	___wmul	;wreg free
 10115  004B54  0E80               	movlw	low _matrices
 10116  004B56  2443               	addwf	?___wmul,w,c
 10117  004B58  6ED9               	movwf	fsr2l,c
 10118  004B5A  0E00               	movlw	high _matrices
 10119  004B5C  2044               	addwfc	?___wmul+1,w,c
 10120  004B5E  6EDA               	movwf	fsr2h,c
 10121  004B60  50DF               	movf	indf2,w,c
 10122  004B62  EC67  F023         	call	_write
 10123                           
 10124                           ;newmain.c: 1015: MyIdleI2C();
 10125  004B66  EC1D  F023         	call	_MyIdleI2C	;wreg free
 10126                           
 10127                           ;newmain.c: 1016: write(0x00);
 10128  004B6A  0E00               	movlw	0
 10129  004B6C  EC67  F023         	call	_write
 10130                           
 10131                           ;newmain.c: 1017: MyIdleI2C();
 10132  004B70  EC1D  F023         	call	_MyIdleI2C	;wreg free
 10133                           
 10134                           ;newmain.c: 1019: for(j=0;j<8;j++)
 10135  004B74  0E00               	movlw	0
 10136  004B76  6E50               	movwf	write_display@j+1,c
 10137  004B78  0E00               	movlw	0
 10138  004B7A  6E4F               	movwf	write_display@j,c
 10139  004B7C                     l3186:
 10140  004B7C  BE50               	btfsc	write_display@j+1,7,c
 10141  004B7E  D006               	goto	l474
 10142  004B80  5050               	movf	write_display@j+1,w,c
 10143  004B82  E15A               	bnz	l3196
 10144  004B84  0E08               	movlw	8
 10145  004B86  5C4F               	subwf	write_display@j,w,c
 10146  004B88  B0D8               	btfsc	status,0,c
 10147  004B8A  D056               	goto	u3550
 10148  004B8C                     l474:
 10149                           
 10150                           ;newmain.c: 1020: {
 10151                           ;newmain.c: 1021: write(matrices[i].display_buffer[j]&0xff);
 10152  004B8C  C051  F043         	movff	write_display@i,___wmul@multiplier
 10153  004B90  C052  F044         	movff	write_display@i+1,___wmul@multiplier+1
 10154  004B94  0E00               	movlw	0
 10155  004B96  6E46               	movwf	___wmul@multiplicand+1,c
 10156  004B98  0E1D               	movlw	29
 10157  004B9A  6E45               	movwf	___wmul@multiplicand,c
 10158  004B9C  EC54  F023         	call	___wmul	;wreg free
 10159  004BA0  C04F  F049         	movff	write_display@j,??_write_display
 10160  004BA4  C050  F04A         	movff	write_display@j+1,??_write_display+1
 10161  004BA8  90D8               	bcf	status,0,c
 10162  004BAA  3649               	rlcf	??_write_display,f,c
 10163  004BAC  364A               	rlcf	??_write_display+1,f,c
 10164  004BAE  0E0D               	movlw	13
 10165  004BB0  2649               	addwf	??_write_display,f,c
 10166  004BB2  0E00               	movlw	0
 10167  004BB4  224A               	addwfc	??_write_display+1,f,c
 10168  004BB6  0E80               	movlw	low _matrices
 10169  004BB8  6E4B               	movwf	(??_write_display+2)& (0+255),c
 10170  004BBA  0E00               	movlw	high _matrices
 10171  004BBC  6E4C               	movwf	(??_write_display+3)& (0+255),c
 10172  004BBE  5049               	movf	??_write_display,w,c
 10173  004BC0  264B               	addwf	??_write_display+2,f,c
 10174  004BC2  504A               	movf	??_write_display+1,w,c
 10175  004BC4  224C               	addwfc	??_write_display+3,f,c
 10176  004BC6  5043               	movf	?___wmul,w,c
 10177  004BC8  244B               	addwf	??_write_display+2,w,c
 10178  004BCA  6ED9               	movwf	fsr2l,c
 10179  004BCC  5044               	movf	?___wmul+1,w,c
 10180  004BCE  204C               	addwfc	??_write_display+3,w,c
 10181  004BD0  6EDA               	movwf	fsr2h,c
 10182  004BD2  50DF               	movf	indf2,w,c
 10183  004BD4  EC67  F023         	call	_write
 10184                           
 10185                           ;newmain.c: 1022: write(matrices[i].display_buffer[j]>>8);
 10186  004BD8  C051  F043         	movff	write_display@i,___wmul@multiplier
 10187  004BDC  C052  F044         	movff	write_display@i+1,___wmul@multiplier+1
 10188  004BE0  0E00               	movlw	0
 10189  004BE2  6E46               	movwf	___wmul@multiplicand+1,c
 10190  004BE4  0E1D               	movlw	29
 10191  004BE6  6E45               	movwf	___wmul@multiplicand,c
 10192  004BE8  EC54  F023         	call	___wmul	;wreg free
 10193  004BEC  C04F  F049         	movff	write_display@j,??_write_display
 10194  004BF0  C050  F04A         	movff	write_display@j+1,??_write_display+1
 10195  004BF4  90D8               	bcf	status,0,c
 10196  004BF6  3649               	rlcf	??_write_display,f,c
 10197  004BF8  364A               	rlcf	??_write_display+1,f,c
 10198  004BFA  0E0D               	movlw	13
 10199  004BFC  2649               	addwf	??_write_display,f,c
 10200  004BFE  0E00               	movlw	0
 10201  004C00  224A               	addwfc	??_write_display+1,f,c
 10202  004C02  0E80               	movlw	low _matrices
 10203  004C04  6E4B               	movwf	(??_write_display+2)& (0+255),c
 10204  004C06  0E00               	movlw	high _matrices
 10205  004C08  6E4C               	movwf	(??_write_display+3)& (0+255),c
 10206  004C0A  5049               	movf	??_write_display,w,c
 10207  004C0C  264B               	addwf	??_write_display+2,f,c
 10208  004C0E  504A               	movf	??_write_display+1,w,c
 10209  004C10  224C               	addwfc	??_write_display+3,f,c
 10210  004C12  5043               	movf	?___wmul,w,c
 10211  004C14  244B               	addwf	??_write_display+2,w,c
 10212  004C16  6ED9               	movwf	fsr2l,c
 10213  004C18  5044               	movf	?___wmul+1,w,c
 10214  004C1A  204C               	addwfc	??_write_display+3,w,c
 10215  004C1C  6EDA               	movwf	fsr2h,c
 10216  004C1E  CFDE F04D          	movff	postinc2,??_write_display+4
 10217  004C22  CFDD F04E          	movff	postdec2,??_write_display+5
 10218  004C26  C04E  F04D         	movff	??_write_display+5,??_write_display+4
 10219  004C2A  6A4E               	clrf	??_write_display+5,c
 10220  004C2C  504D               	movf	??_write_display+4,w,c
 10221  004C2E  EC67  F023         	call	_write
 10222  004C32  4A4F               	infsnz	write_display@j,f,c
 10223  004C34  2A50               	incf	write_display@j+1,f,c
 10224  004C36  D7A2               	goto	l3186
 10225  004C38                     u3550:
 10226  004C38                     l3196:
 10227                           
 10228                           ;newmain.c: 1023: }
 10229                           ;newmain.c: 1024: MyStopI2C();
 10230  004C38  EC18  F023         	call	_MyStopI2C	;wreg free
 10231  004C3C  4A51               	infsnz	write_display@i,f,c
 10232  004C3E  2A52               	incf	write_display@i+1,f,c
 10233  004C40  BE52               	btfsc	write_display@i+1,7,c
 10234  004C42  D778               	goto	l472
 10235  004C44  5052               	movf	write_display@i+1,w,c
 10236  004C46  E101               	bnz	l476
 10237  004C48  D76F               	goto	L19
 10238  004C4A                     l476:
 10239  004C4A  0012               	return		;funcret
 10240  004C4C                     __end_of_write_display:
 10241                           	opt stack 0
 10242                           tblptru	equ	0xFF8
 10243                           tblptrh	equ	0xFF7
 10244                           tblptrl	equ	0xFF6
 10245                           tablat	equ	0xFF5
 10246                           prodh	equ	0xFF4
 10247                           prodl	equ	0xFF3
 10248                           postinc0	equ	0xFEE
 10249                           wreg	equ	0xFE8
 10250                           postinc1	equ	0xFE6
 10251                           fsr1h	equ	0xFE2
 10252                           fsr1l	equ	0xFE1
 10253                           indf2	equ	0xFDF
 10254                           postinc2	equ	0xFDE
 10255                           postdec2	equ	0xFDD
 10256                           fsr2h	equ	0xFDA
 10257                           fsr2l	equ	0xFD9
 10258                           status	equ	0xFD8
 10259                           
 10260 ;; *************** function _write *****************
 10261 ;; Defined at:
 10262 ;;		line 364 in file "newmain.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;  data_out        1    wreg     unsigned char 
 10265 ;; Auto vars:     Size  Location     Type
 10266 ;;  data_out        1    3[COMRAM] unsigned char 
 10267 ;;  status          2    4[COMRAM] int 
 10268 ;;  data            1    2[COMRAM] char 
 10269 ;; Return value:  Size  Location     Type
 10270 ;;                  1    wreg      void 
 10271 ;; Registers used:
 10272 ;;		wreg, status,2, status,0, cstack
 10273 ;; Tracked objects:
 10274 ;;		On entry : 0/0
 10275 ;;		On exit  : 0/0
 10276 ;;		Unchanged: 0/0
 10277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10278 ;;      Params:         0       0       0       0       0       0       0
 10279 ;;      Locals:         4       0       0       0       0       0       0
 10280 ;;      Temps:          0       0       0       0       0       0       0
 10281 ;;      Totals:         4       0       0       0       0       0       0
 10282 ;;Total ram usage:        4 bytes
 10283 ;; Hardware stack levels used:    1
 10284 ;; Hardware stack levels required when called:    2
 10285 ;; This function calls:
 10286 ;;		_MyWriteI2C
 10287 ;; This function is called by:
 10288 ;;		_main
 10289 ;;		_write_display
 10290 ;;		_read_switch
 10291 ;; This function uses a non-reentrant model
 10292 ;;
 10293                           
 10294                           	psect	text17
 10295  0046CE                     __ptext17:
 10296                           	opt stack 0
 10297  0046CE                     _write:
 10298                           	opt stack 27
 10299                           
 10300                           ;incstack = 0
 10301                           ;write@data_out stored from wreg
 10302  0046CE  6E46               	movwf	write@data_out,c
 10303                           
 10304                           ;newmain.c: 366: signed char data;
 10305                           ;newmain.c: 367: int status;
 10306                           ;newmain.c: 368: data=SSPBUF;
 10307  0046D0  CFC9 F045          	movff	4041,write@data	;volatile
 10308  0046D4                     
 10309                           ;newmain.c: 370: status=MyWriteI2C(data_out);
 10310  0046D4  5046               	movf	write@data_out,w,c
 10311  0046D6  ECC7  F023         	call	_MyWriteI2C
 10312  0046DA  6E47               	movwf	write@status,c
 10313  0046DC  6A48               	clrf	write@status+1,c
 10314  0046DE  BE47               	btfsc	write@status,7,c
 10315  0046E0  0648               	decf	write@status+1,f,c
 10316                           
 10317                           ;newmain.c: 371: if(status == -1){
 10318  0046E2  2847               	incf	write@status,w,c
 10319  0046E4  E106               	bnz	l3140
 10320  0046E6  2848               	incf	write@status+1,w,c
 10321  0046E8  A4D8               	btfss	status,2,c
 10322  0046EA  D003               	goto	l126
 10323                           
 10324                           ;newmain.c: 372: data=SSPBUF;
 10325  0046EC  CFC9 F045          	movff	4041,write@data	;volatile
 10326                           
 10327                           ;newmain.c: 373: SSPCON1bits.WCOL = 0;
 10328  0046F0  9EC6               	bcf	4038,7,c	;volatile
 10329  0046F2                     l126:
 10330  0046F2                     l3140:
 10331                           
 10332                           ;newmain.c: 374: }
 10333                           ;newmain.c: 375: }while(status!=0);
 10334  0046F2  5047               	movf	write@status,w,c
 10335  0046F4  1048               	iorwf	write@status+1,w,c
 10336  0046F6  B4D8               	btfsc	status,2,c
 10337  0046F8  0012               	return	
 10338  0046FA  D7EC               	goto	l125
 10339  0046FC                     __end_of_write:
 10340                           	opt stack 0
 10341                           tblptru	equ	0xFF8
 10342                           tblptrh	equ	0xFF7
 10343                           tblptrl	equ	0xFF6
 10344                           tablat	equ	0xFF5
 10345                           prodh	equ	0xFF4
 10346                           prodl	equ	0xFF3
 10347                           postinc0	equ	0xFEE
 10348                           wreg	equ	0xFE8
 10349                           postinc1	equ	0xFE6
 10350                           fsr1h	equ	0xFE2
 10351                           fsr1l	equ	0xFE1
 10352                           indf2	equ	0xFDF
 10353                           postinc2	equ	0xFDE
 10354                           postdec2	equ	0xFDD
 10355                           fsr2h	equ	0xFDA
 10356                           fsr2l	equ	0xFD9
 10357                           status	equ	0xFD8
 10358                           
 10359 ;; *************** function _MyWriteI2C *****************
 10360 ;; Defined at:
 10361 ;;		line 1112 in file "newmain.c"
 10362 ;; Parameters:    Size  Location     Type
 10363 ;;  data_out        1    wreg     unsigned char 
 10364 ;; Auto vars:     Size  Location     Type
 10365 ;;  data_out        1    1[COMRAM] unsigned char 
 10366 ;; Return value:  Size  Location     Type
 10367 ;;                  1    wreg      char 
 10368 ;; Registers used:
 10369 ;;		wreg, status,2, status,0, cstack
 10370 ;; Tracked objects:
 10371 ;;		On entry : 0/0
 10372 ;;		On exit  : 0/0
 10373 ;;		Unchanged: 0/0
 10374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10375 ;;      Params:         0       0       0       0       0       0       0
 10376 ;;      Locals:         1       0       0       0       0       0       0
 10377 ;;      Temps:          0       0       0       0       0       0       0
 10378 ;;      Totals:         1       0       0       0       0       0       0
 10379 ;;Total ram usage:        1 bytes
 10380 ;; Hardware stack levels used:    1
 10381 ;; Hardware stack levels required when called:    1
 10382 ;; This function calls:
 10383 ;;		_MyIdleI2C
 10384 ;; This function is called by:
 10385 ;;		_write
 10386 ;;		_MyputsI2C
 10387 ;; This function uses a non-reentrant model
 10388 ;;
 10389                           
 10390                           	psect	text18
 10391  00478E                     __ptext18:
 10392                           	opt stack 0
 10393  00478E                     _MyWriteI2C:
 10394                           	opt stack 27
 10395                           
 10396                           ;incstack = 0
 10397                           ;MyWriteI2C@data_out stored from wreg
 10398  00478E  6E44               	movwf	MyWriteI2C@data_out,c
 10399                           
 10400                           ;newmain.c: 1114: SSPBUF = data_out;
 10401  004790  C044  FFC9         	movff	MyWriteI2C@data_out,4041	;volatile
 10402                           
 10403                           ;newmain.c: 1115: if ( SSPCON1bits.WCOL )
 10404  004794  AEC6               	btfss	4038,7,c	;volatile
 10405  004796  D002               	goto	l520
 10406                           
 10407                           ;newmain.c: 1116: return ( -1 );
 10408  004798  0EFF               	movlw	255
 10409  00479A  0012               	return	
 10410  00479C                     l520:
 10411                           
 10412                           ;newmain.c: 1117: else
 10413                           ;newmain.c: 1118: {
 10414                           ;newmain.c: 1119: if( ((SSPCON1&0x0F)!=0x08) && ((SSPCON1&0x0F)!=0x0B) )
 10415  00479C  50C6               	movf	4038,w,c	;volatile
 10416  00479E  0B0F               	andlw	15
 10417  0047A0  0A08               	xorlw	8
 10418  0047A2  B4D8               	btfsc	status,2,c
 10419  0047A4  D00F               	goto	l523
 10420  0047A6  50C6               	movf	4038,w,c	;volatile
 10421  0047A8  0B0F               	andlw	15
 10422  0047AA  0A0B               	xorlw	11
 10423  0047AC  B4D8               	btfsc	status,2,c
 10424  0047AE  D00A               	goto	l523
 10425                           
 10426                           ;newmain.c: 1120: {
 10427                           ;newmain.c: 1121: SSPCON1bits.CKP = 1;
 10428  0047B0  88C6               	bsf	4038,4,c	;volatile
 10429  0047B2  A69E               	btfss	3998,3,c	;volatile
 10430  0047B4  D7FE               	goto	l525
 10431                           
 10432                           ;newmain.c: 1124: if ( ( !SSPSTATbits.R_W ) && ( !SSPSTATbits.BF ) )
 10433  0047B6  A4C7               	btfss	4039,2,c	;volatile
 10434  0047B8  B0C7               	btfsc	4039,0,c	;volatile
 10435  0047BA  D002               	goto	l527
 10436                           
 10437                           ;newmain.c: 1125: {
 10438                           ;newmain.c: 1126: return ( -2 );
 10439  0047BC  0EFE               	movlw	254
 10440                           
 10441                           ;newmain.c: 1127: }
 10442  0047BE  0012               	return	
 10443  0047C0                     l527:
 10444                           
 10445                           ;newmain.c: 1128: else
 10446                           ;newmain.c: 1129: {
 10447                           ;newmain.c: 1130: return ( 0 );
 10448  0047C0  0E00               	movlw	0
 10449                           
 10450                           ;newmain.c: 1131: }
 10451                           ;newmain.c: 1132: }
 10452  0047C2  0012               	return	
 10453  0047C4                     l523:
 10454                           
 10455                           ;newmain.c: 1133: else if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 10456  0047C4  50C6               	movf	4038,w,c	;volatile
 10457  0047C6  0B0F               	andlw	15
 10458  0047C8  0A08               	xorlw	8
 10459  0047CA  B4D8               	btfsc	status,2,c
 10460  0047CC  D005               	goto	u3440
 10461  0047CE  50C6               	movf	4038,w,c	;volatile
 10462  0047D0  0B0F               	andlw	15
 10463  0047D2  0A0B               	xorlw	11
 10464  0047D4  A4D8               	btfss	status,2,c
 10465  0047D6  0012               	return	
 10466  0047D8                     u3440:
 10467                           
 10468                           ;newmain.c: 1134: {
 10469                           ;newmain.c: 1135: while( SSPSTATbits.BF );
 10470  0047D8  B0C7               	btfsc	4039,0,c	;volatile
 10471  0047DA  D7FE               	goto	u3440
 10472                           
 10473                           ;newmain.c: 1136: MyIdleI2C();
 10474  0047DC  EC1D  F023         	call	_MyIdleI2C	;wreg free
 10475                           
 10476                           ;newmain.c: 1137: if ( SSPCON2bits.ACKSTAT )
 10477  0047E0  ACC5               	btfss	4037,6,c	;volatile
 10478  0047E2  D002               	goto	l536
 10479                           
 10480                           ;newmain.c: 1138: return ( -2 );
 10481  0047E4  0EFE               	movlw	254
 10482  0047E6  0012               	return	
 10483  0047E8                     l536:
 10484                           
 10485                           ;newmain.c: 1139: else return ( 0 );
 10486  0047E8  0E00               	movlw	0
 10487  0047EA  0012               	return	
 10488  0047EC                     __end_of_MyWriteI2C:
 10489                           	opt stack 0
 10490                           tblptru	equ	0xFF8
 10491                           tblptrh	equ	0xFF7
 10492                           tblptrl	equ	0xFF6
 10493                           tablat	equ	0xFF5
 10494                           prodh	equ	0xFF4
 10495                           prodl	equ	0xFF3
 10496                           postinc0	equ	0xFEE
 10497                           wreg	equ	0xFE8
 10498                           postinc1	equ	0xFE6
 10499                           fsr1h	equ	0xFE2
 10500                           fsr1l	equ	0xFE1
 10501                           indf2	equ	0xFDF
 10502                           postinc2	equ	0xFDE
 10503                           postdec2	equ	0xFDD
 10504                           fsr2h	equ	0xFDA
 10505                           fsr2l	equ	0xFD9
 10506                           status	equ	0xFD8
 10507                           
 10508 ;; *************** function _MyIdleI2C *****************
 10509 ;; Defined at:
 10510 ;;		line 1107 in file "newmain.c"
 10511 ;; Parameters:    Size  Location     Type
 10512 ;;		None
 10513 ;; Auto vars:     Size  Location     Type
 10514 ;;		None
 10515 ;; Return value:  Size  Location     Type
 10516 ;;                  1    wreg      void 
 10517 ;; Registers used:
 10518 ;;		wreg, status,2, status,0
 10519 ;; Tracked objects:
 10520 ;;		On entry : 0/0
 10521 ;;		On exit  : 0/0
 10522 ;;		Unchanged: 0/0
 10523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10524 ;;      Params:         0       0       0       0       0       0       0
 10525 ;;      Locals:         0       0       0       0       0       0       0
 10526 ;;      Temps:          1       0       0       0       0       0       0
 10527 ;;      Totals:         1       0       0       0       0       0       0
 10528 ;;Total ram usage:        1 bytes
 10529 ;; Hardware stack levels used:    1
 10530 ;; This function calls:
 10531 ;;		Nothing
 10532 ;; This function is called by:
 10533 ;;		_main
 10534 ;;		_write_display
 10535 ;;		_read_switch
 10536 ;;		_MyWriteI2C
 10537 ;; This function uses a non-reentrant model
 10538 ;;
 10539                           
 10540                           	psect	text19
 10541  00463A                     __ptext19:
 10542                           	opt stack 0
 10543  00463A                     _MyIdleI2C:
 10544                           	opt stack 27
 10545                           
 10546                           ;newmain.c: 1110: continue;
 10547                           
 10548                           ;newmain.c: 1109: while ( ( SSPCON2 & 0x1F ) || ( SSPSTATbits.R_W ) )
 10549                           
 10550                           ;incstack = 0
 10551  00463A  CFC5 F043          	movff	4037,??_MyIdleI2C	;volatile
 10552  00463E  0E1F               	movlw	31
 10553  004640  1643               	andwf	??_MyIdleI2C,f,c
 10554  004642  A4D8               	btfss	status,2,c
 10555  004644  D7FA               	goto	_MyIdleI2C
 10556  004646  A4C7               	btfss	4039,2,c	;volatile
 10557  004648  0012               	return	
 10558  00464A  D7F7               	goto	_MyIdleI2C
 10559  00464C                     __end_of_MyIdleI2C:
 10560                           	opt stack 0
 10561                           tblptru	equ	0xFF8
 10562                           tblptrh	equ	0xFF7
 10563                           tblptrl	equ	0xFF6
 10564                           tablat	equ	0xFF5
 10565                           prodh	equ	0xFF4
 10566                           prodl	equ	0xFF3
 10567                           postinc0	equ	0xFEE
 10568                           wreg	equ	0xFE8
 10569                           postinc1	equ	0xFE6
 10570                           fsr1h	equ	0xFE2
 10571                           fsr1l	equ	0xFE1
 10572                           indf2	equ	0xFDF
 10573                           postinc2	equ	0xFDE
 10574                           postdec2	equ	0xFDD
 10575                           fsr2h	equ	0xFDA
 10576                           fsr2l	equ	0xFD9
 10577                           status	equ	0xFD8
 10578                           
 10579 ;; *************** function _MyStopI2C *****************
 10580 ;; Defined at:
 10581 ;;		line 1099 in file "newmain.c"
 10582 ;; Parameters:    Size  Location     Type
 10583 ;;		None
 10584 ;; Auto vars:     Size  Location     Type
 10585 ;;		None
 10586 ;; Return value:  Size  Location     Type
 10587 ;;                  1    wreg      void 
 10588 ;; Registers used:
 10589 ;;		None
 10590 ;; Tracked objects:
 10591 ;;		On entry : 0/0
 10592 ;;		On exit  : 0/0
 10593 ;;		Unchanged: 0/0
 10594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10595 ;;      Params:         0       0       0       0       0       0       0
 10596 ;;      Locals:         0       0       0       0       0       0       0
 10597 ;;      Temps:          0       0       0       0       0       0       0
 10598 ;;      Totals:         0       0       0       0       0       0       0
 10599 ;;Total ram usage:        0 bytes
 10600 ;; Hardware stack levels used:    1
 10601 ;; This function calls:
 10602 ;;		Nothing
 10603 ;; This function is called by:
 10604 ;;		_main
 10605 ;;		_write_display
 10606 ;;		_read_switch
 10607 ;; This function uses a non-reentrant model
 10608 ;;
 10609                           
 10610                           	psect	text20
 10611  004630                     __ptext20:
 10612                           	opt stack 0
 10613  004630                     _MyStopI2C:
 10614                           	opt stack 29
 10615                           
 10616                           ;newmain.c: 1101: SSPCON2bits.PEN = 1;
 10617                           
 10618                           ;incstack = 0
 10619  004630  84C5               	bsf	4037,2,c	;volatile
 10620  004632  0012               	return		;funcret
 10621  004634                     __end_of_MyStopI2C:
 10622                           	opt stack 0
 10623                           tblptru	equ	0xFF8
 10624                           tblptrh	equ	0xFF7
 10625                           tblptrl	equ	0xFF6
 10626                           tablat	equ	0xFF5
 10627                           prodh	equ	0xFF4
 10628                           prodl	equ	0xFF3
 10629                           postinc0	equ	0xFEE
 10630                           wreg	equ	0xFE8
 10631                           postinc1	equ	0xFE6
 10632                           fsr1h	equ	0xFE2
 10633                           fsr1l	equ	0xFE1
 10634                           indf2	equ	0xFDF
 10635                           postinc2	equ	0xFDE
 10636                           postdec2	equ	0xFDD
 10637                           fsr2h	equ	0xFDA
 10638                           fsr2l	equ	0xFD9
 10639                           status	equ	0xFD8
 10640                           
 10641 ;; *************** function _MyStartI2C *****************
 10642 ;; Defined at:
 10643 ;;		line 1095 in file "newmain.c"
 10644 ;; Parameters:    Size  Location     Type
 10645 ;;		None
 10646 ;; Auto vars:     Size  Location     Type
 10647 ;;		None
 10648 ;; Return value:  Size  Location     Type
 10649 ;;                  1    wreg      void 
 10650 ;; Registers used:
 10651 ;;		None
 10652 ;; Tracked objects:
 10653 ;;		On entry : 0/0
 10654 ;;		On exit  : 0/0
 10655 ;;		Unchanged: 0/0
 10656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10657 ;;      Params:         0       0       0       0       0       0       0
 10658 ;;      Locals:         0       0       0       0       0       0       0
 10659 ;;      Temps:          0       0       0       0       0       0       0
 10660 ;;      Totals:         0       0       0       0       0       0       0
 10661 ;;Total ram usage:        0 bytes
 10662 ;; Hardware stack levels used:    1
 10663 ;; This function calls:
 10664 ;;		Nothing
 10665 ;; This function is called by:
 10666 ;;		_main
 10667 ;;		_write_display
 10668 ;;		_read_switch
 10669 ;; This function uses a non-reentrant model
 10670 ;;
 10671                           
 10672                           	psect	text21
 10673  00462C                     __ptext21:
 10674                           	opt stack 0
 10675  00462C                     _MyStartI2C:
 10676                           	opt stack 29
 10677                           
 10678                           ;newmain.c: 1097: SSPCON2bits.SEN = 1;
 10679                           
 10680                           ;incstack = 0
 10681  00462C  80C5               	bsf	4037,0,c	;volatile
 10682  00462E  0012               	return		;funcret
 10683  004630                     __end_of_MyStartI2C:
 10684                           	opt stack 0
 10685                           tblptru	equ	0xFF8
 10686                           tblptrh	equ	0xFF7
 10687                           tblptrl	equ	0xFF6
 10688                           tablat	equ	0xFF5
 10689                           prodh	equ	0xFF4
 10690                           prodl	equ	0xFF3
 10691                           postinc0	equ	0xFEE
 10692                           wreg	equ	0xFE8
 10693                           postinc1	equ	0xFE6
 10694                           fsr1h	equ	0xFE2
 10695                           fsr1l	equ	0xFE1
 10696                           indf2	equ	0xFDF
 10697                           postinc2	equ	0xFDE
 10698                           postdec2	equ	0xFDD
 10699                           fsr2h	equ	0xFDA
 10700                           fsr2l	equ	0xFD9
 10701                           status	equ	0xFD8
 10702                           
 10703 ;; *************** function _set_led *****************
 10704 ;; Defined at:
 10705 ;;		line 1035 in file "newmain.c"
 10706 ;; Parameters:    Size  Location     Type
 10707 ;;  i               1    wreg     unsigned char 
 10708 ;; Auto vars:     Size  Location     Type
 10709 ;;  i               1   18[COMRAM] unsigned char 
 10710 ;;  led             2   16[COMRAM] int 
 10711 ;;  matrix          2   14[COMRAM] int 
 10712 ;; Return value:  Size  Location     Type
 10713 ;;                  1    wreg      void 
 10714 ;; Registers used:
 10715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10716 ;; Tracked objects:
 10717 ;;		On entry : 0/0
 10718 ;;		On exit  : 0/0
 10719 ;;		Unchanged: 0/0
 10720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10721 ;;      Params:         0       0       0       0       0       0       0
 10722 ;;      Locals:         5       0       0       0       0       0       0
 10723 ;;      Temps:          8       0       0       0       0       0       0
 10724 ;;      Totals:        13       0       0       0       0       0       0
 10725 ;;Total ram usage:       13 bytes
 10726 ;; Hardware stack levels used:    1
 10727 ;; Hardware stack levels required when called:    1
 10728 ;; This function calls:
 10729 ;;		___wmul
 10730 ;; This function is called by:
 10731 ;;		_main
 10732 ;;		_animation0
 10733 ;;		_animation1
 10734 ;;		_animation2
 10735 ;;		_animation3
 10736 ;;		_animation4
 10737 ;;		_animation5
 10738 ;;		_animation6
 10739 ;;		_animation7
 10740 ;; This function uses a non-reentrant model
 10741 ;;
 10742                           
 10743                           	psect	text22
 10744  0049B4                     __ptext22:
 10745                           	opt stack 0
 10746  0049B4                     _set_led:
 10747                           	opt stack 29
 10748                           
 10749                           ;incstack = 0
 10750                           ;set_led@i stored from wreg
 10751  0049B4  6E55               	movwf	set_led@i,c
 10752                           
 10753                           ;newmain.c: 1037: int matrix=i>>4;
 10754  0049B6  C055  F049         	movff	set_led@i,??_set_led
 10755  0049BA  3A49               	swapf	??_set_led,f,c
 10756  0049BC  0E0F               	movlw	15
 10757  0049BE  1649               	andwf	??_set_led,f,c
 10758  0049C0  5049               	movf	??_set_led,w,c
 10759  0049C2  6E51               	movwf	set_led@matrix,c
 10760  0049C4  6A52               	clrf	set_led@matrix+1,c
 10761                           
 10762                           ;newmain.c: 1038: int led=i&0b1111;
 10763  0049C6  C055  F049         	movff	set_led@i,??_set_led
 10764  0049CA  0E0F               	movlw	15
 10765  0049CC  1649               	andwf	??_set_led,f,c
 10766  0049CE  5049               	movf	??_set_led,w,c
 10767  0049D0  6E53               	movwf	set_led@led,c
 10768  0049D2  6A54               	clrf	set_led@led+1,c
 10769                           
 10770                           ;newmain.c: 1039: matrices[matrix].display_buffer[ledLUT[led]>>4]|=(1<<(ledLUT[led]&0x0f
      +                          ));
 10771  0049D4  0EEF               	movlw	low _ledLUT
 10772  0049D6  2453               	addwf	set_led@led,w,c
 10773  0049D8  6EF6               	movwf	tblptrl,c
 10774  0049DA  0E7C               	movlw	high _ledLUT
 10775  0049DC  2054               	addwfc	set_led@led+1,w,c
 10776  0049DE  6EF7               	movwf	tblptrh,c
 10777  0049E0                     	if	0	;There are less than 3 active tblptr bytes
 10778  0049E0                     	endif
 10779  0049E0  0008               	tblrd		*
 10780  0049E2  CFF5 F049          	movff	tablat,??_set_led
 10781  0049E6  0E0F               	movlw	15
 10782  0049E8  1649               	andwf	??_set_led,f,c
 10783  0049EA  0E01               	movlw	1
 10784  0049EC  6E4A               	movwf	(??_set_led+1)& (0+255),c
 10785  0049EE  0E00               	movlw	0
 10786  0049F0  6E4B               	movwf	(??_set_led+2)& (0+255),c
 10787  0049F2  2A49               	incf	??_set_led,f,c
 10788  0049F4  D003               	goto	u3524
 10789  0049F6                     u3525:
 10790  0049F6  90D8               	bcf	status,0,c
 10791  0049F8  364A               	rlcf	??_set_led+1,f,c
 10792  0049FA  364B               	rlcf	??_set_led+2,f,c
 10793  0049FC                     u3524:
 10794  0049FC  2E49               	decfsz	??_set_led,f,c
 10795  0049FE  D7FB               	goto	u3525
 10796  004A00  C051  F043         	movff	set_led@matrix,___wmul@multiplier
 10797  004A04  C052  F044         	movff	set_led@matrix+1,___wmul@multiplier+1
 10798  004A08  0E00               	movlw	0
 10799  004A0A  6E46               	movwf	___wmul@multiplicand+1,c
 10800  004A0C  0E1D               	movlw	29
 10801  004A0E  6E45               	movwf	___wmul@multiplicand,c
 10802  004A10  EC54  F023         	call	___wmul	;wreg free
 10803  004A14  0EEF               	movlw	low _ledLUT
 10804  004A16  2453               	addwf	set_led@led,w,c
 10805  004A18  6EF6               	movwf	tblptrl,c
 10806  004A1A  0E7C               	movlw	high _ledLUT
 10807  004A1C  2054               	addwfc	set_led@led+1,w,c
 10808  004A1E  6EF7               	movwf	tblptrh,c
 10809  004A20                     	if	0	;There are less than 3 active tblptr bytes
 10810  004A20                     	endif
 10811  004A20  0008               	tblrd		*
 10812  004A22  CFF5 F04C          	movff	tablat,??_set_led+3
 10813  004A26  384C               	swapf	??_set_led+3,w,c
 10814  004A28  0B0F               	andlw	15
 10815  004A2A  6E4D               	movwf	(??_set_led+4)& (0+255),c
 10816  004A2C  6A4E               	clrf	(??_set_led+5)& (0+255),c
 10817  004A2E  90D8               	bcf	status,0,c
 10818  004A30  364D               	rlcf	??_set_led+4,f,c
 10819  004A32  364E               	rlcf	??_set_led+5,f,c
 10820  004A34  0E0D               	movlw	13
 10821  004A36  264D               	addwf	??_set_led+4,f,c
 10822  004A38  0E00               	movlw	0
 10823  004A3A  224E               	addwfc	??_set_led+5,f,c
 10824  004A3C  0E80               	movlw	low _matrices
 10825  004A3E  6E4F               	movwf	(??_set_led+6)& (0+255),c
 10826  004A40  0E00               	movlw	high _matrices
 10827  004A42  6E50               	movwf	(??_set_led+7)& (0+255),c
 10828  004A44  504D               	movf	??_set_led+4,w,c
 10829  004A46  264F               	addwf	??_set_led+6,f,c
 10830  004A48  504E               	movf	??_set_led+5,w,c
 10831  004A4A  2250               	addwfc	??_set_led+7,f,c
 10832  004A4C  5043               	movf	?___wmul,w,c
 10833  004A4E  244F               	addwf	??_set_led+6,w,c
 10834  004A50  6ED9               	movwf	fsr2l,c
 10835  004A52  5044               	movf	?___wmul+1,w,c
 10836  004A54  2050               	addwfc	??_set_led+7,w,c
 10837  004A56  6EDA               	movwf	fsr2h,c
 10838  004A58  504A               	movf	??_set_led+1,w,c
 10839  004A5A  12DE               	iorwf	postinc2,f,c
 10840  004A5C  504B               	movf	??_set_led+2,w,c
 10841  004A5E  12DD               	iorwf	postdec2,f,c
 10842  004A60  0012               	return		;funcret
 10843  004A62                     __end_of_set_led:
 10844                           	opt stack 0
 10845                           tblptru	equ	0xFF8
 10846                           tblptrh	equ	0xFF7
 10847                           tblptrl	equ	0xFF6
 10848                           tablat	equ	0xFF5
 10849                           prodh	equ	0xFF4
 10850                           prodl	equ	0xFF3
 10851                           postinc0	equ	0xFEE
 10852                           wreg	equ	0xFE8
 10853                           postinc1	equ	0xFE6
 10854                           fsr1h	equ	0xFE2
 10855                           fsr1l	equ	0xFE1
 10856                           indf2	equ	0xFDF
 10857                           postinc2	equ	0xFDE
 10858                           postdec2	equ	0xFDD
 10859                           fsr2h	equ	0xFDA
 10860                           fsr2l	equ	0xFD9
 10861                           status	equ	0xFD8
 10862                           
 10863 ;; *************** function _clr_led *****************
 10864 ;; Defined at:
 10865 ;;		line 1029 in file "newmain.c"
 10866 ;; Parameters:    Size  Location     Type
 10867 ;;  i               1    wreg     unsigned char 
 10868 ;; Auto vars:     Size  Location     Type
 10869 ;;  i               1   20[COMRAM] unsigned char 
 10870 ;;  led             2   18[COMRAM] int 
 10871 ;;  matrix          2   16[COMRAM] int 
 10872 ;; Return value:  Size  Location     Type
 10873 ;;                  1    wreg      void 
 10874 ;; Registers used:
 10875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10876 ;; Tracked objects:
 10877 ;;		On entry : 0/0
 10878 ;;		On exit  : 0/0
 10879 ;;		Unchanged: 0/0
 10880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10881 ;;      Params:         0       0       0       0       0       0       0
 10882 ;;      Locals:         5       0       0       0       0       0       0
 10883 ;;      Temps:         10       0       0       0       0       0       0
 10884 ;;      Totals:        15       0       0       0       0       0       0
 10885 ;;Total ram usage:       15 bytes
 10886 ;; Hardware stack levels used:    1
 10887 ;; Hardware stack levels required when called:    1
 10888 ;; This function calls:
 10889 ;;		___wmul
 10890 ;; This function is called by:
 10891 ;;		_main
 10892 ;;		_animation0
 10893 ;;		_animation1
 10894 ;;		_animation2
 10895 ;;		_animation3
 10896 ;;		_animation4
 10897 ;;		_animation5
 10898 ;;		_animation6
 10899 ;;		_animation7
 10900 ;; This function uses a non-reentrant model
 10901 ;;
 10902                           
 10903                           	psect	text23
 10904  004A62                     __ptext23:
 10905                           	opt stack 0
 10906  004A62                     _clr_led:
 10907                           	opt stack 29
 10908                           
 10909                           ;incstack = 0
 10910                           ;clr_led@i stored from wreg
 10911  004A62  6E57               	movwf	clr_led@i,c
 10912                           
 10913                           ;newmain.c: 1031: int matrix=i>>4;
 10914  004A64  C057  F049         	movff	clr_led@i,??_clr_led
 10915  004A68  3A49               	swapf	??_clr_led,f,c
 10916  004A6A  0E0F               	movlw	15
 10917  004A6C  1649               	andwf	??_clr_led,f,c
 10918  004A6E  5049               	movf	??_clr_led,w,c
 10919  004A70  6E53               	movwf	clr_led@matrix,c
 10920  004A72  6A54               	clrf	clr_led@matrix+1,c
 10921                           
 10922                           ;newmain.c: 1032: int led=i&0b1111;
 10923  004A74  C057  F049         	movff	clr_led@i,??_clr_led
 10924  004A78  0E0F               	movlw	15
 10925  004A7A  1649               	andwf	??_clr_led,f,c
 10926  004A7C  5049               	movf	??_clr_led,w,c
 10927  004A7E  6E55               	movwf	clr_led@led,c
 10928  004A80  6A56               	clrf	clr_led@led+1,c
 10929                           
 10930                           ;newmain.c: 1033: matrices[matrix].display_buffer[ledLUT[led]>>4]&=~(1<<(ledLUT[led]&0x0
      +                          f));
 10931  004A82  0EEF               	movlw	low _ledLUT
 10932  004A84  2455               	addwf	clr_led@led,w,c
 10933  004A86  6EF6               	movwf	tblptrl,c
 10934  004A88  0E7C               	movlw	high _ledLUT
 10935  004A8A  2056               	addwfc	clr_led@led+1,w,c
 10936  004A8C  6EF7               	movwf	tblptrh,c
 10937  004A8E                     	if	0	;There are less than 3 active tblptr bytes
 10938  004A8E                     	endif
 10939  004A8E  0008               	tblrd		*
 10940  004A90  CFF5 F049          	movff	tablat,??_clr_led
 10941  004A94  0E0F               	movlw	15
 10942  004A96  1649               	andwf	??_clr_led,f,c
 10943  004A98  0E01               	movlw	1
 10944  004A9A  6E4A               	movwf	(??_clr_led+1)& (0+255),c
 10945  004A9C  0E00               	movlw	0
 10946  004A9E  6E4B               	movwf	(??_clr_led+2)& (0+255),c
 10947  004AA0  2A49               	incf	??_clr_led,f,c
 10948  004AA2  D003               	goto	u3574
 10949  004AA4                     u3575:
 10950  004AA4  90D8               	bcf	status,0,c
 10951  004AA6  364A               	rlcf	??_clr_led+1,f,c
 10952  004AA8  364B               	rlcf	??_clr_led+2,f,c
 10953  004AAA                     u3574:
 10954  004AAA  2E49               	decfsz	??_clr_led,f,c
 10955  004AAC  D7FB               	goto	u3575
 10956  004AAE  1C4A               	comf	??_clr_led+1,w,c
 10957  004AB0  6E4C               	movwf	(??_clr_led+3)& (0+255),c
 10958  004AB2  1C4B               	comf	??_clr_led+2,w,c
 10959  004AB4  6E4D               	movwf	(??_clr_led+4)& (0+255),c
 10960  004AB6  C053  F043         	movff	clr_led@matrix,___wmul@multiplier
 10961  004ABA  C054  F044         	movff	clr_led@matrix+1,___wmul@multiplier+1
 10962  004ABE  0E00               	movlw	0
 10963  004AC0  6E46               	movwf	___wmul@multiplicand+1,c
 10964  004AC2  0E1D               	movlw	29
 10965  004AC4  6E45               	movwf	___wmul@multiplicand,c
 10966  004AC6  EC54  F023         	call	___wmul	;wreg free
 10967  004ACA  0EEF               	movlw	low _ledLUT
 10968  004ACC  2455               	addwf	clr_led@led,w,c
 10969  004ACE  6EF6               	movwf	tblptrl,c
 10970  004AD0  0E7C               	movlw	high _ledLUT
 10971  004AD2  2056               	addwfc	clr_led@led+1,w,c
 10972  004AD4  6EF7               	movwf	tblptrh,c
 10973  004AD6                     	if	0	;There are less than 3 active tblptr bytes
 10974  004AD6                     	endif
 10975  004AD6  0008               	tblrd		*
 10976  004AD8  CFF5 F04E          	movff	tablat,??_clr_led+5
 10977  004ADC  384E               	swapf	??_clr_led+5,w,c
 10978  004ADE  0B0F               	andlw	15
 10979  004AE0  6E4F               	movwf	(??_clr_led+6)& (0+255),c
 10980  004AE2  6A50               	clrf	(??_clr_led+7)& (0+255),c
 10981  004AE4  90D8               	bcf	status,0,c
 10982  004AE6  364F               	rlcf	??_clr_led+6,f,c
 10983  004AE8  3650               	rlcf	??_clr_led+7,f,c
 10984  004AEA  0E0D               	movlw	13
 10985  004AEC  264F               	addwf	??_clr_led+6,f,c
 10986  004AEE  0E00               	movlw	0
 10987  004AF0  2250               	addwfc	??_clr_led+7,f,c
 10988  004AF2  0E80               	movlw	low _matrices
 10989  004AF4  6E51               	movwf	(??_clr_led+8)& (0+255),c
 10990  004AF6  0E00               	movlw	high _matrices
 10991  004AF8  6E52               	movwf	(??_clr_led+9)& (0+255),c
 10992  004AFA  504F               	movf	??_clr_led+6,w,c
 10993  004AFC  2651               	addwf	??_clr_led+8,f,c
 10994  004AFE  5050               	movf	??_clr_led+7,w,c
 10995  004B00  2252               	addwfc	??_clr_led+9,f,c
 10996  004B02  5043               	movf	?___wmul,w,c
 10997  004B04  2451               	addwf	??_clr_led+8,w,c
 10998  004B06  6ED9               	movwf	fsr2l,c
 10999  004B08  5044               	movf	?___wmul+1,w,c
 11000  004B0A  2052               	addwfc	??_clr_led+9,w,c
 11001  004B0C  6EDA               	movwf	fsr2h,c
 11002  004B0E  504C               	movf	??_clr_led+3,w,c
 11003  004B10  16DE               	andwf	postinc2,f,c
 11004  004B12  504D               	movf	??_clr_led+4,w,c
 11005  004B14  16DD               	andwf	postdec2,f,c
 11006  004B16  0012               	return		;funcret
 11007  004B18                     __end_of_clr_led:
 11008                           	opt stack 0
 11009                           tblptru	equ	0xFF8
 11010                           tblptrh	equ	0xFF7
 11011                           tblptrl	equ	0xFF6
 11012                           tablat	equ	0xFF5
 11013                           prodh	equ	0xFF4
 11014                           prodl	equ	0xFF3
 11015                           postinc0	equ	0xFEE
 11016                           wreg	equ	0xFE8
 11017                           postinc1	equ	0xFE6
 11018                           fsr1h	equ	0xFE2
 11019                           fsr1l	equ	0xFE1
 11020                           indf2	equ	0xFDF
 11021                           postinc2	equ	0xFDE
 11022                           postdec2	equ	0xFDD
 11023                           fsr2h	equ	0xFDA
 11024                           fsr2l	equ	0xFD9
 11025                           status	equ	0xFD8
 11026                           
 11027 ;; *************** function ___wmul *****************
 11028 ;; Defined at:
 11029 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
 11030 ;; Parameters:    Size  Location     Type
 11031 ;;  multiplier      2    0[COMRAM] unsigned int 
 11032 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11033 ;; Auto vars:     Size  Location     Type
 11034 ;;  product         2    4[COMRAM] unsigned int 
 11035 ;; Return value:  Size  Location     Type
 11036 ;;                  2    0[COMRAM] unsigned int 
 11037 ;; Registers used:
 11038 ;;		wreg, status,2, status,0, prodl, prodh
 11039 ;; Tracked objects:
 11040 ;;		On entry : 0/0
 11041 ;;		On exit  : 0/0
 11042 ;;		Unchanged: 0/0
 11043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11044 ;;      Params:         4       0       0       0       0       0       0
 11045 ;;      Locals:         2       0       0       0       0       0       0
 11046 ;;      Temps:          0       0       0       0       0       0       0
 11047 ;;      Totals:         6       0       0       0       0       0       0
 11048 ;;Total ram usage:        6 bytes
 11049 ;; Hardware stack levels used:    1
 11050 ;; This function calls:
 11051 ;;		Nothing
 11052 ;; This function is called by:
 11053 ;;		_main
 11054 ;;		_animation2
 11055 ;;		_animation3
 11056 ;;		_animation7
 11057 ;;		_write_display
 11058 ;;		_clr_led
 11059 ;;		_set_led
 11060 ;;		_is_key_pressed
 11061 ;;		_was_key_pressed
 11062 ;;		_read_switch
 11063 ;;		_is_led
 11064 ;; This function uses a non-reentrant model
 11065 ;;
 11066                           
 11067                           	psect	text24
 11068  0046A8                     __ptext24:
 11069                           	opt stack 0
 11070  0046A8                     ___wmul:
 11071                           	opt stack 29
 11072                           
 11073                           ;incstack = 0
 11074  0046A8  5043               	movf	___wmul@multiplier,w,c
 11075  0046AA  0245               	mulwf	___wmul@multiplicand,c
 11076  0046AC  CFF3 F047          	movff	prodl,___wmul@product
 11077  0046B0  CFF4 F048          	movff	prodh,___wmul@product+1
 11078  0046B4  5043               	movf	___wmul@multiplier,w,c
 11079  0046B6  0246               	mulwf	___wmul@multiplicand+1,c
 11080  0046B8  50F3               	movf	prodl,w,c
 11081  0046BA  2648               	addwf	___wmul@product+1,f,c
 11082  0046BC  5044               	movf	___wmul@multiplier+1,w,c
 11083  0046BE  0245               	mulwf	___wmul@multiplicand,c
 11084  0046C0  50F3               	movf	prodl,w,c
 11085  0046C2  2648               	addwf	___wmul@product+1,f,c
 11086  0046C4  C047  F043         	movff	___wmul@product,?___wmul
 11087  0046C8  C048  F044         	movff	___wmul@product+1,?___wmul+1
 11088  0046CC  0012               	return	
 11089  0046CE                     __end_of___wmul:
 11090                           	opt stack 0
 11091                           tblptru	equ	0xFF8
 11092                           tblptrh	equ	0xFF7
 11093                           tblptrl	equ	0xFF6
 11094                           tablat	equ	0xFF5
 11095                           prodh	equ	0xFF4
 11096                           prodl	equ	0xFF3
 11097                           postinc0	equ	0xFEE
 11098                           wreg	equ	0xFE8
 11099                           postinc1	equ	0xFE6
 11100                           fsr1h	equ	0xFE2
 11101                           fsr1l	equ	0xFE1
 11102                           indf2	equ	0xFDF
 11103                           postinc2	equ	0xFDE
 11104                           postdec2	equ	0xFDD
 11105                           fsr2h	equ	0xFDA
 11106                           fsr2l	equ	0xFD9
 11107                           status	equ	0xFD8
 11108                           
 11109 ;; *************** function ___awdiv *****************
 11110 ;; Defined at:
 11111 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awdiv.c"
 11112 ;; Parameters:    Size  Location     Type
 11113 ;;  dividend        2    0[COMRAM] int 
 11114 ;;  divisor         2    2[COMRAM] int 
 11115 ;; Auto vars:     Size  Location     Type
 11116 ;;  quotient        2    6[COMRAM] int 
 11117 ;;  sign            1    5[COMRAM] unsigned char 
 11118 ;;  counter         1    4[COMRAM] unsigned char 
 11119 ;; Return value:  Size  Location     Type
 11120 ;;                  2    0[COMRAM] int 
 11121 ;; Registers used:
 11122 ;;		wreg, status,2, status,0
 11123 ;; Tracked objects:
 11124 ;;		On entry : 0/0
 11125 ;;		On exit  : 0/0
 11126 ;;		Unchanged: 0/0
 11127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11128 ;;      Params:         4       0       0       0       0       0       0
 11129 ;;      Locals:         4       0       0       0       0       0       0
 11130 ;;      Temps:          0       0       0       0       0       0       0
 11131 ;;      Totals:         8       0       0       0       0       0       0
 11132 ;;Total ram usage:        8 bytes
 11133 ;; Hardware stack levels used:    1
 11134 ;; This function calls:
 11135 ;;		Nothing
 11136 ;; This function is called by:
 11137 ;;		_main
 11138 ;; This function uses a non-reentrant model
 11139 ;;
 11140                           
 11141                           	psect	text25
 11142  0047EC                     __ptext25:
 11143                           	opt stack 0
 11144  0047EC                     ___awdiv:
 11145                           	opt stack 30
 11146                           
 11147                           ;incstack = 0
 11148  0047EC  0E00               	movlw	0
 11149  0047EE  6E48               	movwf	___awdiv@sign,c
 11150  0047F0  AE46               	btfss	___awdiv@divisor+1,7,c
 11151  0047F2  D006               	goto	l756
 11152  0047F4  6C45               	negf	___awdiv@divisor,c
 11153  0047F6  1E46               	comf	___awdiv@divisor+1,f,c
 11154  0047F8  B0D8               	btfsc	status,0,c
 11155  0047FA  2A46               	incf	___awdiv@divisor+1,f,c
 11156  0047FC  0E01               	movlw	1
 11157  0047FE  6E48               	movwf	___awdiv@sign,c
 11158  004800                     l756:
 11159  004800  AE44               	btfss	___awdiv@dividend+1,7,c
 11160  004802  D006               	goto	l757
 11161  004804  6C43               	negf	___awdiv@dividend,c
 11162  004806  1E44               	comf	___awdiv@dividend+1,f,c
 11163  004808  B0D8               	btfsc	status,0,c
 11164  00480A  2A44               	incf	___awdiv@dividend+1,f,c
 11165  00480C  0E01               	movlw	1
 11166  00480E  1A48               	xorwf	___awdiv@sign,f,c
 11167  004810                     l757:
 11168  004810  0E00               	movlw	0
 11169  004812  6E4A               	movwf	___awdiv@quotient+1,c
 11170  004814  0E00               	movlw	0
 11171  004816  6E49               	movwf	___awdiv@quotient,c
 11172  004818  5045               	movf	___awdiv@divisor,w,c
 11173  00481A  1046               	iorwf	___awdiv@divisor+1,w,c
 11174  00481C  B4D8               	btfsc	status,2,c
 11175  00481E  D01C               	goto	l764
 11176  004820  0E01               	movlw	1
 11177  004822  6E47               	movwf	___awdiv@counter,c
 11178  004824  D004               	goto	l759
 11179  004826  90D8               	bcf	status,0,c
 11180  004828  3645               	rlcf	___awdiv@divisor,f,c
 11181  00482A  3646               	rlcf	___awdiv@divisor+1,f,c
 11182  00482C  2A47               	incf	___awdiv@counter,f,c
 11183  00482E                     l759:
 11184  00482E  AE46               	btfss	___awdiv@divisor+1,7,c
 11185  004830  D7FA               	goto	l760
 11186  004832                     u5980:
 11187  004832  90D8               	bcf	status,0,c
 11188  004834  3649               	rlcf	___awdiv@quotient,f,c
 11189  004836  364A               	rlcf	___awdiv@quotient+1,f,c
 11190  004838  5045               	movf	___awdiv@divisor,w,c
 11191  00483A  5C43               	subwf	___awdiv@dividend,w,c
 11192  00483C  5046               	movf	___awdiv@divisor+1,w,c
 11193  00483E  5844               	subwfb	___awdiv@dividend+1,w,c
 11194  004840  A0D8               	btfss	status,0,c
 11195  004842  D005               	goto	l763
 11196  004844  5045               	movf	___awdiv@divisor,w,c
 11197  004846  5E43               	subwf	___awdiv@dividend,f,c
 11198  004848  5046               	movf	___awdiv@divisor+1,w,c
 11199  00484A  5A44               	subwfb	___awdiv@dividend+1,f,c
 11200  00484C  8049               	bsf	___awdiv@quotient,0,c
 11201  00484E                     l763:
 11202  00484E  90D8               	bcf	status,0,c
 11203  004850  3246               	rrcf	___awdiv@divisor+1,f,c
 11204  004852  3245               	rrcf	___awdiv@divisor,f,c
 11205  004854  2E47               	decfsz	___awdiv@counter,f,c
 11206  004856  D7ED               	goto	u5980
 11207  004858                     l764:
 11208  004858  5048               	movf	___awdiv@sign,w,c
 11209  00485A  B4D8               	btfsc	status,2,c
 11210  00485C  D004               	goto	l765
 11211  00485E  6C49               	negf	___awdiv@quotient,c
 11212  004860  1E4A               	comf	___awdiv@quotient+1,f,c
 11213  004862  B0D8               	btfsc	status,0,c
 11214  004864  2A4A               	incf	___awdiv@quotient+1,f,c
 11215  004866                     l765:
 11216  004866  C049  F043         	movff	___awdiv@quotient,?___awdiv
 11217  00486A  C04A  F044         	movff	___awdiv@quotient+1,?___awdiv+1
 11218  00486E  0012               	return	
 11219  004870                     __end_of___awdiv:
 11220                           	opt stack 0
 11221                           tblptru	equ	0xFF8
 11222                           tblptrh	equ	0xFF7
 11223                           tblptrl	equ	0xFF6
 11224                           tablat	equ	0xFF5
 11225                           prodh	equ	0xFF4
 11226                           prodl	equ	0xFF3
 11227                           postinc0	equ	0xFEE
 11228                           wreg	equ	0xFE8
 11229                           postinc1	equ	0xFE6
 11230                           fsr1h	equ	0xFE2
 11231                           fsr1l	equ	0xFE1
 11232                           indf2	equ	0xFDF
 11233                           postinc2	equ	0xFDE
 11234                           postdec2	equ	0xFDD
 11235                           fsr2h	equ	0xFDA
 11236                           fsr2l	equ	0xFD9
 11237                           status	equ	0xFD8
 11238                           
 11239 ;; *************** function _MyOpenI2C *****************
 11240 ;; Defined at:
 11241 ;;		line 1184 in file "newmain.c"
 11242 ;; Parameters:    Size  Location     Type
 11243 ;;  sync_mode       1    wreg     unsigned char 
 11244 ;;  slew            1    0[COMRAM] unsigned char 
 11245 ;; Auto vars:     Size  Location     Type
 11246 ;;  sync_mode       1    1[COMRAM] unsigned char 
 11247 ;; Return value:  Size  Location     Type
 11248 ;;                  1    wreg      void 
 11249 ;; Registers used:
 11250 ;;		wreg, status,2, status,0
 11251 ;; Tracked objects:
 11252 ;;		On entry : 0/0
 11253 ;;		On exit  : 0/0
 11254 ;;		Unchanged: 0/0
 11255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11256 ;;      Params:         1       0       0       0       0       0       0
 11257 ;;      Locals:         1       0       0       0       0       0       0
 11258 ;;      Temps:          0       0       0       0       0       0       0
 11259 ;;      Totals:         2       0       0       0       0       0       0
 11260 ;;Total ram usage:        2 bytes
 11261 ;; Hardware stack levels used:    1
 11262 ;; This function calls:
 11263 ;;		Nothing
 11264 ;; This function is called by:
 11265 ;;		_main
 11266 ;; This function uses a non-reentrant model
 11267 ;;
 11268                           
 11269                           	psect	text26
 11270  004668                     __ptext26:
 11271                           	opt stack 0
 11272  004668                     _MyOpenI2C:
 11273                           	opt stack 30
 11274                           
 11275                           ;incstack = 0
 11276                           ;MyOpenI2C@sync_mode stored from wreg
 11277  004668  6E44               	movwf	MyOpenI2C@sync_mode,c
 11278                           
 11279                           ;newmain.c: 1186: SSPSTAT &= 0x3F;
 11280  00466A  0E3F               	movlw	63
 11281  00466C  16C7               	andwf	4039,f,c	;volatile
 11282                           
 11283                           ;newmain.c: 1187: SSPCON1 = 0x00;
 11284  00466E  0E00               	movlw	0
 11285  004670  6EC6               	movwf	4038,c	;volatile
 11286                           
 11287                           ;newmain.c: 1188: SSPCON2 = 0x00;
 11288  004672  0E00               	movlw	0
 11289  004674  6EC5               	movwf	4037,c	;volatile
 11290                           
 11291                           ;newmain.c: 1189: SSPCON1 |= sync_mode;
 11292  004676  5044               	movf	MyOpenI2C@sync_mode,w,c
 11293  004678  12C6               	iorwf	4038,f,c	;volatile
 11294                           
 11295                           ;newmain.c: 1190: SSPSTAT |= slew;
 11296  00467A  5043               	movf	MyOpenI2C@slew,w,c
 11297  00467C  12C7               	iorwf	4039,f,c	;volatile
 11298                           
 11299                           ;newmain.c: 1192: TRISCbits.TRISC3 = 1;
 11300  00467E  8694               	bsf	3988,3,c	;volatile
 11301                           
 11302                           ;newmain.c: 1193: TRISCbits.TRISC4 = 1;
 11303  004680  8894               	bsf	3988,4,c	;volatile
 11304                           
 11305                           ;newmain.c: 1195: SSPCON1 |= 0b00100000;
 11306  004682  8AC6               	bsf	4038,5,c	;volatile
 11307  004684  0012               	return		;funcret
 11308  004686                     __end_of_MyOpenI2C:
 11309                           	opt stack 0
 11310                           tblptru	equ	0xFF8
 11311                           tblptrh	equ	0xFF7
 11312                           tblptrl	equ	0xFF6
 11313                           tablat	equ	0xFF5
 11314                           prodh	equ	0xFF4
 11315                           prodl	equ	0xFF3
 11316                           postinc0	equ	0xFEE
 11317                           wreg	equ	0xFE8
 11318                           postinc1	equ	0xFE6
 11319                           fsr1h	equ	0xFE2
 11320                           fsr1l	equ	0xFE1
 11321                           indf2	equ	0xFDF
 11322                           postinc2	equ	0xFDE
 11323                           postdec2	equ	0xFDD
 11324                           fsr2h	equ	0xFDA
 11325                           fsr2l	equ	0xFD9
 11326                           status	equ	0xFD8
 11327                           
 11328 ;; *************** function _MyCloseI2C *****************
 11329 ;; Defined at:
 11330 ;;		line 1103 in file "newmain.c"
 11331 ;; Parameters:    Size  Location     Type
 11332 ;;		None
 11333 ;; Auto vars:     Size  Location     Type
 11334 ;;		None
 11335 ;; Return value:  Size  Location     Type
 11336 ;;                  1    wreg      void 
 11337 ;; Registers used:
 11338 ;;		status,2, status,0
 11339 ;; Tracked objects:
 11340 ;;		On entry : 0/0
 11341 ;;		On exit  : 0/0
 11342 ;;		Unchanged: 0/0
 11343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11344 ;;      Params:         0       0       0       0       0       0       0
 11345 ;;      Locals:         0       0       0       0       0       0       0
 11346 ;;      Temps:          0       0       0       0       0       0       0
 11347 ;;      Totals:         0       0       0       0       0       0       0
 11348 ;;Total ram usage:        0 bytes
 11349 ;; Hardware stack levels used:    1
 11350 ;; This function calls:
 11351 ;;		Nothing
 11352 ;; This function is called by:
 11353 ;;		_main
 11354 ;; This function uses a non-reentrant model
 11355 ;;
 11356                           
 11357                           	psect	text27
 11358  004628                     __ptext27:
 11359                           	opt stack 0
 11360  004628                     _MyCloseI2C:
 11361                           	opt stack 30
 11362                           
 11363                           ;newmain.c: 1105: SSPCON1 &= 0xDF;
 11364                           
 11365                           ;incstack = 0
 11366  004628  9AC6               	bcf	4038,5,c	;volatile
 11367  00462A  0012               	return		;funcret
 11368  00462C                     __end_of_MyCloseI2C:
 11369                           	opt stack 0
 11370                           tblptru	equ	0xFF8
 11371                           tblptrh	equ	0xFF7
 11372                           tblptrl	equ	0xFF6
 11373                           tablat	equ	0xFF5
 11374                           prodh	equ	0xFF4
 11375                           prodl	equ	0xFF3
 11376                           postinc0	equ	0xFEE
 11377                           wreg	equ	0xFE8
 11378                           postinc1	equ	0xFE6
 11379                           fsr1h	equ	0xFE2
 11380                           fsr1l	equ	0xFE1
 11381                           indf2	equ	0xFDF
 11382                           postinc2	equ	0xFDE
 11383                           postdec2	equ	0xFDD
 11384                           fsr2h	equ	0xFDA
 11385                           fsr2l	equ	0xFD9
 11386                           status	equ	0xFD8
 11387                           tblptru	equ	0xFF8
 11388                           tblptrh	equ	0xFF7
 11389                           tblptrl	equ	0xFF6
 11390                           tablat	equ	0xFF5
 11391                           prodh	equ	0xFF4
 11392                           prodl	equ	0xFF3
 11393                           postinc0	equ	0xFEE
 11394                           wreg	equ	0xFE8
 11395                           postinc1	equ	0xFE6
 11396                           fsr1h	equ	0xFE2
 11397                           fsr1l	equ	0xFE1
 11398                           indf2	equ	0xFDF
 11399                           postinc2	equ	0xFDE
 11400                           postdec2	equ	0xFDD
 11401                           fsr2h	equ	0xFDA
 11402                           fsr2l	equ	0xFD9
 11403                           status	equ	0xFD8
 11404                           
 11405                           	psect	rparam
 11406  0000                     tblptru	equ	0xFF8
 11407                           tblptrh	equ	0xFF7
 11408                           tblptrl	equ	0xFF6
 11409                           tablat	equ	0xFF5
 11410                           prodh	equ	0xFF4
 11411                           prodl	equ	0xFF3
 11412                           postinc0	equ	0xFEE
 11413                           wreg	equ	0xFE8
 11414                           postinc1	equ	0xFE6
 11415                           fsr1h	equ	0xFE2
 11416                           fsr1l	equ	0xFE1
 11417                           indf2	equ	0xFDF
 11418                           postinc2	equ	0xFDE
 11419                           postdec2	equ	0xFDD
 11420                           fsr2h	equ	0xFDA
 11421                           fsr2l	equ	0xFD9
 11422                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1538
    Data        0
    BSS         182
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     53     119
    BANK0           128      0     116
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(2) Largest target is 116
		 -> matrices(BANK0[116]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 116
		 -> matrices(BANK0[116]), 

    memcpy@s1	PTR const void  size(2) Largest target is 116
		 -> matrices.keys(BANK0[6]), matrices(BANK0[116]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 116
		 -> matrices.keys(BANK0[6]), matrices(BANK0[116]), 

    MygetsI2C@rdptr	PTR unsigned char  size(2) Largest target is 116
		 -> matrices(BANK0[116]), 

    sp__memcpy	PTR void  size(2) Largest target is 116
		 -> matrices(BANK0[116]), 


Critical Paths under _main in COMRAM

    _main->_animation2
    _was_key_pressed->___wmul
    _read_switch->_memcpy
    _memcpy->___wmul
    _MygetsI2C->___wmul
    _is_key_pressed->___wmul
    _animation7->_clr_led
    _animation6->_clr_led
    _animation5->_clr_led
    _animation4->_clr_led
    _animation3->_clr_led
    _animation2->_clr_led
    _animation1->_clr_led
    _animation0->_clr_led
    _write_display->___wmul
    _write_display->_write
    _write->_MyWriteI2C
    _MyWriteI2C->_MyIdleI2C
    _set_led->___wmul
    _clr_led->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0  330278
                                             38 COMRAM    15    15      0
                         _MyCloseI2C
                          _MyIdleI2C
                          _MyOpenI2C
                         _MyStartI2C
                          _MyStopI2C
                            ___awdiv
                             ___wmul
                         _animation0
                         _animation1
                         _animation2
                         _animation3
                         _animation4
                         _animation5
                         _animation6
                         _animation7
                            _clr_led
                     _is_key_pressed
                        _read_switch
                            _set_led
                    _was_key_pressed
                              _write
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _was_key_pressed                                     13    13      0    9239
                                              6 COMRAM    13    13      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _read_switch                                         14    14      0   10098
                                             17 COMRAM    14    14      0
                          _MyIdleI2C
                        _MyNotAckI2C
                         _MyStartI2C
                          _MyStopI2C
                          _MygetsI2C
                             ___wmul
                             _memcpy
                              _write
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6     371
                                              6 COMRAM    11     5      6
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _MygetsI2C                                            3     0      3     219
                                              6 COMRAM     3     0      3
                          _MyReadI2C
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _MyReadI2C                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MyNotAckI2C                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _is_key_pressed                                      13    13      0    9239
                                              6 COMRAM    13    13      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _animation7                                           7     7      0   38277
                                             21 COMRAM     7     7      0
                             ___wmul
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation6                                          15    14      1   28644
                                             21 COMRAM    15    14      1
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation5                                           8     6      2   29305
                                             21 COMRAM     8     6      2
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation4                                           6     5      1   29364
                                             21 COMRAM     6     5      1
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation3                                           9     9      0   38685
                                             21 COMRAM     9     9      0
                             ___wmul
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation2                                          17    15      2   39177
                                             21 COMRAM    17    15      2
                             ___wmul
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation1                                           8     7      1   28469
                                             21 COMRAM     8     7      1
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation0                                           9     8      1   28870
                                             21 COMRAM     9     8      1
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _write_display                                       10    10      0    9420
                                              6 COMRAM    10    10      0
                          _MyIdleI2C
                         _MyStartI2C
                          _MyStopI2C
                             ___wmul
                              _write
 ---------------------------------------------------------------------------------
 (2) _write                                                4     4      0      91
                                              2 COMRAM     4     4      0
                         _MyWriteI2C
 ---------------------------------------------------------------------------------
 (3) _MyWriteI2C                                           1     1      0      22
                                              1 COMRAM     1     1      0
                          _MyIdleI2C
 ---------------------------------------------------------------------------------
 (4) _MyIdleI2C                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MyStopI2C                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MyStartI2C                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_led                                             13    13      0    9239
                                              6 COMRAM    13    13      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _clr_led                                             15    15      0    9239
                                              6 COMRAM    15    15      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    9127
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1060
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _MyOpenI2C                                            2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _MyCloseI2C                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MyCloseI2C
   _MyIdleI2C
   _MyOpenI2C
   _MyStartI2C
   _MyStopI2C
   ___awdiv
   ___wmul
   _animation0
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation1
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation2
     ___wmul
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation3
     ___wmul
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation4
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation5
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation6
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation7
     ___wmul
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _clr_led
     ___wmul
   _is_key_pressed
     ___wmul
   _read_switch
     _MyIdleI2C
     _MyNotAckI2C
     _MyStartI2C
     _MyStopI2C
     _MygetsI2C
       _MyReadI2C
       ___wmul (ARG)
     ___wmul
     _memcpy
       ___wmul (ARG)
     _write
       _MyWriteI2C
         _MyIdleI2C
   _set_led
     ___wmul
   _was_key_pressed
     ___wmul
   _write
     _MyWriteI2C
       _MyIdleI2C
   _write_display
     _MyIdleI2C
     _MyStartI2C
     _MyStopI2C
     ___wmul
     _write
       _MyWriteI2C
         _MyIdleI2C

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      74       4       90.6%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     35      77       1       93.7%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EB      14        0.0%
DATA                 0      0      EB      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Jan 03 23:01:17 2018

    is_key_pressed@matrix 0051               _SSPSTATbits 000FC7              ___awdiv@sign 0048  
     ___wmul@multiplicand 0045               __CFG_BORV$3 000000              __CFG_CP0$OFF 000000  
            __CFG_CP1$OFF 000000              __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000  
                     l211 535E                       l212 5354                       l125 46D4  
                     l221 544A                       l213 530C                       l301 705E  
                     l141 6A44                       l133 68E8                       l126 46F2  
                     l222 5440                       l206 52FA                       l302 7090  
                     l231 54CC                       l223 53F8                       l207 52C8  
                     l311 71E4                       l151 6B24                       l143 6A6A  
                     l135 69A2                       l232 54F0                       l216 53E6  
                     l208 5280                       l240 4C72                       l312 7216  
                     l304 7116                       l400 563C                       l160 6BF6  
                     l217 53B4                       l321 7360                       l153 6B7A  
                     l137 69BA                       l234 5552                       l218 536C  
                     l242 4CFA                       l322 7392                       l306 72AA  
                     l314 7290                       l402 56E6                       l162 6C28  
                     l154 6BB6                       l146 6A9A                       l227 545E  
                     l243 4D1E                       l251 61EE                       l331 74CC  
                     l307 7152                       l411 57A8                       l403 5662  
                     l171 6CF8                       l155 6BA6                       l139 6A34  
                     l260 6360                       l340 7668                       l332 74FE  
                     l316 7426                       l324 740C                       l420 586A  
                     l412 5724                       l180 6DC2                       l164 6C42  
                     l148 6AEE                       l229 546A                       l245 4DA6  
                     l253 6262                       l317 72CE                       l309 716A  
                     l421 57E6                       l405 56C2                       l501 4F80  
                     l173 6D46                       l157 6D10                       l149 6B0C  
                     l238 4C66                       l270 64E4                       l254 6400  
                     l262 63E6                       l342 76E2                       l334 7578  
                     l414 5784                       l430 5096                       l190 6F6A  
                     l166 6C7A                       l158 6BDC                       l255 6290  
                     l335 75A6                       l319 72E6                       l343 76FA  
                     l351 5902                       l423 5846                       l431 50EC  
                     l191 6EEE                       l183 6E44                       l175 6D82  
                     l167 6C98                       l520 479C                       l280 666E  
                     l264 657C                       l272 656A                       l352 5924  
                     l408 57AC                       l432 511C                       l257 62A8  
                     l249 61D6                       l337 75BE                       l329 7452  
                     l361 5A12                       l409 56FE                       l433 5158  
                     l193 6F06                       l177 6E58                       l169 6CB0  
                     l290 67F4                       l274 670E                       l282 66F4  
                     l362 5A36                       l346 5992                       l354 5986  
                     l418 57C0                       l450 6020                       l442 5D84  
                     l186 6E8A                       l178 6DAA                       l523 47C4  
                     l275 65A0                       l267 642E                       l259 632E  
                     l339 7638                       l371 5B26                       l347 5894  
                     l451 5EC0                       l195 6F52                       l292 687A  
                     l372 5B4A                       l356 5AA4                       l364 5A98  
                     l428 504C                       l444 5D9C                       l188 6EC6  
                     l525 47B2                       l277 65B8                       l269 64B4  
                     l381 5C3A                       l357 59A4                       l349 58A0  
                     l453 5ED8                       l197 6F80                       l382 5C5C  
                     l366 5BB8                       l374 5BAC                       l390 562A  
                     l446 5E16                       l527 47C0                       l287 673E  
                     l279 663E                       l367 5AB8                       l359 59B0  
                     l391 557E                       l463 604C                       l455 5F52  
                     l439 5E9C                       l447 5E46                       l199 6F8A  
                     l536 47E8                       l472 4B34                       l296 7130  
                     l384 5CBE                       l456 5F84                       l560 4742  
                     l289 67C4                       l297 6FC0                       l377 5BCC  
                     l369 5AC4                       l393 5626                       l465 60C6  
                     l474 4B8C                       l394 55A4                       l466 60F8  
                     l458 5FFE                       l562 4754                       l299 6FD8  
                     l379 5BD8                       l571 477E                       l476 4C4A  
                     l396 5602                       l468 6172                       l564 4760  
                     l494 4DCE                       l399 56EA                       l760 4826  
                     l497 4EA6                       l763 484E                       l579 4660  
                     l499 4EFC                       l764 4858                       l756 4800  
                     l765 4866                       l757 4810                       l759 482E  
            __CFG_CPB$OFF 000000              __CFG_CPD$OFF 000000                       prod 000FF3  
                     wreg 000FE8              __CFG_IESO$ON 000000              __CFG_LVP$OFF 000000  
            __CFG_WDT$OFF 000000                      l1016 472E                      l1017 470E  
                    l4000 599C                      l3140 46F2                      l4006 59A8  
                    l3310 4F86                      l3400 5456                      l4024 5A2E  
                    l3208 470E                      l3314 4F94                      l4116 5C54  
                    l4052 5ABC                      l4220 56F6                      l3406 5462  
                    l3502 61DE                      l4070 5B42                      l4046 5AB0  
                    l3424 54E8                      l4152 559C                      l4144 5576  
                    l3186 4B7C                      l3450 4C6A                      l3610 6570  
                    l3514 6268                      l4306 5044                      l3196 4C38  
                    l3444 4C5E                      l4092 5BC4                      l4228 571C  
                    l4412 5E36                      l3470 4D16                      l3542 6334  
                    l3518 626E                      l4190 565A                      l4182 5634  
                    l4326 5158                      l4318 50EC                      l4422 5E88  
                    l4406 5E1C                      l3640 6644                      l3528 6298  
                    l4504 60E8                      l3296 4EEC                      l3626 65A8  
                    l3562 63EC                      l3802 7296                      l4098 5BD0  
                    l4266 57DE                      l4258 57B8                      l4450 5F58  
                    l3708 6880                      l3660 66FA                      l3548 6350  
                    l4516 6178                      l3646 665E                      l3590 64BA  
                    l3830 7366                      l3726 6FC8                      l4438 5EC8  
                    l4710 6B80                      l4630 69AA                      l4622 6976  
                    l3576 641E                      l3496 61C6                      l3920 763E  
                    l3744 7080                      l4480 6030                      l4456 5F74  
                    l4800 6D04                      l4640 6A02                      l4624 6992  
                    l3674 672E                      l3818 72D6                      l3738 7064  
                    l4474 6016                      l4394 5D8C                      l4714 6B86  
                    l4650 6A24                      l3596 64D4                      l3908 75AE  
                    l3836 7382                      l3772 715A                      l3756 711C  
                    l4468 6004                      l4900 6F5E                      l4660 6A40  
                    l4644 6A08                      l3694 67E4                      l3926 7658  
                    l3790 7206                      l4486 603C                      l4718 6B96  
                    l3688 67CA                      l3864 7442                      l3848 7412  
                    l3784 71EA                      l3960 5898                      l4736 6BCC  
                    l4728 6BB2                      l4584 68D8                      l3938 76E8  
                    l3882 74EE                      l3858 7436                      l3954 588C  
                    l4498 60CC                      l4834 6DB2                      l4690 6AF4  
                    l3876 74D2                      l4852 6E50                      l4828 6D9A  
                    l4692 6AFC                      l4668 6A62                      l3894 757E  
                    l4782 6CA0                      l4774 6C80                      l4678 6A8A  
                    l4848 6E4A                      l4776 6C88                      l3978 591C  
                    l4698 6B14                      l4884 6EF6                      l4796 6CFE  
                    l4878 6EDE                      l4896 6F58                      u4020 6268  
                    u4110 63EC                      u4030 626E                      u4200 6570  
                    u4120 63FE                      u5000 5A9C                      u4050 628E  
                    u4300 670C                      u3500 465E                      u4230 659E  
                    u3440 47D8                      u4080 6334                      u3530 4B32  
                    u4170 64BA                      u4410 6FBE                      u3524 49FC  
                    u4260 6644                      u4500 7150                      u5060 5B2A  
                    u3620 4774                      u3700 4F86                      u6020 6976  
                    u3525 49F6                      u3550 4C38                      u4350 67CA  
                    u5150 5C3E                      u3710 4F94                      u4440 7064  
                    u5320 56E0                      u3640 4782                      u6200 6B86  
                    u4290 66FA                      u4530 71EA                      u5090 5BB0  
                    u5250 5620                      u6050 6A02                      u4380 6880  
                    u4620 7366                      u5180 5CC2                      u5500 50A6  
                    u3724 4908                      u3660 4DCC                      u6060 6A08  
                    u3725 4904                      u3574 4AAA                      u4710 74D2  
                    u4470 711C                      u5190 5CCA                      u3734 49AA  
                    u6310 6C80                      u6230 6BB2                      u6150 6AF4  
                    u3575 4AA4                      u3735 49A6                      u4560 7296  
                    u4480 712E                      u5520 512C                      u6080 6A40  
                    u4650 7412                      u4570 72A8                      u3860 54D0  
                    u3940 4CFE                      u4820 76E8                      u4740 757E  
                    u4660 7424                      u5460 5864                      u5700 5D82  
                    u4750 758A                      u4590 72CC                      u4910 598A  
                    u5390 57A2                      u6350 6CFE                      u6190 6B80  
                    u4760 75A4                      u6360 6D04                      u3890 5556  
                    u3970 4DAA                      u5810 5F58                      u5730 5E1C  
                    u5900 60CC                      u6620 6F84                      u4790 763E  
                    u5750 5E88                      u6470 6E4A                      u4880 5906  
                    u5840 6004                      u5760 5E9A                      u6480 6E50  
                    u4970 5A16                      u5930 6178                      u5850 6016  
                    u5690 5D68                      u6707 6A12                      u5940 6184  
                    u5780 5EBE                      u6580 6F58                      u6717 6A4A  
                    u6590 6F5E                      u6807 5C48                      u6727 5E26  
                    u6817 706E                      u6737 5F62                      u6907 4D08  
                    u6827 71F4                      u6747 60D6                      u5980 4832  
                    u6917 52A2                      u6837 7370                      u6757 5004  
                    u6927 532E                      u6847 74DC                      u6767 5162  
                    u6937 538E                      u6857 7648                      u6777 5910  
                    u6697 68CA                      u6947 541A                      u6867 633E  
                    u6787 5A20                      u6957 54DA                      u6877 64C4  
                    u6797 5B34                      u6887 664E                      u6897 67D4  
            __CFG_WDTPS$1 000000  __size_of_was_key_pressed 00A2                      _main 688C  
                    _temp 0001                      fsr2h 000FDA                      indf2 000FDF  
                    fsr1l 000FE1                      fsr2l 000FD9                      prodh 000FF4  
                    prodl 000FF3                      start 0002             __CFG_MCLRE$ON 000000  
            ___param_bank 000000           __end_of_Buttons 7C39                     ?_main 0043  
         __end_of___awdiv 4870           ___awdiv@divisor 0045           ___awdiv@counter 0047  
           __CFG_PWRT$OFF 000000             __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000  
           __CFG_WRT2$OFF 000000             __CFG_WRT3$OFF 000000            __CFG_EBTR0$OFF 000000  
          __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000  
         __end_of_clr_led 4B18            __CFG_EBTR3$OFF 000000            write_display@i 0051  
          write_display@j 004F             __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000  
           __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000                     _arrow 76FD  
                   _count 0041                     _show5 7B39              ?_read_switch 0043  
                   main@h 0075                     main@i 0076                     main@j 0073  
                   main@m 0072                     main@n 006F                     _write 46CE  
         __end_of_show0_1 7CB3           __end_of_show0_2 7C8B           __end_of_show0_3 794D  
         __end_of_show3_1 7B39           __end_of_show3_2 7C63           __end_of_show3_3 7CDF  
         __end_of_show4_1 7BF9           __end_of_show4_2 7AE9           __end_of_show4_3 7A89  
         __end_of_show4_4 7BB9           __end_of_show7_1 79C1           __end_of_show7_2 78D5  
           ??_MyNotAckI2C 0043           __end_of_set_led 4A62                     tablat 000FF5  
                   status 000FD8            __CFG_PBADEN$ON 000000           __initialization 4686  
            __end_of_main 6F8C                _MyCloseI2C 4628            MygetsI2C@rdptr 0049  
                  ??_main 0069             __activetblptr 000002          ___awdiv@dividend 0043  
              _MyStartI2C 462C                    ?_write 0043                _MyWriteI2C 478E  
      __size_of_MyIdleI2C 0012                    _SSPADD 000FC8                    _SSPBUF 000FC9  
      __size_of_MyReadI2C 001C       __end_of_MyNotAckI2C 463A            __CFG_XINST$OFF 000000  
      __size_of_MyOpenI2C 001E         ??_was_key_pressed 0049                    ___wmul 46A8  
               ??___awdiv 0047            __CFG_STVREN$ON 000000        __size_of_MyStopI2C 0004  
                  _ledLUT 7CEF                    _circle 79C1                    _memcpy 46FC  
                  clear_0 468C                    clear_1 4698          ___awdiv@quotient 0049  
               ??_clr_led 0049        __size_of_MygetsI2C 004E              __mediumconst 76FC  
                  tblptrh 000FF7                    tblptrl 000FF6                 ??_set_led 0049  
                  tblptru 000FF8                __accesstop 0080   __end_of__initialization 469E  
           main@sync_mode 006D             ___rparam_used 000001            __pcstackCOMRAM 0043  
             ?_MyCloseI2C 0043             __end_of_arrow 77FD             __end_of_show5 7B79  
           __end_of_write 46FC         __end_of_MyIdleI2C 464C    __size_of_write_display 0134  
         MygetsI2C@length 004B         __end_of_MyReadI2C 4668         __end_of_MyOpenI2C 4686  
       __end_of_MyStopI2C 4634               ?_MyStartI2C 0043                   ??_write 0045  
              __pbssBANK0 0080               _MyNotAckI2C 4634               ?_MyWriteI2C 0043  
    __size_of_read_switch 01E6         __end_of_MygetsI2C 478E                   ?___wmul 0043  
              _animation0 526A                _animation1 4C4C                _animation2 618E  
              _animation3 6F8C                _animation4 586E                _animation5 555E  
              _animation6 4F98                _animation7 5CD6           is_key_pressed@k 0055  
                 ?_memcpy 0049   __size_of_is_key_pressed 00A2                   _SSPCON1 000FC6  
                 _SSPCON2 000FC5         is_key_pressed@led 0053                   _SSPSTAT 000FC7  
     __size_of_MyCloseI2C 0004             _write_display 4B18                   _Buttons 7BF9  
                 __Hparam 0000                   __Lparam 0000                   ___awdiv 47EC  
         __size_of___wmul 0026       __size_of_MyStartI2C 0004                   __pcinit 4686  
         __size_of_memcpy 0044                   __ramtop 0600                   __ptext0 688C  
                 __ptext1 4912                   __ptext2 4DB2                   __ptext3 46FC  
                 __ptext4 4740                   __ptext5 464C                   __ptext6 4634  
                 __ptext7 4870                   __ptext8 5CD6                   __ptext9 4F98  
                 _clr_led 4A62       __size_of_MyWriteI2C 005E        MyWriteI2C@data_out 0044  
       __end_of_buttonLUT 7CEF                   _show0_1 7C8B                   _show0_2 7C63  
                 _show0_3 78D5                   _show3_1 7AE9                   _show3_2 7C39  
                 _show3_3 7CCB                   _show4_1 7BB9                   _show4_2 7A89  
                 _show4_3 7A29                   _show4_4 7B79                   _show7_1 794D  
                 _show7_2 77FD                   _set_led 49B4           _was_key_pressed 4912  
    end_of_initialization 469E                   memcpy@d 004F                   memcpy@n 004D  
                 memcpy@s 0051             __Lmediumconst 76FC            ?_write_display 0043  
                 postdec2 000FDD                   postinc0 000FEE                   postinc1 000FE6  
                 postinc2 000FDE               ?_animation0 0058               ?_animation1 0058  
             ?_animation2 0058               ?_animation3 0043               ?_animation4 0058  
             ?_animation5 0058               ?_animation6 0058               ?_animation7 0043  
              clr_led@led 0055                 _TRISCbits 000F94              read_switch@i 005E  
            read_switch@j 0060                main@column 0071              ??_MyCloseI2C 0043  
          __end_of___wmul 46CE            __end_of_ledLUT 7CFF            __end_of_circle 7A29  
        _horizental_flash 7CB3            __end_of_memcpy 4740   __end_of_was_key_pressed 49B4  
     start_initialization 4686            _is_key_pressed 4870                 _MyIdleI2C 463A  
               _MyReadI2C 464C              ??_MyStartI2C 0043       __size_of_animation0 02F4  
     __size_of_animation1 0166       __size_of_animation2 06FE       __size_of_animation3 0770  
     __size_of_animation4 0468       __size_of_animation5 0310       __size_of_animation6 02D2  
         ??_write_display 0049       __size_of_animation7 04B8                 _MyOpenI2C 4668  
      __end_of_MyCloseI2C 462C              ?_MyNotAckI2C 0043              ??_MyWriteI2C 0044  
        __CFG_OSC$INTIO67 000000                 _MyStopI2C 4630                 _MygetsI2C 4740  
                ??___wmul 0047          __CFG_LPT1OSC$OFF 000000                  ??_memcpy 004F  
      __end_of_MyStartI2C 4630    __end_of_is_key_pressed 4912        __end_of_MyWriteI2C 47EC  
             __pbssCOMRAM 0001        MyOpenI2C@sync_mode 0044                ?_MyIdleI2C 0043  
              ?_MyReadI2C 0043             ??_read_switch 0054                ?_MyOpenI2C 0043  
              ?_MyStopI2C 0043         __CFG_CCP2MX$PORTC 000000                ?_MygetsI2C 0049  
           __pmediumconst 76FC                  ?___awdiv 0043             set_led@matrix 0051  
                ?_clr_led 0043           ?_is_key_pressed 0043          ?_was_key_pressed 0043  
                ?_set_led 0043                 _buttonLUT 7CDF                set_led@led 0053  
          __size_of_write 002E            ___wmul@product 0047        was_key_pressed@led 0053  
                _IPR1bits 000F9F                  _PIE1bits 000F9D       __end_of_read_switch 4F98  
           animation2@col 005E             animation2@row 0061                  _PIR1bits 000F9E  
                _PIR2bits 000FA1                  _RCONbits 000FD0               write@status 0047  
            ??_animation0 0059              ??_animation1 0059              ??_animation2 005A  
            ??_animation3 0058              ??_animation4 0059              ??_animation5 005A  
            ??_animation6 0059              ??_animation7 0058         ___wmul@multiplier 0043  
             ??_MyIdleI2C 0043               ??_MyReadI2C 0043               ??_MyOpenI2C 0044  
      __end_of_animation0 555E        __end_of_animation1 4DB2        __end_of_animation2 688C  
      __end_of_animation3 76FC        __end_of_animation4 5CD6        __end_of_animation5 586E  
      __end_of_animation6 526A        __end_of_animation7 618E  __end_of_horizental_flash 7CCB  
             ??_MyStopI2C 0043     was_key_pressed@matrix 0051      __size_of_MyNotAckI2C 0006  
                __Hrparam 0000                 memcpy@tmp 0053             MyOpenI2C@slew 0043  
                __Lrparam 0000        __CFG_BOREN$SBORDIS 000000               ??_MygetsI2C 004C  
        __size_of___awdiv 0084          __size_of_clr_led 00B6                  __ptext10 555E  
                __ptext11 586E                  __ptext20 4630                  __ptext12 6F8C  
                __ptext21 462C                  __ptext13 618E                  __ptext22 49B4  
                __ptext14 4C4C                  __ptext23 4A62                  __ptext15 526A  
                __ptext24 46A8                  __ptext16 4B18                  __ptext25 47EC  
                __ptext17 46CE                  __ptext26 4668                  __ptext18 478E  
                __ptext27 4628                  __ptext19 463A          __size_of_set_led 00AE  
             _read_switch 4DB2             __size_of_main 0700                  _matrices 0080  
         main@rightbutton 0070                  clr_led@i 0057                  main@slew 006E  
              _INTCONbits 000FF2                  memcpy@d1 0049                  memcpy@s1 004B  
           write@data_out 0046     __end_of_write_display 4C4C             clr_led@matrix 0053  
                set_led@i 0055                _OSCCONbits 000FD3          was_key_pressed@k 0055  
               write@data 0045               animation0@i 0060               animation0@j 005F  
             animation1@i 005E               animation0@m 005E               animation1@j 005F  
             animation0@n 0058               animation2@h 0059               animation2@i 0065  
             animation1@m 005C               animation2@j 0067               animation1@n 0058  
             animation2@m 0060               animation3@i 005D               animation3@j 005F  
             animation2@n 0058               animation4@h 0058               animation6@a 005E  
             animation4@i 005C               animation3@m 005C               animation6@b 0060  
             animation4@j 005D               animation6@c 0062               animation6@d 0064  
             animation1@x 005D               animation5@h 0059               animation5@i 005E  
             animation4@m 005B               animation5@j 005D               animation2@x 0063  
             animation5@m 005C               animation5@n 0058               animation7@h 005A  
             animation6@m 0066               animation7@i 005B               animation7@j 005D  
             animation6@n 0058               animation5@x 005F               animation6@x 005D  
        ??_is_key_pressed 0049               _SSPCON1bits 000FC6               _SSPCON2bits 000FC5  
