

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Jan 03 22:51:33 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40  0000                     
    41                           ; Version 1.44
    42                           ; Generated 14/09/2017 GMT
    43                           ; 
    44                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4520 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	mediumconst
    77  0079FC                     __pmediumconst:
    78                           	opt stack 0
    79  0079FC  00                 	db	0
    80  0079FD                     _arrow:
    81                           	opt stack 0
    82  0079FD  00                 	db	0
    83  0079FE  64                 	db	100
    84  0079FF  64                 	db	100
    85  007A00  64                 	db	100
    86  007A01  01                 	db	1
    87  007A02  04                 	db	4
    88  007A03  05                 	db	5
    89  007A04  64                 	db	100
    90  007A05  06                 	db	6
    91  007A06  09                 	db	9
    92  007A07  0A                 	db	10
    93  007A08  64                 	db	100
    94  007A09  0B                 	db	11
    95  007A0A  0E                 	db	14
    96  007A0B  0F                 	db	15
    97  007A0C  64                 	db	100
    98  007A0D  01                 	db	1
    99  007A0E  64                 	db	100
   100  007A0F  64                 	db	100
   101  007A10  64                 	db	100
   102  007A11  00                 	db	0
   103  007A12  02                 	db	2
   104  007A13  05                 	db	5
   105  007A14  64                 	db	100
   106  007A15  04                 	db	4
   107  007A16  06                 	db	6
   108  007A17  09                 	db	9
   109  007A18  64                 	db	100
   110  007A19  08                 	db	8
   111  007A1A  0A                 	db	10
   112  007A1B  0D                 	db	13
   113  007A1C  64                 	db	100
   114  007A1D  02                 	db	2
   115  007A1E  64                 	db	100
   116  007A1F  64                 	db	100
   117  007A20  64                 	db	100
   118  007A21  01                 	db	1
   119  007A22  03                 	db	3
   120  007A23  06                 	db	6
   121  007A24  64                 	db	100
   122  007A25  05                 	db	5
   123  007A26  07                 	db	7
   124  007A27  0A                 	db	10
   125  007A28  64                 	db	100
   126  007A29  09                 	db	9
   127  007A2A  0B                 	db	11
   128  007A2B  0E                 	db	14
   129  007A2C  64                 	db	100
   130  007A2D  03                 	db	3
   131  007A2E  64                 	db	100
   132  007A2F  64                 	db	100
   133  007A30  64                 	db	100
   134  007A31  02                 	db	2
   135  007A32  06                 	db	6
   136  007A33  07                 	db	7
   137  007A34  64                 	db	100
   138  007A35  05                 	db	5
   139  007A36  09                 	db	9
   140  007A37  0A                 	db	10
   141  007A38  64                 	db	100
   142  007A39  08                 	db	8
   143  007A3A  0C                 	db	12
   144  007A3B  0D                 	db	13
   145  007A3C  64                 	db	100
   146  007A3D  04                 	db	4
   147  007A3E  64                 	db	100
   148  007A3F  64                 	db	100
   149  007A40  64                 	db	100
   150  007A41  00                 	db	0
   151  007A42  05                 	db	5
   152  007A43  08                 	db	8
   153  007A44  64                 	db	100
   154  007A45  01                 	db	1
   155  007A46  06                 	db	6
   156  007A47  09                 	db	9
   157  007A48  64                 	db	100
   158  007A49  02                 	db	2
   159  007A4A  07                 	db	7
   160  007A4B  0A                 	db	10
   161  007A4C  64                 	db	100
   162  007A4D  05                 	db	5
   163  007A4E  64                 	db	100
   164  007A4F  64                 	db	100
   165  007A50  64                 	db	100
   166  007A51  01                 	db	1
   167  007A52  04                 	db	4
   168  007A53  06                 	db	6
   169  007A54  09                 	db	9
   170  007A55  07                 	db	7
   171  007A56  0D                 	db	13
   172  007A57  64                 	db	100
   173  007A58  64                 	db	100
   174  007A59  64                 	db	100
   175  007A5A  64                 	db	100
   176  007A5B  64                 	db	100
   177  007A5C  64                 	db	100
   178  007A5D  06                 	db	6
   179  007A5E  64                 	db	100
   180  007A5F  64                 	db	100
   181  007A60  64                 	db	100
   182  007A61  02                 	db	2
   183  007A62  05                 	db	5
   184  007A63  07                 	db	7
   185  007A64  0A                 	db	10
   186  007A65  04                 	db	4
   187  007A66  0E                 	db	14
   188  007A67  64                 	db	100
   189  007A68  64                 	db	100
   190  007A69  64                 	db	100
   191  007A6A  64                 	db	100
   192  007A6B  64                 	db	100
   193  007A6C  64                 	db	100
   194  007A6D  07                 	db	7
   195  007A6E  64                 	db	100
   196  007A6F  64                 	db	100
   197  007A70  64                 	db	100
   198  007A71  03                 	db	3
   199  007A72  06                 	db	6
   200  007A73  0B                 	db	11
   201  007A74  64                 	db	100
   202  007A75  02                 	db	2
   203  007A76  05                 	db	5
   204  007A77  0A                 	db	10
   205  007A78  64                 	db	100
   206  007A79  01                 	db	1
   207  007A7A  04                 	db	4
   208  007A7B  09                 	db	9
   209  007A7C  64                 	db	100
   210  007A7D  08                 	db	8
   211  007A7E  64                 	db	100
   212  007A7F  64                 	db	100
   213  007A80  64                 	db	100
   214  007A81  04                 	db	4
   215  007A82  09                 	db	9
   216  007A83  0C                 	db	12
   217  007A84  64                 	db	100
   218  007A85  05                 	db	5
   219  007A86  0A                 	db	10
   220  007A87  0D                 	db	13
   221  007A88  64                 	db	100
   222  007A89  06                 	db	6
   223  007A8A  0B                 	db	11
   224  007A8B  0E                 	db	14
   225  007A8C  64                 	db	100
   226  007A8D  09                 	db	9
   227  007A8E  64                 	db	100
   228  007A8F  64                 	db	100
   229  007A90  64                 	db	100
   230  007A91  05                 	db	5
   231  007A92  08                 	db	8
   232  007A93  0A                 	db	10
   233  007A94  0D                 	db	13
   234  007A95  01                 	db	1
   235  007A96  0B                 	db	11
   236  007A97  64                 	db	100
   237  007A98  64                 	db	100
   238  007A99  64                 	db	100
   239  007A9A  64                 	db	100
   240  007A9B  64                 	db	100
   241  007A9C  64                 	db	100
   242  007A9D  0A                 	db	10
   243  007A9E  64                 	db	100
   244  007A9F  64                 	db	100
   245  007AA0  64                 	db	100
   246  007AA1  06                 	db	6
   247  007AA2  09                 	db	9
   248  007AA3  0B                 	db	11
   249  007AA4  0E                 	db	14
   250  007AA5  02                 	db	2
   251  007AA6  08                 	db	8
   252  007AA7  64                 	db	100
   253  007AA8  64                 	db	100
   254  007AA9  64                 	db	100
   255  007AAA  64                 	db	100
   256  007AAB  64                 	db	100
   257  007AAC  64                 	db	100
   258  007AAD  0B                 	db	11
   259  007AAE  64                 	db	100
   260  007AAF  64                 	db	100
   261  007AB0  64                 	db	100
   262  007AB1  07                 	db	7
   263  007AB2  0A                 	db	10
   264  007AB3  0F                 	db	15
   265  007AB4  64                 	db	100
   266  007AB5  06                 	db	6
   267  007AB6  09                 	db	9
   268  007AB7  0E                 	db	14
   269  007AB8  64                 	db	100
   270  007AB9  05                 	db	5
   271  007ABA  08                 	db	8
   272  007ABB  0D                 	db	13
   273  007ABC  64                 	db	100
   274  007ABD  0C                 	db	12
   275  007ABE  64                 	db	100
   276  007ABF  64                 	db	100
   277  007AC0  64                 	db	100
   278  007AC1  08                 	db	8
   279  007AC2  09                 	db	9
   280  007AC3  0D                 	db	13
   281  007AC4  64                 	db	100
   282  007AC5  05                 	db	5
   283  007AC6  06                 	db	6
   284  007AC7  0A                 	db	10
   285  007AC8  64                 	db	100
   286  007AC9  02                 	db	2
   287  007ACA  03                 	db	3
   288  007ACB  07                 	db	7
   289  007ACC  64                 	db	100
   290  007ACD  0D                 	db	13
   291  007ACE  64                 	db	100
   292  007ACF  64                 	db	100
   293  007AD0  64                 	db	100
   294  007AD1  09                 	db	9
   295  007AD2  0C                 	db	12
   296  007AD3  0E                 	db	14
   297  007AD4  64                 	db	100
   298  007AD5  05                 	db	5
   299  007AD6  08                 	db	8
   300  007AD7  0A                 	db	10
   301  007AD8  64                 	db	100
   302  007AD9  01                 	db	1
   303  007ADA  04                 	db	4
   304  007ADB  06                 	db	6
   305  007ADC  64                 	db	100
   306  007ADD  0E                 	db	14
   307  007ADE  64                 	db	100
   308  007ADF  64                 	db	100
   309  007AE0  64                 	db	100
   310  007AE1  0A                 	db	10
   311  007AE2  0D                 	db	13
   312  007AE3  0F                 	db	15
   313  007AE4  64                 	db	100
   314  007AE5  06                 	db	6
   315  007AE6  09                 	db	9
   316  007AE7  0B                 	db	11
   317  007AE8  64                 	db	100
   318  007AE9  02                 	db	2
   319  007AEA  05                 	db	5
   320  007AEB  07                 	db	7
   321  007AEC  64                 	db	100
   322  007AED  0F                 	db	15
   323  007AEE  64                 	db	100
   324  007AEF  64                 	db	100
   325  007AF0  64                 	db	100
   326  007AF1  0A                 	db	10
   327  007AF2  0B                 	db	11
   328  007AF3  0E                 	db	14
   329  007AF4  64                 	db	100
   330  007AF5  05                 	db	5
   331  007AF6  06                 	db	6
   332  007AF7  09                 	db	9
   333  007AF8  64                 	db	100
   334  007AF9  00                 	db	0
   335  007AFA  01                 	db	1
   336  007AFB  04                 	db	4
   337  007AFC  64                 	db	100
   338  007AFD                     __end_of_arrow:
   339                           	opt stack 0
   340  007AFD                     _show7_2:
   341                           	opt stack 0
   342  007AFD  00                 	db	0
   343  007AFE  05                 	db	5
   344  007AFF  0A                 	db	10
   345  007B00  0F                 	db	15
   346  007B01  13                 	db	19
   347  007B02  16                 	db	22
   348  007B03  19                 	db	25
   349  007B04  1C                 	db	28
   350  007B05  23                 	db	35
   351  007B06  26                 	db	38
   352  007B07  29                 	db	41
   353  007B08  2C                 	db	44
   354  007B09  30                 	db	48
   355  007B0A  35                 	db	53
   356  007B0B  3A                 	db	58
   357  007B0C  3F                 	db	63
   358  007B0D  64                 	db	100
   359  007B0E  64                 	db	100
   360  007B0F  64                 	db	100
   361  007B10  64                 	db	100
   362  007B11  64                 	db	100
   363  007B12  64                 	db	100
   364  007B13  64                 	db	100
   365  007B14  64                 	db	100
   366  007B15  04                 	db	4
   367  007B16  09                 	db	9
   368  007B17  0E                 	db	14
   369  007B18  23                 	db	35
   370  007B19  30                 	db	48
   371  007B1A  27                 	db	39
   372  007B1B  2A                 	db	42
   373  007B1C  2D                 	db	45
   374  007B1D  1C                 	db	28
   375  007B1E  31                 	db	49
   376  007B1F  36                 	db	54
   377  007B20  3B                 	db	59
   378  007B21  0F                 	db	15
   379  007B22  18                 	db	24
   380  007B23  15                 	db	21
   381  007B24  12                 	db	18
   382  007B25  64                 	db	100
   383  007B26  64                 	db	100
   384  007B27  64                 	db	100
   385  007B28  64                 	db	100
   386  007B29  64                 	db	100
   387  007B2A  64                 	db	100
   388  007B2B  64                 	db	100
   389  007B2C  64                 	db	100
   390  007B2D  03                 	db	3
   391  007B2E  10                 	db	16
   392  007B2F  06                 	db	6
   393  007B30  07                 	db	7
   394  007B31  0A                 	db	10
   395  007B32  0B                 	db	11
   396  007B33  0C                 	db	12
   397  007B34  20                 	db	32
   398  007B35  21                 	db	33
   399  007B36  25                 	db	37
   400  007B37  22                 	db	34
   401  007B38  26                 	db	38
   402  007B39  2F                 	db	47
   403  007B3A  3C                 	db	60
   404  007B3B  38                 	db	56
   405  007B3C  39                 	db	57
   406  007B3D  34                 	db	52
   407  007B3E  35                 	db	53
   408  007B3F  1F                 	db	31
   409  007B40  33                 	db	51
   410  007B41  1A                 	db	26
   411  007B42  1E                 	db	30
   412  007B43  19                 	db	25
   413  007B44  1D                 	db	29
   414  007B45  03                 	db	3
   415  007B46  10                 	db	16
   416  007B47  06                 	db	6
   417  007B48  07                 	db	7
   418  007B49  0A                 	db	10
   419  007B4A  0C                 	db	12
   420  007B4B  20                 	db	32
   421  007B4C  21                 	db	33
   422  007B4D  25                 	db	37
   423  007B4E  26                 	db	38
   424  007B4F  2F                 	db	47
   425  007B50  3C                 	db	60
   426  007B51  38                 	db	56
   427  007B52  39                 	db	57
   428  007B53  35                 	db	53
   429  007B54  1F                 	db	31
   430  007B55  33                 	db	51
   431  007B56  1E                 	db	30
   432  007B57  19                 	db	25
   433  007B58  1A                 	db	26
   434  007B59  0F                 	db	15
   435  007B5A  1C                 	db	28
   436  007B5B  23                 	db	35
   437  007B5C  30                 	db	48
   438  007B5D  02                 	db	2
   439  007B5E  03                 	db	3
   440  007B5F  05                 	db	5
   441  007B60  06                 	db	6
   442  007B61  0B                 	db	11
   443  007B62  18                 	db	24
   444  007B63  20                 	db	32
   445  007B64  24                 	db	36
   446  007B65  25                 	db	37
   447  007B66  29                 	db	41
   448  007B67  0E                 	db	14
   449  007B68  22                 	db	34
   450  007B69  3C                 	db	60
   451  007B6A  3D                 	db	61
   452  007B6B  39                 	db	57
   453  007B6C  3A                 	db	58
   454  007B6D  34                 	db	52
   455  007B6E  27                 	db	39
   456  007B6F  1B                 	db	27
   457  007B70  1F                 	db	31
   458  007B71  16                 	db	22
   459  007B72  1A                 	db	26
   460  007B73  1D                 	db	29
   461  007B74  31                 	db	49
   462  007B75  00                 	db	0
   463  007B76  01                 	db	1
   464  007B77  05                 	db	5
   465  007B78  06                 	db	6
   466  007B79  0A                 	db	10
   467  007B7A  13                 	db	19
   468  007B7B  17                 	db	23
   469  007B7C  16                 	db	22
   470  007B7D  1A                 	db	26
   471  007B7E  19                 	db	25
   472  007B7F  28                 	db	40
   473  007B80  2C                 	db	44
   474  007B81  25                 	db	37
   475  007B82  29                 	db	41
   476  007B83  26                 	db	38
   477  007B84  3E                 	db	62
   478  007B85  3F                 	db	63
   479  007B86  39                 	db	57
   480  007B87  3A                 	db	58
   481  007B88  35                 	db	53
   482  007B89  64                 	db	100
   483  007B8A  64                 	db	100
   484  007B8B  64                 	db	100
   485  007B8C  64                 	db	100
   486  007B8D  00                 	db	0
   487  007B8E  01                 	db	1
   488  007B8F  06                 	db	6
   489  007B90  28                 	db	40
   490  007B91  2C                 	db	44
   491  007B92  25                 	db	37
   492  007B93  39                 	db	57
   493  007B94  3E                 	db	62
   494  007B95  3F                 	db	63
   495  007B96  13                 	db	19
   496  007B97  17                 	db	23
   497  007B98  1A                 	db	26
   498  007B99  64                 	db	100
   499  007B9A  64                 	db	100
   500  007B9B  64                 	db	100
   501  007B9C  64                 	db	100
   502  007B9D  64                 	db	100
   503  007B9E  64                 	db	100
   504  007B9F  64                 	db	100
   505  007BA0  64                 	db	100
   506  007BA1  64                 	db	100
   507  007BA2  64                 	db	100
   508  007BA3  64                 	db	100
   509  007BA4  64                 	db	100
   510  007BA5  00                 	db	0
   511  007BA6  01                 	db	1
   512  007BA7  28                 	db	40
   513  007BA8  2C                 	db	44
   514  007BA9  3E                 	db	62
   515  007BAA  3F                 	db	63
   516  007BAB  13                 	db	19
   517  007BAC  17                 	db	23
   518  007BAD  64                 	db	100
   519  007BAE  64                 	db	100
   520  007BAF  64                 	db	100
   521  007BB0  64                 	db	100
   522  007BB1  64                 	db	100
   523  007BB2  64                 	db	100
   524  007BB3  64                 	db	100
   525  007BB4  64                 	db	100
   526  007BB5  64                 	db	100
   527  007BB6  64                 	db	100
   528  007BB7  64                 	db	100
   529  007BB8  64                 	db	100
   530  007BB9  64                 	db	100
   531  007BBA  64                 	db	100
   532  007BBB  64                 	db	100
   533  007BBC  64                 	db	100
   534  007BBD  00                 	db	0
   535  007BBE  2C                 	db	44
   536  007BBF  3F                 	db	63
   537  007BC0  13                 	db	19
   538  007BC1  64                 	db	100
   539  007BC2  64                 	db	100
   540  007BC3  64                 	db	100
   541  007BC4  64                 	db	100
   542  007BC5  64                 	db	100
   543  007BC6  64                 	db	100
   544  007BC7  64                 	db	100
   545  007BC8  64                 	db	100
   546  007BC9  64                 	db	100
   547  007BCA  64                 	db	100
   548  007BCB  64                 	db	100
   549  007BCC  64                 	db	100
   550  007BCD  64                 	db	100
   551  007BCE  64                 	db	100
   552  007BCF  64                 	db	100
   553  007BD0  64                 	db	100
   554  007BD1  64                 	db	100
   555  007BD2  64                 	db	100
   556  007BD3  64                 	db	100
   557  007BD4  64                 	db	100
   558  007BD5                     __end_of_show7_2:
   559                           	opt stack 0
   560  007BD5                     _show0_3:
   561                           	opt stack 0
   562  007BD5  0F                 	db	15
   563  007BD6  1C                 	db	28
   564  007BD7  23                 	db	35
   565  007BD8  30                 	db	48
   566  007BD9  64                 	db	100
   567  007BDA  64                 	db	100
   568  007BDB  64                 	db	100
   569  007BDC  64                 	db	100
   570  007BDD  64                 	db	100
   571  007BDE  64                 	db	100
   572  007BDF  64                 	db	100
   573  007BE0  64                 	db	100
   574  007BE1  64                 	db	100
   575  007BE2  64                 	db	100
   576  007BE3  64                 	db	100
   577  007BE4  64                 	db	100
   578  007BE5  64                 	db	100
   579  007BE6  64                 	db	100
   580  007BE7  64                 	db	100
   581  007BE8  64                 	db	100
   582  007BE9  0B                 	db	11
   583  007BEA  0E                 	db	14
   584  007BEB  22                 	db	34
   585  007BEC  27                 	db	39
   586  007BED  18                 	db	24
   587  007BEE  1D                 	db	29
   588  007BEF  31                 	db	49
   589  007BF0  34                 	db	52
   590  007BF1  64                 	db	100
   591  007BF2  64                 	db	100
   592  007BF3  64                 	db	100
   593  007BF4  64                 	db	100
   594  007BF5  64                 	db	100
   595  007BF6  64                 	db	100
   596  007BF7  64                 	db	100
   597  007BF8  64                 	db	100
   598  007BF9  64                 	db	100
   599  007BFA  64                 	db	100
   600  007BFB  64                 	db	100
   601  007BFC  64                 	db	100
   602  007BFD  0A                 	db	10
   603  007BFE  0B                 	db	11
   604  007BFF  18                 	db	24
   605  007C00  19                 	db	25
   606  007C01  0E                 	db	14
   607  007C02  22                 	db	34
   608  007C03  26                 	db	38
   609  007C04  27                 	db	39
   610  007C05  34                 	db	52
   611  007C06  35                 	db	53
   612  007C07  1D                 	db	29
   613  007C08  31                 	db	49
   614  007C09  64                 	db	100
   615  007C0A  64                 	db	100
   616  007C0B  64                 	db	100
   617  007C0C  64                 	db	100
   618  007C0D  64                 	db	100
   619  007C0E  64                 	db	100
   620  007C0F  64                 	db	100
   621  007C10  64                 	db	100
   622  007C11  07                 	db	7
   623  007C12  0A                 	db	10
   624  007C13  0D                 	db	13
   625  007C14  21                 	db	33
   626  007C15  26                 	db	38
   627  007C16  2B                 	db	43
   628  007C17  14                 	db	20
   629  007C18  19                 	db	25
   630  007C19  1E                 	db	30
   631  007C1A  32                 	db	50
   632  007C1B  35                 	db	53
   633  007C1C  38                 	db	56
   634  007C1D  64                 	db	100
   635  007C1E  64                 	db	100
   636  007C1F  64                 	db	100
   637  007C20  64                 	db	100
   638  007C21  64                 	db	100
   639  007C22  64                 	db	100
   640  007C23  64                 	db	100
   641  007C24  64                 	db	100
   642  007C25  05                 	db	5
   643  007C26  06                 	db	6
   644  007C27  07                 	db	7
   645  007C28  14                 	db	20
   646  007C29  15                 	db	21
   647  007C2A  16                 	db	22
   648  007C2B  09                 	db	9
   649  007C2C  0D                 	db	13
   650  007C2D  21                 	db	33
   651  007C2E  25                 	db	37
   652  007C2F  29                 	db	41
   653  007C30  2A                 	db	42
   654  007C31  2B                 	db	43
   655  007C32  38                 	db	56
   656  007C33  39                 	db	57
   657  007C34  3A                 	db	58
   658  007C35  1A                 	db	26
   659  007C36  1E                 	db	30
   660  007C37  32                 	db	50
   661  007C38  36                 	db	54
   662  007C39  02                 	db	2
   663  007C3A  05                 	db	5
   664  007C3B  08                 	db	8
   665  007C3C  24                 	db	36
   666  007C3D  29                 	db	41
   667  007C3E  2E                 	db	46
   668  007C3F  37                 	db	55
   669  007C40  3A                 	db	58
   670  007C41  3D                 	db	61
   671  007C42  11                 	db	17
   672  007C43  16                 	db	22
   673  007C44  1B                 	db	27
   674  007C45  64                 	db	100
   675  007C46  64                 	db	100
   676  007C47  64                 	db	100
   677  007C48  64                 	db	100
   678  007C49  64                 	db	100
   679  007C4A  64                 	db	100
   680  007C4B  64                 	db	100
   681  007C4C  64                 	db	100
   682  007C4D                     __end_of_show0_3:
   683                           	opt stack 0
   684  007C4D                     _show7_1:
   685                           	opt stack 0
   686  007C4D  0F                 	db	15
   687  007C4E  1C                 	db	28
   688  007C4F  23                 	db	35
   689  007C50  30                 	db	48
   690  007C51  64                 	db	100
   691  007C52  64                 	db	100
   692  007C53  64                 	db	100
   693  007C54  64                 	db	100
   694  007C55  64                 	db	100
   695  007C56  64                 	db	100
   696  007C57  64                 	db	100
   697  007C58  64                 	db	100
   698  007C59  64                 	db	100
   699  007C5A  64                 	db	100
   700  007C5B  64                 	db	100
   701  007C5C  64                 	db	100
   702  007C5D  64                 	db	100
   703  007C5E  64                 	db	100
   704  007C5F  64                 	db	100
   705  007C60  64                 	db	100
   706  007C61  64                 	db	100
   707  007C62  64                 	db	100
   708  007C63  64                 	db	100
   709  007C64  64                 	db	100
   710  007C65  64                 	db	100
   711  007C66  64                 	db	100
   712  007C67  64                 	db	100
   713  007C68  64                 	db	100
   714  007C69  64                 	db	100
   715  007C6A  0A                 	db	10
   716  007C6B  0B                 	db	11
   717  007C6C  0E                 	db	14
   718  007C6D  22                 	db	34
   719  007C6E  26                 	db	38
   720  007C6F  27                 	db	39
   721  007C70  34                 	db	52
   722  007C71  35                 	db	53
   723  007C72  31                 	db	49
   724  007C73  1D                 	db	29
   725  007C74  19                 	db	25
   726  007C75  18                 	db	24
   727  007C76  0B                 	db	11
   728  007C77  64                 	db	100
   729  007C78  64                 	db	100
   730  007C79  64                 	db	100
   731  007C7A  64                 	db	100
   732  007C7B  64                 	db	100
   733  007C7C  64                 	db	100
   734  007C7D  64                 	db	100
   735  007C7E  64                 	db	100
   736  007C7F  64                 	db	100
   737  007C80  64                 	db	100
   738  007C81  64                 	db	100
   739  007C82  64                 	db	100
   740  007C83  64                 	db	100
   741  007C84  64                 	db	100
   742  007C85  64                 	db	100
   743  007C86  64                 	db	100
   744  007C87  05                 	db	5
   745  007C88  06                 	db	6
   746  007C89  07                 	db	7
   747  007C8A  14                 	db	20
   748  007C8B  15                 	db	21
   749  007C8C  09                 	db	9
   750  007C8D  0D                 	db	13
   751  007C8E  21                 	db	33
   752  007C8F  25                 	db	37
   753  007C90  29                 	db	41
   754  007C91  2A                 	db	42
   755  007C92  2B                 	db	43
   756  007C93  38                 	db	56
   757  007C94  39                 	db	57
   758  007C95  3A                 	db	58
   759  007C96  36                 	db	54
   760  007C97  32                 	db	50
   761  007C98  1E                 	db	30
   762  007C99  1A                 	db	26
   763  007C9A  16                 	db	22
   764  007C9B  64                 	db	100
   765  007C9C  64                 	db	100
   766  007C9D  64                 	db	100
   767  007C9E  64                 	db	100
   768  007C9F  64                 	db	100
   769  007CA0  64                 	db	100
   770  007CA1  64                 	db	100
   771  007CA2  64                 	db	100
   772  007CA3  64                 	db	100
   773  007CA4  00                 	db	0
   774  007CA5  01                 	db	1
   775  007CA6  02                 	db	2
   776  007CA7  03                 	db	3
   777  007CA8  10                 	db	16
   778  007CA9  11                 	db	17
   779  007CAA  12                 	db	18
   780  007CAB  13                 	db	19
   781  007CAC  04                 	db	4
   782  007CAD  08                 	db	8
   783  007CAE  0C                 	db	12
   784  007CAF  20                 	db	32
   785  007CB0  24                 	db	36
   786  007CB1  28                 	db	40
   787  007CB2  2C                 	db	44
   788  007CB3  2D                 	db	45
   789  007CB4  2E                 	db	46
   790  007CB5  2F                 	db	47
   791  007CB6  3C                 	db	60
   792  007CB7  3D                 	db	61
   793  007CB8  3E                 	db	62
   794  007CB9  3F                 	db	63
   795  007CBA  17                 	db	23
   796  007CBB  1B                 	db	27
   797  007CBC  1F                 	db	31
   798  007CBD  33                 	db	51
   799  007CBE  37                 	db	55
   800  007CBF  3B                 	db	59
   801  007CC0  3F                 	db	63
   802  007CC1                     __end_of_show7_1:
   803                           	opt stack 0
   804  007CC1                     _circle:
   805                           	opt stack 0
   806  007CC1  00                 	db	0
   807  007CC2  01                 	db	1
   808  007CC3  02                 	db	2
   809  007CC4  03                 	db	3
   810  007CC5  10                 	db	16
   811  007CC6  11                 	db	17
   812  007CC7  12                 	db	18
   813  007CC8  16                 	db	22
   814  007CC9  1A                 	db	26
   815  007CCA  1E                 	db	30
   816  007CCB  32                 	db	50
   817  007CCC  36                 	db	54
   818  007CCD  3A                 	db	58
   819  007CCE  04                 	db	4
   820  007CCF  08                 	db	8
   821  007CD0  0C                 	db	12
   822  007CD1  20                 	db	32
   823  007CD2  24                 	db	36
   824  007CD3  28                 	db	40
   825  007CD4  2C                 	db	44
   826  007CD5  2D                 	db	45
   827  007CD6  2E                 	db	46
   828  007CD7  2F                 	db	47
   829  007CD8  3C                 	db	60
   830  007CD9  3D                 	db	61
   831  007CDA  3E                 	db	62
   832  007CDB  05                 	db	5
   833  007CDC  06                 	db	6
   834  007CDD  07                 	db	7
   835  007CDE  14                 	db	20
   836  007CDF  15                 	db	21
   837  007CE0  19                 	db	25
   838  007CE1  1D                 	db	29
   839  007CE2  31                 	db	49
   840  007CE3  35                 	db	53
   841  007CE4  39                 	db	57
   842  007CE5  09                 	db	9
   843  007CE6  0D                 	db	13
   844  007CE7  21                 	db	33
   845  007CE8  25                 	db	37
   846  007CE9  29                 	db	41
   847  007CEA  2A                 	db	42
   848  007CEB  2B                 	db	43
   849  007CEC  38                 	db	56
   850  007CED  64                 	db	100
   851  007CEE  64                 	db	100
   852  007CEF  64                 	db	100
   853  007CF0  64                 	db	100
   854  007CF1  64                 	db	100
   855  007CF2  64                 	db	100
   856  007CF3  64                 	db	100
   857  007CF4  64                 	db	100
   858  007CF5  0A                 	db	10
   859  007CF6  0B                 	db	11
   860  007CF7  18                 	db	24
   861  007CF8  1C                 	db	28
   862  007CF9  0E                 	db	14
   863  007CFA  22                 	db	34
   864  007CFB  26                 	db	38
   865  007CFC  27                 	db	39
   866  007CFD  34                 	db	52
   867  007CFE  30                 	db	48
   868  007CFF  64                 	db	100
   869  007D00  64                 	db	100
   870  007D01  64                 	db	100
   871  007D02  64                 	db	100
   872  007D03  64                 	db	100
   873  007D04  64                 	db	100
   874  007D05  64                 	db	100
   875  007D06  64                 	db	100
   876  007D07  64                 	db	100
   877  007D08  64                 	db	100
   878  007D09  64                 	db	100
   879  007D0A  64                 	db	100
   880  007D0B  64                 	db	100
   881  007D0C  64                 	db	100
   882  007D0D  64                 	db	100
   883  007D0E  64                 	db	100
   884  007D0F  0F                 	db	15
   885  007D10  23                 	db	35
   886  007D11  64                 	db	100
   887  007D12  64                 	db	100
   888  007D13  64                 	db	100
   889  007D14  64                 	db	100
   890  007D15  64                 	db	100
   891  007D16  64                 	db	100
   892  007D17  64                 	db	100
   893  007D18  64                 	db	100
   894  007D19  64                 	db	100
   895  007D1A  64                 	db	100
   896  007D1B  64                 	db	100
   897  007D1C  64                 	db	100
   898  007D1D  64                 	db	100
   899  007D1E  64                 	db	100
   900  007D1F  64                 	db	100
   901  007D20  64                 	db	100
   902  007D21  64                 	db	100
   903  007D22  64                 	db	100
   904  007D23  64                 	db	100
   905  007D24  64                 	db	100
   906  007D25  64                 	db	100
   907  007D26  64                 	db	100
   908  007D27  64                 	db	100
   909  007D28  64                 	db	100
   910  007D29                     __end_of_circle:
   911                           	opt stack 0
   912  007D29                     _show4_3:
   913                           	opt stack 0
   914  007D29  37                 	db	55
   915  007D2A  3A                 	db	58
   916  007D2B  3D                 	db	61
   917  007D2C  3B                 	db	59
   918  007D2D  3E                 	db	62
   919  007D2E  3F                 	db	63
   920  007D2F  64                 	db	100
   921  007D30  64                 	db	100
   922  007D31  33                 	db	51
   923  007D32  36                 	db	54
   924  007D33  39                 	db	57
   925  007D34  3C                 	db	60
   926  007D35  37                 	db	55
   927  007D36  3A                 	db	58
   928  007D37  3D                 	db	61
   929  007D38  64                 	db	100
   930  007D39  1F                 	db	31
   931  007D3A  32                 	db	50
   932  007D3B  35                 	db	53
   933  007D3C  38                 	db	56
   934  007D3D  33                 	db	51
   935  007D3E  36                 	db	54
   936  007D3F  39                 	db	57
   937  007D40  3C                 	db	60
   938  007D41  1B                 	db	27
   939  007D42  1E                 	db	30
   940  007D43  31                 	db	49
   941  007D44  34                 	db	52
   942  007D45  1F                 	db	31
   943  007D46  32                 	db	50
   944  007D47  35                 	db	53
   945  007D48  38                 	db	56
   946  007D49  17                 	db	23
   947  007D4A  1A                 	db	26
   948  007D4B  1D                 	db	29
   949  007D4C  30                 	db	48
   950  007D4D  1B                 	db	27
   951  007D4E  1E                 	db	30
   952  007D4F  31                 	db	49
   953  007D50  34                 	db	52
   954  007D51  13                 	db	19
   955  007D52  16                 	db	22
   956  007D53  19                 	db	25
   957  007D54  1C                 	db	28
   958  007D55  17                 	db	23
   959  007D56  1A                 	db	26
   960  007D57  1D                 	db	29
   961  007D58  30                 	db	48
   962  007D59  12                 	db	18
   963  007D5A  15                 	db	21
   964  007D5B  18                 	db	24
   965  007D5C  0F                 	db	15
   966  007D5D  13                 	db	19
   967  007D5E  16                 	db	22
   968  007D5F  19                 	db	25
   969  007D60  1C                 	db	28
   970  007D61  11                 	db	17
   971  007D62  14                 	db	20
   972  007D63  0B                 	db	11
   973  007D64  0E                 	db	14
   974  007D65  12                 	db	18
   975  007D66  15                 	db	21
   976  007D67  18                 	db	24
   977  007D68  0F                 	db	15
   978  007D69  10                 	db	16
   979  007D6A  07                 	db	7
   980  007D6B  0A                 	db	10
   981  007D6C  0D                 	db	13
   982  007D6D  11                 	db	17
   983  007D6E  14                 	db	20
   984  007D6F  0B                 	db	11
   985  007D70  0E                 	db	14
   986  007D71  03                 	db	3
   987  007D72  06                 	db	6
   988  007D73  09                 	db	9
   989  007D74  0C                 	db	12
   990  007D75  10                 	db	16
   991  007D76  07                 	db	7
   992  007D77  0A                 	db	10
   993  007D78  0D                 	db	13
   994  007D79  02                 	db	2
   995  007D7A  05                 	db	5
   996  007D7B  08                 	db	8
   997  007D7C  03                 	db	3
   998  007D7D  06                 	db	6
   999  007D7E  09                 	db	9
  1000  007D7F  0C                 	db	12
  1001  007D80  64                 	db	100
  1002  007D81  00                 	db	0
  1003  007D82  01                 	db	1
  1004  007D83  02                 	db	2
  1005  007D84  04                 	db	4
  1006  007D85  05                 	db	5
  1007  007D86  08                 	db	8
  1008  007D87  64                 	db	100
  1009  007D88  64                 	db	100
  1010  007D89                     __end_of_show4_3:
  1011                           	opt stack 0
  1012  007D89                     _show4_2:
  1013                           	opt stack 0
  1014  007D89  00                 	db	0
  1015  007D8A  01                 	db	1
  1016  007D8B  02                 	db	2
  1017  007D8C  04                 	db	4
  1018  007D8D  05                 	db	5
  1019  007D8E  08                 	db	8
  1020  007D8F  64                 	db	100
  1021  007D90  64                 	db	100
  1022  007D91  02                 	db	2
  1023  007D92  05                 	db	5
  1024  007D93  08                 	db	8
  1025  007D94  03                 	db	3
  1026  007D95  06                 	db	6
  1027  007D96  09                 	db	9
  1028  007D97  0C                 	db	12
  1029  007D98  64                 	db	100
  1030  007D99  03                 	db	3
  1031  007D9A  06                 	db	6
  1032  007D9B  09                 	db	9
  1033  007D9C  0C                 	db	12
  1034  007D9D  07                 	db	7
  1035  007D9E  0A                 	db	10
  1036  007D9F  0D                 	db	13
  1037  007DA0  20                 	db	32
  1038  007DA1  07                 	db	7
  1039  007DA2  0A                 	db	10
  1040  007DA3  0D                 	db	13
  1041  007DA4  20                 	db	32
  1042  007DA5  0B                 	db	11
  1043  007DA6  0E                 	db	14
  1044  007DA7  21                 	db	33
  1045  007DA8  24                 	db	36
  1046  007DA9  0B                 	db	11
  1047  007DAA  0E                 	db	14
  1048  007DAB  21                 	db	33
  1049  007DAC  24                 	db	36
  1050  007DAD  0F                 	db	15
  1051  007DAE  22                 	db	34
  1052  007DAF  25                 	db	37
  1053  007DB0  28                 	db	40
  1054  007DB1  0F                 	db	15
  1055  007DB2  22                 	db	34
  1056  007DB3  25                 	db	37
  1057  007DB4  28                 	db	40
  1058  007DB5  23                 	db	35
  1059  007DB6  26                 	db	38
  1060  007DB7  29                 	db	41
  1061  007DB8  2C                 	db	44
  1062  007DB9  23                 	db	35
  1063  007DBA  26                 	db	38
  1064  007DBB  29                 	db	41
  1065  007DBC  2C                 	db	44
  1066  007DBD  30                 	db	48
  1067  007DBE  27                 	db	39
  1068  007DBF  2A                 	db	42
  1069  007DC0  2D                 	db	45
  1070  007DC1  30                 	db	48
  1071  007DC2  27                 	db	39
  1072  007DC3  2A                 	db	42
  1073  007DC4  2D                 	db	45
  1074  007DC5  31                 	db	49
  1075  007DC6  34                 	db	52
  1076  007DC7  2B                 	db	43
  1077  007DC8  2E                 	db	46
  1078  007DC9  31                 	db	49
  1079  007DCA  34                 	db	52
  1080  007DCB  2B                 	db	43
  1081  007DCC  2E                 	db	46
  1082  007DCD  32                 	db	50
  1083  007DCE  35                 	db	53
  1084  007DCF  38                 	db	56
  1085  007DD0  2F                 	db	47
  1086  007DD1  32                 	db	50
  1087  007DD2  35                 	db	53
  1088  007DD3  38                 	db	56
  1089  007DD4  2F                 	db	47
  1090  007DD5  33                 	db	51
  1091  007DD6  36                 	db	54
  1092  007DD7  39                 	db	57
  1093  007DD8  3C                 	db	60
  1094  007DD9  33                 	db	51
  1095  007DDA  36                 	db	54
  1096  007DDB  39                 	db	57
  1097  007DDC  3C                 	db	60
  1098  007DDD  37                 	db	55
  1099  007DDE  3A                 	db	58
  1100  007DDF  3D                 	db	61
  1101  007DE0  64                 	db	100
  1102  007DE1  37                 	db	55
  1103  007DE2  3A                 	db	58
  1104  007DE3  3D                 	db	61
  1105  007DE4  3B                 	db	59
  1106  007DE5  3E                 	db	62
  1107  007DE6  3F                 	db	63
  1108  007DE7  64                 	db	100
  1109  007DE8  64                 	db	100
  1110  007DE9                     __end_of_show4_2:
  1111                           	opt stack 0
  1112  007DE9                     _show3_1:
  1113                           	opt stack 0
  1114  007DE9  00                 	db	0
  1115  007DEA  01                 	db	1
  1116  007DEB  02                 	db	2
  1117  007DEC  03                 	db	3
  1118  007DED  2F                 	db	47
  1119  007DEE  3C                 	db	60
  1120  007DEF  3D                 	db	61
  1121  007DF0  3E                 	db	62
  1122  007DF1  01                 	db	1
  1123  007DF2  02                 	db	2
  1124  007DF3  03                 	db	3
  1125  007DF4  10                 	db	16
  1126  007DF5  2E                 	db	46
  1127  007DF6  2F                 	db	47
  1128  007DF7  3C                 	db	60
  1129  007DF8  3D                 	db	61
  1130  007DF9  02                 	db	2
  1131  007DFA  03                 	db	3
  1132  007DFB  10                 	db	16
  1133  007DFC  11                 	db	17
  1134  007DFD  2D                 	db	45
  1135  007DFE  2E                 	db	46
  1136  007DFF  2F                 	db	47
  1137  007E00  3C                 	db	60
  1138  007E01  03                 	db	3
  1139  007E02  10                 	db	16
  1140  007E03  11                 	db	17
  1141  007E04  12                 	db	18
  1142  007E05  2C                 	db	44
  1143  007E06  2D                 	db	45
  1144  007E07  2E                 	db	46
  1145  007E08  2F                 	db	47
  1146  007E09  10                 	db	16
  1147  007E0A  11                 	db	17
  1148  007E0B  12                 	db	18
  1149  007E0C  16                 	db	22
  1150  007E0D  28                 	db	40
  1151  007E0E  2C                 	db	44
  1152  007E0F  2D                 	db	45
  1153  007E10  2E                 	db	46
  1154  007E11  11                 	db	17
  1155  007E12  12                 	db	18
  1156  007E13  16                 	db	22
  1157  007E14  1A                 	db	26
  1158  007E15  24                 	db	36
  1159  007E16  28                 	db	40
  1160  007E17  2C                 	db	44
  1161  007E18  2D                 	db	45
  1162  007E19  12                 	db	18
  1163  007E1A  16                 	db	22
  1164  007E1B  1A                 	db	26
  1165  007E1C  1E                 	db	30
  1166  007E1D  20                 	db	32
  1167  007E1E  24                 	db	36
  1168  007E1F  28                 	db	40
  1169  007E20  2C                 	db	44
  1170  007E21  16                 	db	22
  1171  007E22  1A                 	db	26
  1172  007E23  1E                 	db	30
  1173  007E24  32                 	db	50
  1174  007E25  0C                 	db	12
  1175  007E26  20                 	db	32
  1176  007E27  24                 	db	36
  1177  007E28  28                 	db	40
  1178  007E29  1A                 	db	26
  1179  007E2A  1E                 	db	30
  1180  007E2B  32                 	db	50
  1181  007E2C  36                 	db	54
  1182  007E2D  08                 	db	8
  1183  007E2E  0C                 	db	12
  1184  007E2F  20                 	db	32
  1185  007E30  24                 	db	36
  1186  007E31  1E                 	db	30
  1187  007E32  32                 	db	50
  1188  007E33  36                 	db	54
  1189  007E34  3A                 	db	58
  1190  007E35  04                 	db	4
  1191  007E36  08                 	db	8
  1192  007E37  0C                 	db	12
  1193  007E38  20                 	db	32
  1194  007E39                     __end_of_show3_1:
  1195                           	opt stack 0
  1196  007E39                     _show5:
  1197                           	opt stack 0
  1198  007E39  00                 	db	0
  1199  007E3A  01                 	db	1
  1200  007E3B  04                 	db	4
  1201  007E3C  05                 	db	5
  1202  007E3D  01                 	db	1
  1203  007E3E  02                 	db	2
  1204  007E3F  05                 	db	5
  1205  007E40  06                 	db	6
  1206  007E41  02                 	db	2
  1207  007E42  03                 	db	3
  1208  007E43  06                 	db	6
  1209  007E44  07                 	db	7
  1210  007E45  03                 	db	3
  1211  007E46  07                 	db	7
  1212  007E47  10                 	db	16
  1213  007E48  14                 	db	20
  1214  007E49  04                 	db	4
  1215  007E4A  05                 	db	5
  1216  007E4B  08                 	db	8
  1217  007E4C  09                 	db	9
  1218  007E4D  05                 	db	5
  1219  007E4E  06                 	db	6
  1220  007E4F  09                 	db	9
  1221  007E50  0A                 	db	10
  1222  007E51  06                 	db	6
  1223  007E52  07                 	db	7
  1224  007E53  0A                 	db	10
  1225  007E54  0B                 	db	11
  1226  007E55  07                 	db	7
  1227  007E56  0B                 	db	11
  1228  007E57  14                 	db	20
  1229  007E58  18                 	db	24
  1230  007E59  08                 	db	8
  1231  007E5A  09                 	db	9
  1232  007E5B  0C                 	db	12
  1233  007E5C  0D                 	db	13
  1234  007E5D  09                 	db	9
  1235  007E5E  0A                 	db	10
  1236  007E5F  0D                 	db	13
  1237  007E60  0E                 	db	14
  1238  007E61  0A                 	db	10
  1239  007E62  0B                 	db	11
  1240  007E63  0E                 	db	14
  1241  007E64  0F                 	db	15
  1242  007E65  0B                 	db	11
  1243  007E66  18                 	db	24
  1244  007E67  0F                 	db	15
  1245  007E68  1C                 	db	28
  1246  007E69  0C                 	db	12
  1247  007E6A  0D                 	db	13
  1248  007E6B  20                 	db	32
  1249  007E6C  21                 	db	33
  1250  007E6D  0D                 	db	13
  1251  007E6E  0E                 	db	14
  1252  007E6F  21                 	db	33
  1253  007E70  22                 	db	34
  1254  007E71  0E                 	db	14
  1255  007E72  0F                 	db	15
  1256  007E73  22                 	db	34
  1257  007E74  23                 	db	35
  1258  007E75  0F                 	db	15
  1259  007E76  1C                 	db	28
  1260  007E77  23                 	db	35
  1261  007E78  30                 	db	48
  1262  007E79                     __end_of_show5:
  1263                           	opt stack 0
  1264  007E79                     _show4_4:
  1265                           	opt stack 0
  1266  007E79  13                 	db	19
  1267  007E7A  2C                 	db	44
  1268  007E7B  64                 	db	100
  1269  007E7C  64                 	db	100
  1270  007E7D  64                 	db	100
  1271  007E7E  64                 	db	100
  1272  007E7F  64                 	db	100
  1273  007E80  64                 	db	100
  1274  007E81  12                 	db	18
  1275  007E82  17                 	db	23
  1276  007E83  28                 	db	40
  1277  007E84  2D                 	db	45
  1278  007E85  64                 	db	100
  1279  007E86  64                 	db	100
  1280  007E87  64                 	db	100
  1281  007E88  64                 	db	100
  1282  007E89  11                 	db	17
  1283  007E8A  16                 	db	22
  1284  007E8B  1B                 	db	27
  1285  007E8C  24                 	db	36
  1286  007E8D  29                 	db	41
  1287  007E8E  2E                 	db	46
  1288  007E8F  64                 	db	100
  1289  007E90  64                 	db	100
  1290  007E91  10                 	db	16
  1291  007E92  15                 	db	21
  1292  007E93  1A                 	db	26
  1293  007E94  1F                 	db	31
  1294  007E95  20                 	db	32
  1295  007E96  25                 	db	37
  1296  007E97  2A                 	db	42
  1297  007E98  2F                 	db	47
  1298  007E99  03                 	db	3
  1299  007E9A  14                 	db	20
  1300  007E9B  19                 	db	25
  1301  007E9C  1E                 	db	30
  1302  007E9D  21                 	db	33
  1303  007E9E  26                 	db	38
  1304  007E9F  2B                 	db	43
  1305  007EA0  0C                 	db	12
  1306  007EA1  02                 	db	2
  1307  007EA2  07                 	db	7
  1308  007EA3  18                 	db	24
  1309  007EA4  1D                 	db	29
  1310  007EA5  08                 	db	8
  1311  007EA6  0D                 	db	13
  1312  007EA7  22                 	db	34
  1313  007EA8  27                 	db	39
  1314  007EA9  01                 	db	1
  1315  007EAA  06                 	db	6
  1316  007EAB  0B                 	db	11
  1317  007EAC  1C                 	db	28
  1318  007EAD  04                 	db	4
  1319  007EAE  09                 	db	9
  1320  007EAF  0E                 	db	14
  1321  007EB0  23                 	db	35
  1322  007EB1  00                 	db	0
  1323  007EB2  05                 	db	5
  1324  007EB3  0A                 	db	10
  1325  007EB4  0F                 	db	15
  1326  007EB5  64                 	db	100
  1327  007EB6  64                 	db	100
  1328  007EB7  64                 	db	100
  1329  007EB8  64                 	db	100
  1330  007EB9                     __end_of_show4_4:
  1331                           	opt stack 0
  1332  007EB9                     _show4_1:
  1333                           	opt stack 0
  1334  007EB9  13                 	db	19
  1335  007EBA  2C                 	db	44
  1336  007EBB  64                 	db	100
  1337  007EBC  64                 	db	100
  1338  007EBD  64                 	db	100
  1339  007EBE  64                 	db	100
  1340  007EBF  64                 	db	100
  1341  007EC0  64                 	db	100
  1342  007EC1  12                 	db	18
  1343  007EC2  17                 	db	23
  1344  007EC3  28                 	db	40
  1345  007EC4  2D                 	db	45
  1346  007EC5  64                 	db	100
  1347  007EC6  64                 	db	100
  1348  007EC7  64                 	db	100
  1349  007EC8  64                 	db	100
  1350  007EC9  11                 	db	17
  1351  007ECA  16                 	db	22
  1352  007ECB  1B                 	db	27
  1353  007ECC  24                 	db	36
  1354  007ECD  29                 	db	41
  1355  007ECE  2E                 	db	46
  1356  007ECF  64                 	db	100
  1357  007ED0  64                 	db	100
  1358  007ED1  10                 	db	16
  1359  007ED2  15                 	db	21
  1360  007ED3  1A                 	db	26
  1361  007ED4  1F                 	db	31
  1362  007ED5  20                 	db	32
  1363  007ED6  25                 	db	37
  1364  007ED7  2A                 	db	42
  1365  007ED8  2F                 	db	47
  1366  007ED9  14                 	db	20
  1367  007EDA  19                 	db	25
  1368  007EDB  1E                 	db	30
  1369  007EDC  33                 	db	51
  1370  007EDD  21                 	db	33
  1371  007EDE  26                 	db	38
  1372  007EDF  2B                 	db	43
  1373  007EE0  3C                 	db	60
  1374  007EE1  18                 	db	24
  1375  007EE2  1D                 	db	29
  1376  007EE3  32                 	db	50
  1377  007EE4  37                 	db	55
  1378  007EE5  22                 	db	34
  1379  007EE6  27                 	db	39
  1380  007EE7  38                 	db	56
  1381  007EE8  3D                 	db	61
  1382  007EE9  1C                 	db	28
  1383  007EEA  31                 	db	49
  1384  007EEB  36                 	db	54
  1385  007EEC  3B                 	db	59
  1386  007EED  23                 	db	35
  1387  007EEE  34                 	db	52
  1388  007EEF  39                 	db	57
  1389  007EF0  3E                 	db	62
  1390  007EF1  30                 	db	48
  1391  007EF2  35                 	db	53
  1392  007EF3  3A                 	db	58
  1393  007EF4  3F                 	db	63
  1394  007EF5  64                 	db	100
  1395  007EF6  64                 	db	100
  1396  007EF7  64                 	db	100
  1397  007EF8  64                 	db	100
  1398  007EF9                     __end_of_show4_1:
  1399                           	opt stack 0
  1400  007EF9                     _Buttons:
  1401                           	opt stack 0
  1402  007EF9  00                 	db	0
  1403  007EFA  01                 	db	1
  1404  007EFB  02                 	db	2
  1405  007EFC  03                 	db	3
  1406  007EFD  10                 	db	16
  1407  007EFE  11                 	db	17
  1408  007EFF  12                 	db	18
  1409  007F00  13                 	db	19
  1410  007F01  04                 	db	4
  1411  007F02  05                 	db	5
  1412  007F03  06                 	db	6
  1413  007F04  07                 	db	7
  1414  007F05  14                 	db	20
  1415  007F06  15                 	db	21
  1416  007F07  16                 	db	22
  1417  007F08  17                 	db	23
  1418  007F09  08                 	db	8
  1419  007F0A  09                 	db	9
  1420  007F0B  0A                 	db	10
  1421  007F0C  0B                 	db	11
  1422  007F0D  18                 	db	24
  1423  007F0E  19                 	db	25
  1424  007F0F  1A                 	db	26
  1425  007F10  1B                 	db	27
  1426  007F11  0C                 	db	12
  1427  007F12  0D                 	db	13
  1428  007F13  0E                 	db	14
  1429  007F14  0F                 	db	15
  1430  007F15  1C                 	db	28
  1431  007F16  1D                 	db	29
  1432  007F17  1E                 	db	30
  1433  007F18  1F                 	db	31
  1434  007F19  20                 	db	32
  1435  007F1A  21                 	db	33
  1436  007F1B  22                 	db	34
  1437  007F1C  23                 	db	35
  1438  007F1D  30                 	db	48
  1439  007F1E  31                 	db	49
  1440  007F1F  32                 	db	50
  1441  007F20  33                 	db	51
  1442  007F21  24                 	db	36
  1443  007F22  25                 	db	37
  1444  007F23  26                 	db	38
  1445  007F24  27                 	db	39
  1446  007F25  34                 	db	52
  1447  007F26  35                 	db	53
  1448  007F27  36                 	db	54
  1449  007F28  37                 	db	55
  1450  007F29  28                 	db	40
  1451  007F2A  29                 	db	41
  1452  007F2B  2A                 	db	42
  1453  007F2C  2B                 	db	43
  1454  007F2D  38                 	db	56
  1455  007F2E  39                 	db	57
  1456  007F2F  3A                 	db	58
  1457  007F30  3B                 	db	59
  1458  007F31  2C                 	db	44
  1459  007F32  2D                 	db	45
  1460  007F33  2E                 	db	46
  1461  007F34  2F                 	db	47
  1462  007F35  3C                 	db	60
  1463  007F36  3D                 	db	61
  1464  007F37  3E                 	db	62
  1465  007F38  3F                 	db	63
  1466  007F39                     __end_of_Buttons:
  1467                           	opt stack 0
  1468  007F39                     _show3_2:
  1469                           	opt stack 0
  1470  007F39  05                 	db	5
  1471  007F3A  06                 	db	6
  1472  007F3B  07                 	db	7
  1473  007F3C  2B                 	db	43
  1474  007F3D  38                 	db	56
  1475  007F3E  39                 	db	57
  1476  007F3F  06                 	db	6
  1477  007F40  07                 	db	7
  1478  007F41  14                 	db	20
  1479  007F42  2A                 	db	42
  1480  007F43  2B                 	db	43
  1481  007F44  38                 	db	56
  1482  007F45  07                 	db	7
  1483  007F46  14                 	db	20
  1484  007F47  15                 	db	21
  1485  007F48  29                 	db	41
  1486  007F49  2A                 	db	42
  1487  007F4A  2B                 	db	43
  1488  007F4B  14                 	db	20
  1489  007F4C  15                 	db	21
  1490  007F4D  19                 	db	25
  1491  007F4E  25                 	db	37
  1492  007F4F  29                 	db	41
  1493  007F50  2A                 	db	42
  1494  007F51  15                 	db	21
  1495  007F52  19                 	db	25
  1496  007F53  1D                 	db	29
  1497  007F54  21                 	db	33
  1498  007F55  25                 	db	37
  1499  007F56  29                 	db	41
  1500  007F57  19                 	db	25
  1501  007F58  1D                 	db	29
  1502  007F59  31                 	db	49
  1503  007F5A  0D                 	db	13
  1504  007F5B  21                 	db	33
  1505  007F5C  25                 	db	37
  1506  007F5D  1D                 	db	29
  1507  007F5E  31                 	db	49
  1508  007F5F  35                 	db	53
  1509  007F60  09                 	db	9
  1510  007F61  0D                 	db	13
  1511  007F62  21                 	db	33
  1512  007F63                     __end_of_show3_2:
  1513                           	opt stack 0
  1514  007F63                     _show0_2:
  1515                           	opt stack 0
  1516  007F63  00                 	db	0
  1517  007F64  04                 	db	4
  1518  007F65  08                 	db	8
  1519  007F66  0C                 	db	12
  1520  007F67  20                 	db	32
  1521  007F68  24                 	db	36
  1522  007F69  28                 	db	40
  1523  007F6A  2C                 	db	44
  1524  007F6B  29                 	db	41
  1525  007F6C  25                 	db	37
  1526  007F6D  21                 	db	33
  1527  007F6E  0D                 	db	13
  1528  007F6F  09                 	db	9
  1529  007F70  05                 	db	5
  1530  007F71  0A                 	db	10
  1531  007F72  0E                 	db	14
  1532  007F73  22                 	db	34
  1533  007F74  26                 	db	38
  1534  007F75  23                 	db	35
  1535  007F76  0F                 	db	15
  1536  007F77  1C                 	db	28
  1537  007F78  30                 	db	48
  1538  007F79  35                 	db	53
  1539  007F7A  31                 	db	49
  1540  007F7B  1D                 	db	29
  1541  007F7C  19                 	db	25
  1542  007F7D  16                 	db	22
  1543  007F7E  1A                 	db	26
  1544  007F7F  1E                 	db	30
  1545  007F80  32                 	db	50
  1546  007F81  36                 	db	54
  1547  007F82  3A                 	db	58
  1548  007F83  3F                 	db	63
  1549  007F84  3B                 	db	59
  1550  007F85  37                 	db	55
  1551  007F86  33                 	db	51
  1552  007F87  1F                 	db	31
  1553  007F88  1B                 	db	27
  1554  007F89  17                 	db	23
  1555  007F8A  13                 	db	19
  1556  007F8B                     __end_of_show0_2:
  1557                           	opt stack 0
  1558  007F8B                     _show0_1:
  1559                           	opt stack 0
  1560  007F8B  00                 	db	0
  1561  007F8C  01                 	db	1
  1562  007F8D  02                 	db	2
  1563  007F8E  03                 	db	3
  1564  007F8F  10                 	db	16
  1565  007F90  11                 	db	17
  1566  007F91  12                 	db	18
  1567  007F92  13                 	db	19
  1568  007F93  16                 	db	22
  1569  007F94  15                 	db	21
  1570  007F95  14                 	db	20
  1571  007F96  07                 	db	7
  1572  007F97  06                 	db	6
  1573  007F98  05                 	db	5
  1574  007F99  0A                 	db	10
  1575  007F9A  0B                 	db	11
  1576  007F9B  18                 	db	24
  1577  007F9C  19                 	db	25
  1578  007F9D  1C                 	db	28
  1579  007F9E  0F                 	db	15
  1580  007F9F  23                 	db	35
  1581  007FA0  30                 	db	48
  1582  007FA1  35                 	db	53
  1583  007FA2  34                 	db	52
  1584  007FA3  27                 	db	39
  1585  007FA4  26                 	db	38
  1586  007FA5  29                 	db	41
  1587  007FA6  2A                 	db	42
  1588  007FA7  2B                 	db	43
  1589  007FA8  38                 	db	56
  1590  007FA9  39                 	db	57
  1591  007FAA  3A                 	db	58
  1592  007FAB  3F                 	db	63
  1593  007FAC  3E                 	db	62
  1594  007FAD  3D                 	db	61
  1595  007FAE  3C                 	db	60
  1596  007FAF  2F                 	db	47
  1597  007FB0  2E                 	db	46
  1598  007FB1  2D                 	db	45
  1599  007FB2  2C                 	db	44
  1600  007FB3                     __end_of_show0_1:
  1601                           	opt stack 0
  1602  007FB3                     _horizental_flash:
  1603                           	opt stack 0
  1604  007FB3  00                 	db	0
  1605  007FB4  01                 	db	1
  1606  007FB5  02                 	db	2
  1607  007FB6  01                 	db	1
  1608  007FB7  02                 	db	2
  1609  007FB8  03                 	db	3
  1610  007FB9  02                 	db	2
  1611  007FBA  03                 	db	3
  1612  007FBB  10                 	db	16
  1613  007FBC  03                 	db	3
  1614  007FBD  10                 	db	16
  1615  007FBE  11                 	db	17
  1616  007FBF  10                 	db	16
  1617  007FC0  11                 	db	17
  1618  007FC1  12                 	db	18
  1619  007FC2  11                 	db	17
  1620  007FC3  12                 	db	18
  1621  007FC4  13                 	db	19
  1622  007FC5  12                 	db	18
  1623  007FC6  13                 	db	19
  1624  007FC7  64                 	db	100
  1625  007FC8  13                 	db	19
  1626  007FC9  64                 	db	100
  1627  007FCA  64                 	db	100
  1628  007FCB                     __end_of_horizental_flash:
  1629                           	opt stack 0
  1630  007FCB                     _show3_3:
  1631                           	opt stack 0
  1632  007FCB  0A                 	db	10
  1633  007FCC  0B                 	db	11
  1634  007FCD  27                 	db	39
  1635  007FCE  34                 	db	52
  1636  007FCF  0B                 	db	11
  1637  007FD0  18                 	db	24
  1638  007FD1  26                 	db	38
  1639  007FD2  27                 	db	39
  1640  007FD3  18                 	db	24
  1641  007FD4  1C                 	db	28
  1642  007FD5  22                 	db	34
  1643  007FD6  26                 	db	38
  1644  007FD7  1C                 	db	28
  1645  007FD8  30                 	db	48
  1646  007FD9  0E                 	db	14
  1647  007FDA  22                 	db	34
  1648  007FDB  0A                 	db	10
  1649  007FDC  0E                 	db	14
  1650  007FDD  30                 	db	48
  1651  007FDE  34                 	db	52
  1652  007FDF                     __end_of_show3_3:
  1653                           	opt stack 0
  1654  007FDF                     _buttonLUT:
  1655                           	opt stack 0
  1656  007FDF  07                 	db	7
  1657  007FE0  04                 	db	4
  1658  007FE1  02                 	db	2
  1659  007FE2  22                 	db	34
  1660  007FE3  05                 	db	5
  1661  007FE4  06                 	db	6
  1662  007FE5  00                 	db	0
  1663  007FE6  01                 	db	1
  1664  007FE7  03                 	db	3
  1665  007FE8  10                 	db	16
  1666  007FE9  30                 	db	48
  1667  007FEA  21                 	db	33
  1668  007FEB  13                 	db	19
  1669  007FEC  12                 	db	18
  1670  007FED  11                 	db	17
  1671  007FEE  31                 	db	49
  1672  007FEF                     __end_of_buttonLUT:
  1673                           	opt stack 0
  1674  007FEF                     _ledLUT:
  1675                           	opt stack 0
  1676  007FEF  3A                 	db	58
  1677  007FF0  37                 	db	55
  1678  007FF1  35                 	db	53
  1679  007FF2  34                 	db	52
  1680  007FF3  28                 	db	40
  1681  007FF4  29                 	db	41
  1682  007FF5  23                 	db	35
  1683  007FF6  24                 	db	36
  1684  007FF7  16                 	db	22
  1685  007FF8  1B                 	db	27
  1686  007FF9  11                 	db	17
  1687  007FFA  10                 	db	16
  1688  007FFB  0E                 	db	14
  1689  007FFC  0D                 	db	13
  1690  007FFD  0C                 	db	12
  1691  007FFE  02                 	db	2
  1692  007FFF                     __end_of_ledLUT:
  1693                           	opt stack 0
  1694  0000                     _INTCONbits	set	4082
  1695  0000                     _RCONbits	set	4048
  1696  0000                     _IPR1bits	set	3999
  1697  0000                     _PIE1bits	set	3997
  1698  0000                     _PIR2bits	set	4001
  1699  0000                     _TRISCbits	set	3988
  1700  0000                     _SSPSTAT	set	4039
  1701  0000                     _PIR1bits	set	3998
  1702  0000                     _SSPSTATbits	set	4039
  1703  0000                     _SSPCON2	set	4037
  1704  0000                     _SSPCON1	set	4038
  1705  0000                     _SSPCON2bits	set	4037
  1706  0000                     _SSPADD	set	4040
  1707  0000                     _OSCCONbits	set	4051
  1708  0000                     _SSPCON1bits	set	4038
  1709  0000                     _SSPBUF	set	4041
  1710                           
  1711                           ; #config settings
  1712  007FFF  00                 	db	0	; dummy byte at the end
  1713  0000                     
  1714                           	psect	cinit
  1715  004ED6                     __pcinit:
  1716                           	opt stack 0
  1717  004ED6                     start_initialization:
  1718                           	opt stack 0
  1719  004ED6                     __initialization:
  1720                           	opt stack 0
  1721                           
  1722                           ; Clear objects allocated to BANK0 (116 bytes)
  1723  004ED6  EE00  F080         	lfsr	0,__pbssBANK0
  1724  004EDA  0E74               	movlw	116
  1725  004EDC                     clear_0:
  1726  004EDC  6AEE               	clrf	postinc0,c
  1727  004EDE  06E8               	decf	wreg,f,c
  1728  004EE0  E1FD               	bnz	clear_0
  1729                           
  1730                           ; Clear objects allocated to COMRAM (66 bytes)
  1731  004EE2  EE00  F001         	lfsr	0,__pbssCOMRAM
  1732  004EE6  0E42               	movlw	66
  1733  004EE8                     clear_1:
  1734  004EE8  6AEE               	clrf	postinc0,c
  1735  004EEA  06E8               	decf	wreg,f,c
  1736  004EEC  E1FD               	bnz	clear_1
  1737  004EEE                     end_of_initialization:
  1738                           	opt stack 0
  1739  004EEE                     __end_of__initialization:
  1740                           	opt stack 0
  1741  004EEE  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1742  004EF0  6EF8               	movwf	tblptru,c
  1743  004EF2  0100               	movlb	0
  1744  004EF4  EF80  F039         	goto	_main	;jump to C main() function
  1745                           tblptru	equ	0xFF8
  1746                           postinc0	equ	0xFEE
  1747                           wreg	equ	0xFE8
  1748                           
  1749                           	psect	bssCOMRAM
  1750  000001                     __pbssCOMRAM:
  1751                           	opt stack 0
  1752  000001                     _temp:
  1753                           	opt stack 0
  1754  000001                     	ds	64
  1755  000041                     _count:
  1756                           	opt stack 0
  1757  000041                     	ds	2
  1758                           tblptru	equ	0xFF8
  1759                           postinc0	equ	0xFEE
  1760                           wreg	equ	0xFE8
  1761                           
  1762                           	psect	bssBANK0
  1763  000080                     __pbssBANK0:
  1764                           	opt stack 0
  1765  000080                     _matrices:
  1766                           	opt stack 0
  1767  000080                     	ds	116
  1768                           tblptru	equ	0xFF8
  1769                           postinc0	equ	0xFEE
  1770                           wreg	equ	0xFE8
  1771                           
  1772                           	psect	cstackCOMRAM
  1773  000043                     __pcstackCOMRAM:
  1774                           	opt stack 0
  1775  000043                     ??_MyIdleI2C:
  1776  000043                     ?___wmul:
  1777                           	opt stack 0
  1778  000043                     ?___awdiv:
  1779                           	opt stack 0
  1780  000043                     MyOpenI2C@slew:
  1781                           	opt stack 0
  1782  000043                     ___wmul@multiplier:
  1783                           	opt stack 0
  1784  000043                     ___awdiv@dividend:
  1785                           	opt stack 0
  1786                           
  1787                           ; 2 bytes @ 0x0
  1788  000043                     	ds	1
  1789  000044                     MyWriteI2C@data_out:
  1790                           	opt stack 0
  1791  000044                     MyOpenI2C@sync_mode:
  1792                           	opt stack 0
  1793                           
  1794                           ; 1 bytes @ 0x1
  1795  000044                     	ds	1
  1796  000045                     write@data:
  1797                           	opt stack 0
  1798  000045                     ___wmul@multiplicand:
  1799                           	opt stack 0
  1800  000045                     ___awdiv@divisor:
  1801                           	opt stack 0
  1802                           
  1803                           ; 2 bytes @ 0x2
  1804  000045                     	ds	1
  1805  000046                     write@data_out:
  1806                           	opt stack 0
  1807                           
  1808                           ; 1 bytes @ 0x3
  1809  000046                     	ds	1
  1810  000047                     ___awdiv@counter:
  1811                           	opt stack 0
  1812  000047                     write@status:
  1813                           	opt stack 0
  1814  000047                     ___wmul@product:
  1815                           	opt stack 0
  1816                           
  1817                           ; 2 bytes @ 0x4
  1818  000047                     	ds	1
  1819  000048                     ___awdiv@sign:
  1820                           	opt stack 0
  1821                           
  1822                           ; 1 bytes @ 0x5
  1823  000048                     	ds	1
  1824  000049                     ??_set_led:
  1825  000049                     ??_write_display:
  1826  000049                     ??_clr_led:
  1827  000049                     ??_is_key_pressed:
  1828  000049                     ??_was_key_pressed:
  1829  000049                     MygetsI2C@rdptr:
  1830                           	opt stack 0
  1831  000049                     ___awdiv@quotient:
  1832                           	opt stack 0
  1833  000049                     memcpy@d1:
  1834                           	opt stack 0
  1835                           
  1836                           ; 2 bytes @ 0x6
  1837  000049                     	ds	2
  1838  00004B                     MygetsI2C@length:
  1839                           	opt stack 0
  1840  00004B                     memcpy@s1:
  1841                           	opt stack 0
  1842                           
  1843                           ; 2 bytes @ 0x8
  1844  00004B                     	ds	1
  1845  00004C                     
  1846                           ; 1 bytes @ 0x9
  1847  00004C                     	ds	1
  1848  00004D                     memcpy@n:
  1849                           	opt stack 0
  1850                           
  1851                           ; 2 bytes @ 0xA
  1852  00004D                     	ds	2
  1853  00004F                     write_display@j:
  1854                           	opt stack 0
  1855  00004F                     memcpy@d:
  1856                           	opt stack 0
  1857                           
  1858                           ; 2 bytes @ 0xC
  1859  00004F                     	ds	2
  1860  000051                     write_display@i:
  1861                           	opt stack 0
  1862  000051                     set_led@matrix:
  1863                           	opt stack 0
  1864  000051                     is_key_pressed@matrix:
  1865                           	opt stack 0
  1866  000051                     was_key_pressed@matrix:
  1867                           	opt stack 0
  1868  000051                     memcpy@s:
  1869                           	opt stack 0
  1870                           
  1871                           ; 2 bytes @ 0xE
  1872  000051                     	ds	2
  1873  000053                     memcpy@tmp:
  1874                           	opt stack 0
  1875  000053                     clr_led@matrix:
  1876                           	opt stack 0
  1877  000053                     set_led@led:
  1878                           	opt stack 0
  1879  000053                     is_key_pressed@led:
  1880                           	opt stack 0
  1881  000053                     was_key_pressed@led:
  1882                           	opt stack 0
  1883                           
  1884                           ; 2 bytes @ 0x10
  1885  000053                     	ds	1
  1886  000054                     ??_read_switch:
  1887                           
  1888                           ; 1 bytes @ 0x11
  1889  000054                     	ds	1
  1890  000055                     set_led@i:
  1891                           	opt stack 0
  1892  000055                     is_key_pressed@k:
  1893                           	opt stack 0
  1894  000055                     was_key_pressed@k:
  1895                           	opt stack 0
  1896  000055                     clr_led@led:
  1897                           	opt stack 0
  1898                           
  1899                           ; 2 bytes @ 0x12
  1900  000055                     	ds	2
  1901  000057                     clr_led@i:
  1902                           	opt stack 0
  1903                           
  1904                           ; 1 bytes @ 0x14
  1905  000057                     	ds	1
  1906  000058                     ??_animation3:
  1907  000058                     ??_animation7:
  1908  000058                     animation0@n:
  1909                           	opt stack 0
  1910  000058                     animation1@n:
  1911                           	opt stack 0
  1912  000058                     animation2@n:
  1913                           	opt stack 0
  1914  000058                     animation4@h:
  1915                           	opt stack 0
  1916  000058                     animation5@n:
  1917                           	opt stack 0
  1918  000058                     animation6@n:
  1919                           	opt stack 0
  1920                           
  1921                           ; 1 bytes @ 0x15
  1922  000058                     	ds	1
  1923  000059                     ??_animation0:
  1924  000059                     ??_animation1:
  1925  000059                     ??_animation4:
  1926  000059                     ??_animation6:
  1927  000059                     animation2@h:
  1928                           	opt stack 0
  1929  000059                     animation5@h:
  1930                           	opt stack 0
  1931                           
  1932                           ; 1 bytes @ 0x16
  1933  000059                     	ds	1
  1934  00005A                     ??_animation2:
  1935  00005A                     ??_animation5:
  1936  00005A                     animation3@m:
  1937                           	opt stack 0
  1938  00005A                     animation7@h:
  1939                           	opt stack 0
  1940                           
  1941                           ; 1 bytes @ 0x17
  1942  00005A                     	ds	1
  1943  00005B                     animation3@i:
  1944                           	opt stack 0
  1945  00005B                     animation4@m:
  1946                           	opt stack 0
  1947  00005B                     animation7@i:
  1948                           	opt stack 0
  1949                           
  1950                           ; 1 bytes @ 0x18
  1951  00005B                     	ds	1
  1952  00005C                     animation1@m:
  1953                           	opt stack 0
  1954  00005C                     animation3@j:
  1955                           	opt stack 0
  1956  00005C                     animation4@i:
  1957                           	opt stack 0
  1958  00005C                     animation5@m:
  1959                           	opt stack 0
  1960  00005C                     animation7@j:
  1961                           	opt stack 0
  1962  00005C                     animation2@col:
  1963                           	opt stack 0
  1964                           
  1965                           ; 2 bytes @ 0x19
  1966  00005C                     	ds	1
  1967  00005D                     animation1@x:
  1968                           	opt stack 0
  1969  00005D                     animation4@j:
  1970                           	opt stack 0
  1971  00005D                     animation5@j:
  1972                           	opt stack 0
  1973  00005D                     animation6@x:
  1974                           	opt stack 0
  1975                           
  1976                           ; 1 bytes @ 0x1A
  1977  00005D                     	ds	1
  1978  00005E                     animation0@m:
  1979                           	opt stack 0
  1980  00005E                     animation1@i:
  1981                           	opt stack 0
  1982  00005E                     animation2@m:
  1983                           	opt stack 0
  1984  00005E                     animation5@i:
  1985                           	opt stack 0
  1986  00005E                     animation6@a:
  1987                           	opt stack 0
  1988  00005E                     read_switch@i:
  1989                           	opt stack 0
  1990                           
  1991                           ; 2 bytes @ 0x1B
  1992  00005E                     	ds	1
  1993  00005F                     animation0@j:
  1994                           	opt stack 0
  1995  00005F                     animation1@j:
  1996                           	opt stack 0
  1997  00005F                     animation5@x:
  1998                           	opt stack 0
  1999  00005F                     animation2@row:
  2000                           	opt stack 0
  2001                           
  2002                           ; 2 bytes @ 0x1C
  2003  00005F                     	ds	1
  2004  000060                     animation0@i:
  2005                           	opt stack 0
  2006  000060                     animation6@b:
  2007                           	opt stack 0
  2008  000060                     read_switch@j:
  2009                           	opt stack 0
  2010                           
  2011                           ; 2 bytes @ 0x1D
  2012  000060                     	ds	1
  2013  000061                     animation2@x:
  2014                           	opt stack 0
  2015                           
  2016                           ; 1 bytes @ 0x1E
  2017  000061                     	ds	1
  2018  000062                     animation2@i:
  2019                           	opt stack 0
  2020  000062                     animation6@c:
  2021                           	opt stack 0
  2022                           
  2023                           ; 2 bytes @ 0x1F
  2024  000062                     	ds	1
  2025  000063                     animation2@j:
  2026                           	opt stack 0
  2027                           
  2028                           ; 1 bytes @ 0x20
  2029  000063                     	ds	1
  2030  000064                     animation6@d:
  2031                           	opt stack 0
  2032                           
  2033                           ; 2 bytes @ 0x21
  2034  000064                     	ds	2
  2035  000066                     animation6@m:
  2036                           	opt stack 0
  2037                           
  2038                           ; 1 bytes @ 0x23
  2039  000066                     	ds	1
  2040  000067                     ??_main:
  2041                           
  2042                           ; 1 bytes @ 0x24
  2043  000067                     	ds	4
  2044  00006B                     main@sync_mode:
  2045                           	opt stack 0
  2046                           
  2047                           ; 1 bytes @ 0x28
  2048  00006B                     	ds	1
  2049  00006C                     main@slew:
  2050                           	opt stack 0
  2051                           
  2052                           ; 1 bytes @ 0x29
  2053  00006C                     	ds	1
  2054  00006D                     main@n:
  2055                           	opt stack 0
  2056                           
  2057                           ; 1 bytes @ 0x2A
  2058  00006D                     	ds	1
  2059  00006E                     main@rightbutton:
  2060                           	opt stack 0
  2061                           
  2062                           ; 1 bytes @ 0x2B
  2063  00006E                     	ds	1
  2064  00006F                     main@column:
  2065                           	opt stack 0
  2066                           
  2067                           ; 1 bytes @ 0x2C
  2068  00006F                     	ds	1
  2069  000070                     main@m:
  2070                           	opt stack 0
  2071                           
  2072                           ; 1 bytes @ 0x2D
  2073  000070                     	ds	1
  2074  000071                     main@j:
  2075                           	opt stack 0
  2076                           
  2077                           ; 2 bytes @ 0x2E
  2078  000071                     	ds	2
  2079  000073                     main@h:
  2080                           	opt stack 0
  2081                           
  2082                           ; 1 bytes @ 0x30
  2083  000073                     	ds	1
  2084  000074                     main@i:
  2085                           	opt stack 0
  2086                           
  2087                           ; 2 bytes @ 0x31
  2088  000074                     	ds	2
  2089                           tblptru	equ	0xFF8
  2090                           postinc0	equ	0xFEE
  2091                           wreg	equ	0xFE8
  2092                           
  2093 ;;
  2094 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2095 ;;
  2096 ;; *************** function _main *****************
  2097 ;; Defined at:
  2098 ;;		line 393 in file "newmain.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;  data_buffer     8    0        unsigned char [8]
  2103 ;;  i               2   49[COMRAM] int 
  2104 ;;  j               2   46[COMRAM] int 
  2105 ;;  h               1   48[COMRAM] unsigned char 
  2106 ;;  m               1   45[COMRAM] unsigned char 
  2107 ;;  column          1   44[COMRAM] unsigned char 
  2108 ;;  rightbutton     1   43[COMRAM] unsigned char 
  2109 ;;  n               1   42[COMRAM] unsigned char 
  2110 ;;  slew            1   41[COMRAM] unsigned char 
  2111 ;;  sync_mode       1   40[COMRAM] unsigned char 
  2112 ;;  status          1    0        unsigned char 
  2113 ;;  data            1    0        unsigned char 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2123 ;;      Params:         0       0       0       0       0       0       0
  2124 ;;      Locals:        11       0       0       0       0       0       0
  2125 ;;      Temps:          4       0       0       0       0       0       0
  2126 ;;      Totals:        15       0       0       0       0       0       0
  2127 ;;Total ram usage:       15 bytes
  2128 ;; Hardware stack levels required when called:    5
  2129 ;; This function calls:
  2130 ;;		_MyCloseI2C
  2131 ;;		_MyIdleI2C
  2132 ;;		_MyOpenI2C
  2133 ;;		_MyStartI2C
  2134 ;;		_MyStopI2C
  2135 ;;		___awdiv
  2136 ;;		___wmul
  2137 ;;		_animation0
  2138 ;;		_animation1
  2139 ;;		_animation2
  2140 ;;		_animation3
  2141 ;;		_animation4
  2142 ;;		_animation5
  2143 ;;		_animation6
  2144 ;;		_animation7
  2145 ;;		_clr_led
  2146 ;;		_is_key_pressed
  2147 ;;		_read_switch
  2148 ;;		_set_led
  2149 ;;		_was_key_pressed
  2150 ;;		_write
  2151 ;;		_write_display
  2152 ;; This function is called by:
  2153 ;;		Startup code after reset
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text0
  2158  007300                     __ptext0:
  2159                           	opt stack 0
  2160  007300                     _main:
  2161                           	opt stack 26
  2162                           
  2163                           ;newmain.c: 395: unsigned char sync_mode=0, slew=0,data,status,data_buffer[8];
  2164                           
  2165                           ;incstack = 0
  2166  007300  0E00               	movlw	0
  2167  007302  6E6B               	movwf	main@sync_mode,c
  2168  007304  0E00               	movlw	0
  2169  007306  6E6C               	movwf	main@slew,c
  2170                           
  2171                           ;newmain.c: 396: int i,j;
  2172                           ;newmain.c: 397: matrices[0].address= 0x70<<1;
  2173  007308  0EE0               	movlw	224
  2174  00730A  0100               	movlb	0	; () banked
  2175  00730C  6F80               	movwf	_matrices& (0+255),b
  2176                           
  2177                           ;newmain.c: 398: matrices[1].address= 0x71<<1;
  2178  00730E  0EE2               	movlw	226
  2179  007310  6F9D               	movwf	(_matrices+29)& (0+255),b
  2180                           
  2181                           ;newmain.c: 399: matrices[2].address= 0x72<<1;
  2182  007312  0EE4               	movlw	228
  2183  007314  6FBA               	movwf	(_matrices+58)& (0+255),b
  2184                           
  2185                           ;newmain.c: 400: matrices[3].address= 0x73<<1;
  2186  007316  0EE6               	movlw	230
  2187  007318  6FD7               	movwf	(_matrices+87)& (0+255),b
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;newmain.c: 402: MyCloseI2C();
  2191  00731A  EC3C  F027         	call	_MyCloseI2C	;wreg free
  2192                           
  2193                           ;newmain.c: 404: sync_mode = 0b00001000;
  2194  00731E  0E08               	movlw	8
  2195  007320  6E6B               	movwf	main@sync_mode,c
  2196                           
  2197                           ;newmain.c: 405: slew = 0b10000000;
  2198  007322  0E80               	movlw	128
  2199  007324  6E6C               	movwf	main@slew,c
  2200                           
  2201                           ;newmain.c: 406: MyOpenI2C(sync_mode,slew);
  2202  007326  C06C  F043         	movff	main@slew,MyOpenI2C@slew
  2203  00732A  506B               	movf	main@sync_mode,w,c
  2204  00732C  EC5C  F027         	call	_MyOpenI2C
  2205                           
  2206                           ;newmain.c: 408: OSCCONbits.IRCF=6;
  2207  007330  50D3               	movf	4051,w,c	;volatile
  2208  007332  0B8F               	andlw	-113
  2209  007334  0960               	iorlw	96
  2210  007336  6ED3               	movwf	4051,c	;volatile
  2211                           
  2212                           ;newmain.c: 409: SSPADD=9;
  2213  007338  0E09               	movlw	9
  2214  00733A  6EC8               	movwf	4040,c	;volatile
  2215                           
  2216                           ;newmain.c: 411: _delay((unsigned long)((1)*(4000000/4000.0)));
  2217  00733C  0EC8               	movlw	200
  2218  00733E                     u6537:
  2219  00733E  D000               	nop2	
  2220  007340  2EE8               	decfsz	wreg,f,c
  2221  007342  D7FD               	bra	u6537
  2222                           
  2223                           ;newmain.c: 412: for(i=0;i<4;i++)
  2224  007344  0E00               	movlw	0
  2225  007346  6E75               	movwf	main@i+1,c
  2226  007348  0E00               	movlw	0
  2227  00734A  6E74               	movwf	main@i,c
  2228  00734C                     l4559:
  2229  00734C  BE75               	btfsc	main@i+1,7,c
  2230  00734E  D006               	goto	l133
  2231  007350  5075               	movf	main@i+1,w,c
  2232  007352  E14B               	bnz	l4597
  2233  007354  0E04               	movlw	4
  2234  007356  5C74               	subwf	main@i,w,c
  2235  007358  B0D8               	btfsc	status,0,c
  2236  00735A  D047               	goto	u5860
  2237  00735C                     l133:
  2238                           
  2239                           ;newmain.c: 413: {
  2240                           ;newmain.c: 415: MyIdleI2C();
  2241  00735C  EC45  F027         	call	_MyIdleI2C	;wreg free
  2242                           
  2243                           ;newmain.c: 416: MyStartI2C();
  2244  007360  EC3E  F027         	call	_MyStartI2C	;wreg free
  2245                           
  2246                           ;newmain.c: 417: MyIdleI2C();
  2247  007364  EC45  F027         	call	_MyIdleI2C	;wreg free
  2248                           
  2249                           ;newmain.c: 418: write(matrices[i].address|0x00);
  2250  007368  C074  F043         	movff	main@i,___wmul@multiplier
  2251  00736C  C075  F044         	movff	main@i+1,___wmul@multiplier+1
  2252  007370  0E00               	movlw	0
  2253  007372  6E46               	movwf	___wmul@multiplicand+1,c
  2254  007374  0E1D               	movlw	29
  2255  007376  6E45               	movwf	___wmul@multiplicand,c
  2256  007378  EC7C  F027         	call	___wmul	;wreg free
  2257  00737C  0E80               	movlw	low _matrices
  2258  00737E  2443               	addwf	?___wmul,w,c
  2259  007380  6ED9               	movwf	fsr2l,c
  2260  007382  0E00               	movlw	high _matrices
  2261  007384  2044               	addwfc	?___wmul+1,w,c
  2262  007386  6EDA               	movwf	fsr2h,c
  2263  007388  50DF               	movf	indf2,w,c
  2264  00738A  EC8F  F027         	call	_write
  2265                           
  2266                           ;newmain.c: 419: MyIdleI2C();
  2267  00738E  EC45  F027         	call	_MyIdleI2C	;wreg free
  2268                           
  2269                           ;newmain.c: 420: write(0x21);
  2270  007392  0E21               	movlw	33
  2271  007394  EC8F  F027         	call	_write
  2272                           
  2273                           ;newmain.c: 421: MyIdleI2C();
  2274  007398  EC45  F027         	call	_MyIdleI2C	;wreg free
  2275                           
  2276                           ;newmain.c: 422: MyStopI2C();
  2277  00739C  EC40  F027         	call	_MyStopI2C	;wreg free
  2278                           
  2279                           ;newmain.c: 425: MyIdleI2C();
  2280  0073A0  EC45  F027         	call	_MyIdleI2C	;wreg free
  2281                           
  2282                           ;newmain.c: 426: MyStartI2C();
  2283  0073A4  EC3E  F027         	call	_MyStartI2C	;wreg free
  2284                           
  2285                           ;newmain.c: 427: MyIdleI2C();
  2286  0073A8  EC45  F027         	call	_MyIdleI2C	;wreg free
  2287                           
  2288                           ;newmain.c: 428: write(matrices[i].address| 0x00);
  2289  0073AC  C074  F043         	movff	main@i,___wmul@multiplier
  2290  0073B0  C075  F044         	movff	main@i+1,___wmul@multiplier+1
  2291  0073B4  0E00               	movlw	0
  2292  0073B6  6E46               	movwf	___wmul@multiplicand+1,c
  2293  0073B8  0E1D               	movlw	29
  2294  0073BA  6E45               	movwf	___wmul@multiplicand,c
  2295  0073BC  EC7C  F027         	call	___wmul	;wreg free
  2296  0073C0  0E80               	movlw	low _matrices
  2297  0073C2  2443               	addwf	?___wmul,w,c
  2298  0073C4  6ED9               	movwf	fsr2l,c
  2299  0073C6  0E00               	movlw	high _matrices
  2300  0073C8  2044               	addwfc	?___wmul+1,w,c
  2301  0073CA  6EDA               	movwf	fsr2h,c
  2302  0073CC  50DF               	movf	indf2,w,c
  2303  0073CE  EC8F  F027         	call	_write
  2304                           
  2305                           ;newmain.c: 429: MyIdleI2C();
  2306  0073D2  EC45  F027         	call	_MyIdleI2C	;wreg free
  2307                           
  2308                           ;newmain.c: 430: write(0b10000001);
  2309  0073D6  0E81               	movlw	129
  2310  0073D8  EC8F  F027         	call	_write
  2311                           
  2312                           ;newmain.c: 431: MyIdleI2C();
  2313  0073DC  EC45  F027         	call	_MyIdleI2C	;wreg free
  2314                           
  2315                           ;newmain.c: 432: MyStopI2C();
  2316  0073E0  EC40  F027         	call	_MyStopI2C	;wreg free
  2317  0073E4  4A74               	infsnz	main@i,f,c
  2318  0073E6  2A75               	incf	main@i+1,f,c
  2319  0073E8  D7B1               	goto	l4559
  2320  0073EA                     u5860:
  2321  0073EA                     l4597:
  2322                           
  2323                           ;newmain.c: 433: }
  2324                           ;newmain.c: 435: uint8_t column = 0, rightbutton = 0, m = 0, n = 0, h = 0;
  2325  0073EA  0E00               	movlw	0
  2326  0073EC  6E6F               	movwf	main@column,c
  2327  0073EE  0E00               	movlw	0
  2328  0073F0  6E6E               	movwf	main@rightbutton,c
  2329  0073F2  0E00               	movlw	0
  2330  0073F4  6E70               	movwf	main@m,c
  2331  0073F6  0E00               	movlw	0
  2332  0073F8  6E6D               	movwf	main@n,c
  2333  0073FA  0E00               	movlw	0
  2334  0073FC  6E73               	movwf	main@h,c
  2335                           
  2336                           ;newmain.c: 437: for(i=0;i<8;i++)
  2337  0073FE  0E00               	movlw	0
  2338  007400  6E75               	movwf	main@i+1,c
  2339  007402  0E00               	movlw	0
  2340  007404  6E74               	movwf	main@i,c
  2341  007406                     l4599:
  2342  007406  BE75               	btfsc	main@i+1,7,c
  2343  007408  D006               	goto	l135
  2344  00740A  5075               	movf	main@i+1,w,c
  2345  00740C  E137               	bnz	l4619
  2346  00740E  0E08               	movlw	8
  2347  007410  5C74               	subwf	main@i,w,c
  2348  007412  B0D8               	btfsc	status,0,c
  2349  007414  D033               	goto	u5900
  2350  007416                     l135:
  2351                           
  2352                           ;newmain.c: 438: for(j=0;j<8;j++)
  2353  007416  0E00               	movlw	0
  2354  007418  6E72               	movwf	main@j+1,c
  2355  00741A  0E00               	movlw	0
  2356  00741C  6E71               	movwf	main@j,c
  2357  00741E                     l4605:
  2358  00741E  BE72               	btfsc	main@j+1,7,c
  2359  007420  D006               	goto	l137
  2360  007422  5072               	movf	main@j+1,w,c
  2361  007424  E128               	bnz	l4615
  2362  007426  0E08               	movlw	8
  2363  007428  5C71               	subwf	main@j,w,c
  2364  00742A  B0D8               	btfsc	status,0,c
  2365  00742C  D024               	goto	u5890
  2366  00742E                     l137:
  2367                           
  2368                           ;newmain.c: 439: set_led(Buttons[i][j]);
  2369  00742E  C074  F067         	movff	main@i,??_main
  2370  007432  C075  F068         	movff	main@i+1,??_main+1
  2371  007436  90D8               	bcf	status,0,c
  2372  007438  3667               	rlcf	??_main,f,c
  2373  00743A  3668               	rlcf	??_main+1,f,c
  2374  00743C  90D8               	bcf	status,0,c
  2375  00743E  3667               	rlcf	??_main,f,c
  2376  007440  3668               	rlcf	??_main+1,f,c
  2377  007442  90D8               	bcf	status,0,c
  2378  007444  3667               	rlcf	??_main,f,c
  2379  007446  3668               	rlcf	??_main+1,f,c
  2380  007448  0EF9               	movlw	low _Buttons
  2381  00744A  6E69               	movwf	(??_main+2)& (0+255),c
  2382  00744C  0E7E               	movlw	high _Buttons
  2383  00744E  6E6A               	movwf	(??_main+3)& (0+255),c
  2384  007450  5067               	movf	??_main,w,c
  2385  007452  2669               	addwf	??_main+2,f,c
  2386  007454  5068               	movf	??_main+1,w,c
  2387  007456  226A               	addwfc	??_main+3,f,c
  2388  007458  5071               	movf	main@j,w,c
  2389  00745A  2669               	addwf	??_main+2,f,c
  2390  00745C  5072               	movf	main@j+1,w,c
  2391  00745E  226A               	addwfc	??_main+3,f,c
  2392  007460  C069  FFF6         	movff	??_main+2,tblptrl
  2393  007464  C06A  FFF7         	movff	??_main+3,tblptrh
  2394  007468                     	if	0	;tblptru may be non-zero
  2395  007468                     	endif
  2396  007468                     	if	0	;tblptru may be non-zero
  2397  007468                     	endif
  2398  007468  0008               	tblrd		*
  2399  00746A  50F5               	movf	tablat,w,c
  2400  00746C  EC02  F029         	call	_set_led
  2401  007470  4A71               	infsnz	main@j,f,c
  2402  007472  2A72               	incf	main@j+1,f,c
  2403  007474  D7D4               	goto	l4605
  2404  007476                     u5890:
  2405  007476                     l4615:
  2406  007476  4A74               	infsnz	main@i,f,c
  2407  007478  2A75               	incf	main@i+1,f,c
  2408  00747A  D7C5               	goto	l4599
  2409  00747C                     u5900:
  2410  00747C                     l4619:
  2411                           
  2412                           ;newmain.c: 440: write_display();
  2413  00747C  ECB4  F029         	call	_write_display	;wreg free
  2414                           
  2415                           ;newmain.c: 441: _delay((unsigned long)((50)*(4000000/4000.0)));
  2416  007480  0E41               	movlw	65
  2417  007482  6E67               	movwf	??_main& (0+255),c
  2418  007484  0EEE               	movlw	238
  2419  007486                     u6547:
  2420  007486  2EE8               	decfsz	wreg,f,c
  2421  007488  D7FE               	bra	u6547
  2422  00748A  2E67               	decfsz	??_main& (0+255),f,c
  2423  00748C  D7FC               	bra	u6547
  2424  00748E  D000               	nop2	
  2425                           
  2426                           ;newmain.c: 442: for(i=0;i<64;i++)
  2427  007490  0E00               	movlw	0
  2428  007492  6E75               	movwf	main@i+1,c
  2429  007494  0E00               	movlw	0
  2430  007496  6E74               	movwf	main@i,c
  2431  007498                     l4625:
  2432  007498  BE75               	btfsc	main@i+1,7,c
  2433  00749A  D006               	goto	l139
  2434  00749C  5075               	movf	main@i+1,w,c
  2435  00749E  E10A               	bnz	l4635
  2436  0074A0  0E40               	movlw	64
  2437  0074A2  5C74               	subwf	main@i,w,c
  2438  0074A4  B0D8               	btfsc	status,0,c
  2439  0074A6  D006               	goto	u5920
  2440  0074A8                     l139:
  2441                           
  2442                           ;newmain.c: 443: clr_led(i);
  2443  0074A8  5074               	movf	main@i,w,c
  2444  0074AA  EC59  F029         	call	_clr_led
  2445  0074AE  4A74               	infsnz	main@i,f,c
  2446  0074B0  2A75               	incf	main@i+1,f,c
  2447  0074B2  D7F2               	goto	l4625
  2448  0074B4                     u5920:
  2449  0074B4                     l4635:
  2450                           
  2451                           ;newmain.c: 444: write_display();
  2452  0074B4  ECB4  F029         	call	_write_display	;wreg free
  2453  0074B8                     
  2454                           ;newmain.c: 447: {
  2455                           ;newmain.c: 448: _delay((unsigned long)((30)*(4000000/4000.0)));
  2456  0074B8  0E27               	movlw	39
  2457  0074BA  6E67               	movwf	??_main& (0+255),c
  2458  0074BC  0EF5               	movlw	245
  2459  0074BE                     u6557:
  2460  0074BE  2EE8               	decfsz	wreg,f,c
  2461  0074C0  D7FE               	bra	u6557
  2462  0074C2  2E67               	decfsz	??_main& (0+255),f,c
  2463  0074C4  D7FC               	bra	u6557
  2464  0074C6  F000               	nop	
  2465                           
  2466                           ;newmain.c: 449: if(read_switch())
  2467  0074C8  EC01  F02B         	call	_read_switch	;wreg free
  2468  0074CC  0900               	iorlw	0
  2469  0074CE  B4D8               	btfsc	status,2,c
  2470  0074D0  D7F3               	goto	l141
  2471                           
  2472                           ;newmain.c: 450: {
  2473                           ;newmain.c: 451: for (h = 0; h < 64; h++) {
  2474  0074D2  0E00               	movlw	0
  2475  0074D4  6E73               	movwf	main@h,c
  2476  0074D6                     l4643:
  2477  0074D6  0E3F               	movlw	63
  2478  0074D8  6473               	cpfsgt	main@h,c
  2479  0074DA  D001               	goto	l143
  2480  0074DC  D28B               	goto	u6460
  2481  0074DE                     l143:
  2482                           
  2483                           ;newmain.c: 452: if (is_key_pressed(h)&&(!was_key_pressed(h))) {
  2484  0074DE  5073               	movf	main@h,w,c
  2485  0074E0  EC60  F028         	call	_is_key_pressed
  2486  0074E4  0900               	iorlw	0
  2487  0074E6  B4D8               	btfsc	status,2,c
  2488  0074E8  D283               	goto	l196
  2489  0074EA  5073               	movf	main@h,w,c
  2490  0074EC  ECB1  F028         	call	_was_key_pressed
  2491  0074F0  0900               	iorlw	0
  2492  0074F2  A4D8               	btfss	status,2,c
  2493  0074F4  D27D               	goto	l196
  2494                           
  2495                           ;newmain.c: 453: for (i = 0; i < 8; i++) {
  2496  0074F6  0E00               	movlw	0
  2497  0074F8  6E75               	movwf	main@i+1,c
  2498  0074FA  0E00               	movlw	0
  2499  0074FC  6E74               	movwf	main@i,c
  2500  0074FE                     l4653:
  2501  0074FE  BE75               	btfsc	main@i+1,7,c
  2502  007500  D006               	goto	l146
  2503  007502  5075               	movf	main@i+1,w,c
  2504  007504  E131               	bnz	l4665
  2505  007506  0E08               	movlw	8
  2506  007508  5C74               	subwf	main@i,w,c
  2507  00750A  B0D8               	btfsc	status,0,c
  2508  00750C  D02D               	goto	u5990
  2509  00750E                     l146:
  2510                           
  2511                           ;newmain.c: 454: if (h == Buttons[i][7]) {
  2512  00750E  C074  F067         	movff	main@i,??_main
  2513  007512  C075  F068         	movff	main@i+1,??_main+1
  2514  007516  90D8               	bcf	status,0,c
  2515  007518  3667               	rlcf	??_main,f,c
  2516  00751A  3668               	rlcf	??_main+1,f,c
  2517  00751C  90D8               	bcf	status,0,c
  2518  00751E  3667               	rlcf	??_main,f,c
  2519  007520  3668               	rlcf	??_main+1,f,c
  2520  007522  90D8               	bcf	status,0,c
  2521  007524  3667               	rlcf	??_main,f,c
  2522  007526  3668               	rlcf	??_main+1,f,c
  2523  007528  0E07               	movlw	7
  2524  00752A  2667               	addwf	??_main,f,c
  2525  00752C  0E00               	movlw	0
  2526  00752E  2268               	addwfc	??_main+1,f,c
  2527  007530  0EF9               	movlw	low _Buttons
  2528  007532  2467               	addwf	??_main,w,c
  2529  007534  6EF6               	movwf	tblptrl,c
  2530  007536  0E7E               	movlw	high _Buttons
  2531  007538  2068               	addwfc	??_main+1,w,c
  2532  00753A  6EF7               	movwf	tblptrh,c
  2533  00753C                     	if	0	;There are less than 3 active tblptr bytes
  2534  00753C                     	endif
  2535  00753C  0008               	tblrd		*
  2536  00753E  50F5               	movf	tablat,w,c
  2537  007540  1873               	xorwf	main@h,w,c
  2538  007542  A4D8               	btfss	status,2,c
  2539  007544  D00E               	goto	l148
  2540                           
  2541                           ;newmain.c: 455: rightbutton = (h - 19) / 4;
  2542  007546  0EED               	movlw	237
  2543  007548  2473               	addwf	main@h,w,c
  2544  00754A  6E43               	movwf	___awdiv@dividend,c
  2545  00754C  6A44               	clrf	___awdiv@dividend+1,c
  2546  00754E  0EFF               	movlw	255
  2547  007550  2244               	addwfc	___awdiv@dividend+1,f,c
  2548  007552  0E00               	movlw	0
  2549  007554  6E46               	movwf	___awdiv@divisor+1,c
  2550  007556  0E04               	movlw	4
  2551  007558  6E45               	movwf	___awdiv@divisor,c
  2552  00755A  EC1E  F028         	call	___awdiv	;wreg free
  2553  00755E  5043               	movf	?___awdiv,w,c
  2554  007560  6E6E               	movwf	main@rightbutton,c
  2555  007562                     l148:
  2556  007562  4A74               	infsnz	main@i,f,c
  2557  007564  2A75               	incf	main@i+1,f,c
  2558  007566  D7CB               	goto	l4653
  2559  007568                     u5990:
  2560  007568                     l4665:
  2561                           
  2562                           ;newmain.c: 456: }
  2563                           ;newmain.c: 457: }
  2564                           ;newmain.c: 459: for (i = 0; i < 8; i++) {
  2565  007568  0E00               	movlw	0
  2566  00756A  6E75               	movwf	main@i+1,c
  2567  00756C  0E00               	movlw	0
  2568  00756E  6E74               	movwf	main@i,c
  2569  007570                     l4667:
  2570  007570  BE75               	btfsc	main@i+1,7,c
  2571  007572  D006               	goto	l149
  2572  007574  5075               	movf	main@i+1,w,c
  2573  007576  E141               	bnz	l4689
  2574  007578  0E08               	movlw	8
  2575  00757A  5C74               	subwf	main@i,w,c
  2576  00757C  B0D8               	btfsc	status,0,c
  2577  00757E  D03D               	goto	u6040
  2578  007580                     l149:
  2579                           
  2580                           ;newmain.c: 460: for (j = 0; j < 8; j++) {
  2581  007580  0E00               	movlw	0
  2582  007582  6E72               	movwf	main@j+1,c
  2583  007584  0E00               	movlw	0
  2584  007586  6E71               	movwf	main@j,c
  2585  007588                     l4673:
  2586  007588  BE72               	btfsc	main@j+1,7,c
  2587  00758A  D006               	goto	l151
  2588  00758C  5072               	movf	main@j+1,w,c
  2589  00758E  E132               	bnz	l4685
  2590  007590  0E08               	movlw	8
  2591  007592  5C71               	subwf	main@j,w,c
  2592  007594  B0D8               	btfsc	status,0,c
  2593  007596  D02E               	goto	u6030
  2594  007598                     l151:
  2595                           
  2596                           ;newmain.c: 461: if (h == Buttons[i][j]) {
  2597  007598  C074  F067         	movff	main@i,??_main
  2598  00759C  C075  F068         	movff	main@i+1,??_main+1
  2599  0075A0  90D8               	bcf	status,0,c
  2600  0075A2  3667               	rlcf	??_main,f,c
  2601  0075A4  3668               	rlcf	??_main+1,f,c
  2602  0075A6  90D8               	bcf	status,0,c
  2603  0075A8  3667               	rlcf	??_main,f,c
  2604  0075AA  3668               	rlcf	??_main+1,f,c
  2605  0075AC  90D8               	bcf	status,0,c
  2606  0075AE  3667               	rlcf	??_main,f,c
  2607  0075B0  3668               	rlcf	??_main+1,f,c
  2608  0075B2  0EF9               	movlw	low _Buttons
  2609  0075B4  6E69               	movwf	(??_main+2)& (0+255),c
  2610  0075B6  0E7E               	movlw	high _Buttons
  2611  0075B8  6E6A               	movwf	(??_main+3)& (0+255),c
  2612  0075BA  5067               	movf	??_main,w,c
  2613  0075BC  2669               	addwf	??_main+2,f,c
  2614  0075BE  5068               	movf	??_main+1,w,c
  2615  0075C0  226A               	addwfc	??_main+3,f,c
  2616  0075C2  5071               	movf	main@j,w,c
  2617  0075C4  2669               	addwf	??_main+2,f,c
  2618  0075C6  5072               	movf	main@j+1,w,c
  2619  0075C8  226A               	addwfc	??_main+3,f,c
  2620  0075CA  C069  FFF6         	movff	??_main+2,tblptrl
  2621  0075CE  C06A  FFF7         	movff	??_main+3,tblptrh
  2622  0075D2                     	if	0	;tblptru may be non-zero
  2623  0075D2                     	endif
  2624  0075D2                     	if	0	;tblptru may be non-zero
  2625  0075D2                     	endif
  2626  0075D2  0008               	tblrd		*
  2627  0075D4  50F5               	movf	tablat,w,c
  2628  0075D6  1873               	xorwf	main@h,w,c
  2629  0075D8  A4D8               	btfss	status,2,c
  2630  0075DA  D009               	goto	l153
  2631                           
  2632                           ;newmain.c: 462: column = Buttons[0][j];
  2633  0075DC  0EF9               	movlw	low _Buttons
  2634  0075DE  2471               	addwf	main@j,w,c
  2635  0075E0  6EF6               	movwf	tblptrl,c
  2636  0075E2  0E7E               	movlw	high _Buttons
  2637  0075E4  2072               	addwfc	main@j+1,w,c
  2638  0075E6  6EF7               	movwf	tblptrh,c
  2639  0075E8                     	if	0	;There are less than 3 active tblptr bytes
  2640  0075E8                     	endif
  2641  0075E8  0008               	tblrd		*
  2642  0075EA  CFF5 F06F          	movff	tablat,main@column
  2643  0075EE                     l153:
  2644  0075EE  4A71               	infsnz	main@j,f,c
  2645  0075F0  2A72               	incf	main@j+1,f,c
  2646  0075F2  D7CA               	goto	l4673
  2647  0075F4                     u6030:
  2648  0075F4                     l4685:
  2649  0075F4  4A74               	infsnz	main@i,f,c
  2650  0075F6  2A75               	incf	main@i+1,f,c
  2651  0075F8  D7BB               	goto	l4667
  2652  0075FA                     u6040:
  2653  0075FA                     l4689:
  2654                           
  2655                           ;newmain.c: 463: }
  2656                           ;newmain.c: 464: }
  2657                           ;newmain.c: 465: }
  2658                           ;newmain.c: 468: if (column == 19) {
  2659  0075FA  0E13               	movlw	19
  2660  0075FC  186F               	xorwf	main@column,w,c
  2661  0075FE  A4D8               	btfss	status,2,c
  2662  007600  D014               	goto	l154
  2663                           
  2664                           ;newmain.c: 469: for (i = 0; i < 64; i++)
  2665  007602  0E00               	movlw	0
  2666  007604  6E75               	movwf	main@i+1,c
  2667  007606  0E00               	movlw	0
  2668  007608  6E74               	movwf	main@i,c
  2669  00760A                     l4693:
  2670  00760A  BE75               	btfsc	main@i+1,7,c
  2671  00760C  D006               	goto	l155
  2672  00760E  5075               	movf	main@i+1,w,c
  2673  007610  E10A               	bnz	l4703
  2674  007612  0E40               	movlw	64
  2675  007614  5C74               	subwf	main@i,w,c
  2676  007616  B0D8               	btfsc	status,0,c
  2677  007618  D006               	goto	u6070
  2678  00761A                     l155:
  2679                           
  2680                           ;newmain.c: 470: clr_led(i);
  2681  00761A  5074               	movf	main@i,w,c
  2682  00761C  EC59  F029         	call	_clr_led
  2683  007620  4A74               	infsnz	main@i,f,c
  2684  007622  2A75               	incf	main@i+1,f,c
  2685  007624  D7F2               	goto	l4693
  2686  007626                     u6070:
  2687  007626                     l4703:
  2688                           
  2689                           ;newmain.c: 471: write_display();
  2690  007626  ECB4  F029         	call	_write_display	;wreg free
  2691  00762A                     l154:
  2692                           
  2693                           ;newmain.c: 472: }
  2694                           ;newmain.c: 474: if (rightbutton == 0 && column != 19) {
  2695  00762A  506E               	movf	main@rightbutton,w,c
  2696  00762C  A4D8               	btfss	status,2,c
  2697  00762E  D0AA               	goto	l157
  2698  007630  0E13               	movlw	19
  2699  007632  186F               	xorwf	main@column,w,c
  2700  007634  B4D8               	btfsc	status,2,c
  2701  007636  D0A6               	goto	l157
  2702                           
  2703                           ;newmain.c: 475: for (i = 0; i < 14; i++) {
  2704  007638  0E00               	movlw	0
  2705  00763A  6E75               	movwf	main@i+1,c
  2706  00763C  0E00               	movlw	0
  2707  00763E  6E74               	movwf	main@i,c
  2708  007640                     l4711:
  2709  007640  BE75               	btfsc	main@i+1,7,c
  2710  007642  D006               	goto	l158
  2711  007644  5075               	movf	main@i+1,w,c
  2712  007646  E156               	bnz	l4749
  2713  007648  0E0E               	movlw	14
  2714  00764A  5C74               	subwf	main@i,w,c
  2715  00764C  B0D8               	btfsc	status,0,c
  2716  00764E  D052               	goto	u6150
  2717  007650                     l158:
  2718                           
  2719                           ;newmain.c: 476: if (h == show0_1[i]) {
  2720  007650  0E8B               	movlw	low _show0_1
  2721  007652  2474               	addwf	main@i,w,c
  2722  007654  6EF6               	movwf	tblptrl,c
  2723  007656  0E7F               	movlw	high _show0_1
  2724  007658  2075               	addwfc	main@i+1,w,c
  2725  00765A  6EF7               	movwf	tblptrh,c
  2726  00765C                     	if	0	;There are less than 3 active tblptr bytes
  2727  00765C                     	endif
  2728  00765C  0008               	tblrd		*
  2729  00765E  50F5               	movf	tablat,w,c
  2730  007660  1873               	xorwf	main@h,w,c
  2731  007662  A4D8               	btfss	status,2,c
  2732  007664  D002               	goto	l160
  2733                           
  2734                           ;newmain.c: 477: m = 1;
  2735  007666  0E01               	movlw	1
  2736  007668  D03E               	goto	L3
  2737  00766A                     l160:
  2738  00766A  C074  F067         	movff	main@i,??_main
  2739  00766E  C075  F068         	movff	main@i+1,??_main+1
  2740  007672  1E67               	comf	??_main,f,c
  2741  007674  1E68               	comf	??_main+1,f,c
  2742  007676  4A67               	infsnz	??_main,f,c
  2743  007678  2A68               	incf	??_main+1,f,c
  2744  00767A  0E27               	movlw	39
  2745  00767C  2667               	addwf	??_main,f,c
  2746  00767E  0E00               	movlw	0
  2747  007680  2268               	addwfc	??_main+1,f,c
  2748  007682  0E8B               	movlw	low _show0_1
  2749  007684  2467               	addwf	??_main,w,c
  2750  007686  6EF6               	movwf	tblptrl,c
  2751  007688  0E7F               	movlw	high _show0_1
  2752  00768A  2068               	addwfc	??_main+1,w,c
  2753  00768C  6EF7               	movwf	tblptrh,c
  2754  00768E                     	if	0	;There are less than 3 active tblptr bytes
  2755  00768E                     	endif
  2756  00768E  0008               	tblrd		*
  2757  007690  50F5               	movf	tablat,w,c
  2758  007692  1873               	xorwf	main@h,w,c
  2759  007694  A4D8               	btfss	status,2,c
  2760  007696  D002               	goto	l162
  2761                           
  2762                           ;newmain.c: 481: m = 2;
  2763  007698  0E02               	movlw	2
  2764  00769A  D025               	goto	L3
  2765  00769C                     l162:
  2766  00769C  0E63               	movlw	low _show0_2
  2767  00769E  2474               	addwf	main@i,w,c
  2768  0076A0  6EF6               	movwf	tblptrl,c
  2769  0076A2  0E7F               	movlw	high _show0_2
  2770  0076A4  2075               	addwfc	main@i+1,w,c
  2771  0076A6  6EF7               	movwf	tblptrh,c
  2772  0076A8                     	if	0	;There are less than 3 active tblptr bytes
  2773  0076A8                     	endif
  2774  0076A8  0008               	tblrd		*
  2775  0076AA  50F5               	movf	tablat,w,c
  2776  0076AC  1873               	xorwf	main@h,w,c
  2777  0076AE  A4D8               	btfss	status,2,c
  2778  0076B0  D002               	goto	l164
  2779                           
  2780                           ;newmain.c: 485: m = 3;
  2781  0076B2  0E03               	movlw	3
  2782  0076B4  D018               	goto	L3
  2783  0076B6                     l164:
  2784  0076B6  C074  F067         	movff	main@i,??_main
  2785  0076BA  C075  F068         	movff	main@i+1,??_main+1
  2786  0076BE  1E67               	comf	??_main,f,c
  2787  0076C0  1E68               	comf	??_main+1,f,c
  2788  0076C2  4A67               	infsnz	??_main,f,c
  2789  0076C4  2A68               	incf	??_main+1,f,c
  2790  0076C6  0E27               	movlw	39
  2791  0076C8  2667               	addwf	??_main,f,c
  2792  0076CA  0E00               	movlw	0
  2793  0076CC  2268               	addwfc	??_main+1,f,c
  2794  0076CE  0E63               	movlw	low _show0_2
  2795  0076D0  2467               	addwf	??_main,w,c
  2796  0076D2  6EF6               	movwf	tblptrl,c
  2797  0076D4  0E7F               	movlw	high _show0_2
  2798  0076D6  2068               	addwfc	??_main+1,w,c
  2799  0076D8  6EF7               	movwf	tblptrh,c
  2800  0076DA                     	if	0	;There are less than 3 active tblptr bytes
  2801  0076DA                     	endif
  2802  0076DA  0008               	tblrd		*
  2803  0076DC  50F5               	movf	tablat,w,c
  2804  0076DE  1873               	xorwf	main@h,w,c
  2805  0076E0  A4D8               	btfss	status,2,c
  2806  0076E2  D005               	goto	l166
  2807                           
  2808                           ;newmain.c: 489: m = 4;
  2809  0076E4  0E04               	movlw	4
  2810  0076E6                     L3:
  2811  0076E6  6E70               	movwf	main@m,c
  2812                           
  2813                           ;newmain.c: 490: n = i;
  2814  0076E8  C074  F06D         	movff	main@i,main@n
  2815                           
  2816                           ;newmain.c: 491: break;
  2817  0076EC  D003               	goto	u6150
  2818  0076EE                     l166:
  2819  0076EE  4A74               	infsnz	main@i,f,c
  2820  0076F0  2A75               	incf	main@i+1,f,c
  2821  0076F2  D7A6               	goto	l4711
  2822  0076F4                     u6150:
  2823  0076F4                     l4749:
  2824                           
  2825                           ;newmain.c: 492: }
  2826                           ;newmain.c: 493: }
  2827                           ;newmain.c: 494: for (i = 0; i < 2; i++) {
  2828  0076F4  0E00               	movlw	0
  2829  0076F6  6E75               	movwf	main@i+1,c
  2830  0076F8  0E00               	movlw	0
  2831  0076FA  6E74               	movwf	main@i,c
  2832  0076FC                     l4751:
  2833  0076FC  BE75               	btfsc	main@i+1,7,c
  2834  0076FE  D006               	goto	l167
  2835  007700  5075               	movf	main@i+1,w,c
  2836  007702  E13A               	bnz	l4775
  2837  007704  0E02               	movlw	2
  2838  007706  5C74               	subwf	main@i,w,c
  2839  007708  B0D8               	btfsc	status,0,c
  2840  00770A  D036               	goto	u6200
  2841  00770C                     l167:
  2842                           
  2843                           ;newmain.c: 495: for (j = 0; j < 8; j++) {
  2844  00770C  0E00               	movlw	0
  2845  00770E  6E72               	movwf	main@j+1,c
  2846  007710  0E00               	movlw	0
  2847  007712  6E71               	movwf	main@j,c
  2848  007714                     l4757:
  2849  007714  BE72               	btfsc	main@j+1,7,c
  2850  007716  D006               	goto	l169
  2851  007718  5072               	movf	main@j+1,w,c
  2852  00771A  E12B               	bnz	l4771
  2853  00771C  0E08               	movlw	8
  2854  00771E  5C71               	subwf	main@j,w,c
  2855  007720  B0D8               	btfsc	status,0,c
  2856  007722  D027               	goto	u6190
  2857  007724                     l169:
  2858                           
  2859                           ;newmain.c: 496: if (h == show0_3[i][j]) {
  2860  007724  C074  F043         	movff	main@i,___wmul@multiplier
  2861  007728  C075  F044         	movff	main@i+1,___wmul@multiplier+1
  2862  00772C  0E00               	movlw	0
  2863  00772E  6E46               	movwf	___wmul@multiplicand+1,c
  2864  007730  0E14               	movlw	20
  2865  007732  6E45               	movwf	___wmul@multiplicand,c
  2866  007734  EC7C  F027         	call	___wmul	;wreg free
  2867  007738  0ED5               	movlw	low _show0_3
  2868  00773A  6E67               	movwf	??_main& (0+255),c
  2869  00773C  0E7B               	movlw	high _show0_3
  2870  00773E  6E68               	movwf	(??_main+1)& (0+255),c
  2871  007740  5043               	movf	?___wmul,w,c
  2872  007742  2667               	addwf	??_main,f,c
  2873  007744  5044               	movf	?___wmul+1,w,c
  2874  007746  2268               	addwfc	??_main+1,f,c
  2875  007748  5071               	movf	main@j,w,c
  2876  00774A  2667               	addwf	??_main,f,c
  2877  00774C  5072               	movf	main@j+1,w,c
  2878  00774E  2268               	addwfc	??_main+1,f,c
  2879  007750  C067  FFF6         	movff	??_main,tblptrl
  2880  007754  C068  FFF7         	movff	??_main+1,tblptrh
  2881  007758                     	if	0	;tblptru may be non-zero
  2882  007758                     	endif
  2883  007758                     	if	0	;tblptru may be non-zero
  2884  007758                     	endif
  2885  007758  0008               	tblrd		*
  2886  00775A  50F5               	movf	tablat,w,c
  2887  00775C  1873               	xorwf	main@h,w,c
  2888  00775E  A4D8               	btfss	status,2,c
  2889  007760  D005               	goto	l171
  2890                           
  2891                           ;newmain.c: 497: m = 5;
  2892  007762  0E05               	movlw	5
  2893  007764  6E70               	movwf	main@m,c
  2894                           
  2895                           ;newmain.c: 498: n = i;
  2896  007766  C074  F06D         	movff	main@i,main@n
  2897                           
  2898                           ;newmain.c: 499: break;
  2899  00776A  D003               	goto	u6190
  2900  00776C                     l171:
  2901  00776C  4A71               	infsnz	main@j,f,c
  2902  00776E  2A72               	incf	main@j+1,f,c
  2903  007770  D7D1               	goto	l4757
  2904  007772                     u6190:
  2905  007772                     l4771:
  2906  007772  4A74               	infsnz	main@i,f,c
  2907  007774  2A75               	incf	main@i+1,f,c
  2908  007776  D7C2               	goto	l4751
  2909  007778                     u6200:
  2910  007778                     l4775:
  2911                           
  2912                           ;newmain.c: 500: }
  2913                           ;newmain.c: 501: }
  2914                           ;newmain.c: 502: }
  2915                           ;newmain.c: 503: animation0(m, n);
  2916  007778  C06D  F058         	movff	main@n,animation0@n
  2917  00777C  5070               	movf	main@m,w,c
  2918  00777E  EC5D  F02D         	call	_animation0
  2919                           
  2920                           ;newmain.c: 504: } else if (rightbutton == 1 && column != 19) {
  2921  007782  D136               	goto	l196
  2922  007784                     l157:
  2923  007784  046E               	decf	main@rightbutton,w,c
  2924  007786  A4D8               	btfss	status,2,c
  2925  007788  D018               	goto	l173
  2926  00778A  0E13               	movlw	19
  2927  00778C  186F               	xorwf	main@column,w,c
  2928  00778E  B4D8               	btfsc	status,2,c
  2929  007790  D014               	goto	l173
  2930                           
  2931                           ;newmain.c: 506: m = h / 16;
  2932  007792  C073  F043         	movff	main@h,___awdiv@dividend
  2933  007796  6A44               	clrf	___awdiv@dividend+1,c
  2934  007798  0E00               	movlw	0
  2935  00779A  6E46               	movwf	___awdiv@divisor+1,c
  2936  00779C  0E10               	movlw	16
  2937  00779E  6E45               	movwf	___awdiv@divisor,c
  2938  0077A0  EC1E  F028         	call	___awdiv	;wreg free
  2939  0077A4  5043               	movf	?___awdiv,w,c
  2940  0077A6  6E70               	movwf	main@m,c
  2941                           
  2942                           ;newmain.c: 507: n = h % 16;
  2943  0077A8  5073               	movf	main@h,w,c
  2944  0077AA  0B0F               	andlw	15
  2945  0077AC  6E6D               	movwf	main@n,c
  2946                           
  2947                           ;newmain.c: 508: animation1(m, n);
  2948  0077AE  C06D  F058         	movff	main@n,animation1@n
  2949  0077B2  5070               	movf	main@m,w,c
  2950  0077B4  EC4E  F02A         	call	_animation1
  2951                           
  2952                           ;newmain.c: 509: } else if (rightbutton == 2 && column != 19) {
  2953  0077B8  D11B               	goto	l196
  2954  0077BA                     l173:
  2955  0077BA  0E02               	movlw	2
  2956  0077BC  186E               	xorwf	main@rightbutton,w,c
  2957  0077BE  A4D8               	btfss	status,2,c
  2958  0077C0  D01A               	goto	l175
  2959  0077C2  0E13               	movlw	19
  2960  0077C4  186F               	xorwf	main@column,w,c
  2961  0077C6  B4D8               	btfsc	status,2,c
  2962  0077C8  D016               	goto	l175
  2963                           
  2964                           ;newmain.c: 510: m = h / 16;
  2965  0077CA  C073  F043         	movff	main@h,___awdiv@dividend
  2966  0077CE  6A44               	clrf	___awdiv@dividend+1,c
  2967  0077D0  0E00               	movlw	0
  2968  0077D2  6E46               	movwf	___awdiv@divisor+1,c
  2969  0077D4  0E10               	movlw	16
  2970  0077D6  6E45               	movwf	___awdiv@divisor,c
  2971  0077D8  EC1E  F028         	call	___awdiv	;wreg free
  2972  0077DC  5043               	movf	?___awdiv,w,c
  2973  0077DE  6E70               	movwf	main@m,c
  2974                           
  2975                           ;newmain.c: 511: n = h % 16;
  2976  0077E0  5073               	movf	main@h,w,c
  2977  0077E2  0B0F               	andlw	15
  2978  0077E4  6E6D               	movwf	main@n,c
  2979                           
  2980                           ;newmain.c: 512: animation2(m, n, h);
  2981  0077E6  C06D  F058         	movff	main@n,animation2@n
  2982  0077EA  C073  F059         	movff	main@h,animation2@h
  2983  0077EE  5070               	movf	main@m,w,c
  2984  0077F0  EC59  F034         	call	_animation2
  2985                           
  2986                           ;newmain.c: 513: } else if (rightbutton == 3 && column != 19) {
  2987  0077F4  D0FD               	goto	l196
  2988  0077F6                     l175:
  2989  0077F6  0E03               	movlw	3
  2990  0077F8  186E               	xorwf	main@rightbutton,w,c
  2991  0077FA  A4D8               	btfss	status,2,c
  2992  0077FC  D065               	goto	l177
  2993  0077FE  0E13               	movlw	19
  2994  007800  186F               	xorwf	main@column,w,c
  2995  007802  B4D8               	btfsc	status,2,c
  2996  007804  D061               	goto	l177
  2997                           
  2998                           ;newmain.c: 514: for (i = 0; i < 4; i++)
  2999  007806  0E00               	movlw	0
  3000  007808  6E75               	movwf	main@i+1,c
  3001  00780A  0E00               	movlw	0
  3002  00780C  6E74               	movwf	main@i,c
  3003  00780E                     l4803:
  3004  00780E  BE75               	btfsc	main@i+1,7,c
  3005  007810  D006               	goto	l178
  3006  007812  5075               	movf	main@i+1,w,c
  3007  007814  E155               	bnz	l4827
  3008  007816  0E04               	movlw	4
  3009  007818  5C74               	subwf	main@i,w,c
  3010  00781A  B0D8               	btfsc	status,0,c
  3011  00781C  D051               	goto	u6320
  3012  00781E                     l178:
  3013                           
  3014                           ;newmain.c: 515: for (j = 0; j < 26; j++)
  3015  00781E  0E00               	movlw	0
  3016  007820  6E72               	movwf	main@j+1,c
  3017  007822  0E00               	movlw	0
  3018  007824  6E71               	movwf	main@j,c
  3019  007826                     l4809:
  3020  007826  BE72               	btfsc	main@j+1,7,c
  3021  007828  D006               	goto	l180
  3022  00782A  5072               	movf	main@j+1,w,c
  3023  00782C  E146               	bnz	l4823
  3024  00782E  0E1A               	movlw	26
  3025  007830  5C71               	subwf	main@j,w,c
  3026  007832  B0D8               	btfsc	status,0,c
  3027  007834  D042               	goto	u6310
  3028  007836                     l180:
  3029                           
  3030                           ;newmain.c: 516: if(circle[i][j]!=100){
  3031  007836  C074  F043         	movff	main@i,___wmul@multiplier
  3032  00783A  C075  F044         	movff	main@i+1,___wmul@multiplier+1
  3033  00783E  0E00               	movlw	0
  3034  007840  6E46               	movwf	___wmul@multiplicand+1,c
  3035  007842  0E1A               	movlw	26
  3036  007844  6E45               	movwf	___wmul@multiplicand,c
  3037  007846  EC7C  F027         	call	___wmul	;wreg free
  3038  00784A  0EC1               	movlw	low _circle
  3039  00784C  6E67               	movwf	??_main& (0+255),c
  3040  00784E  0E7C               	movlw	high _circle
  3041  007850  6E68               	movwf	(??_main+1)& (0+255),c
  3042  007852  5043               	movf	?___wmul,w,c
  3043  007854  2667               	addwf	??_main,f,c
  3044  007856  5044               	movf	?___wmul+1,w,c
  3045  007858  2268               	addwfc	??_main+1,f,c
  3046  00785A  5071               	movf	main@j,w,c
  3047  00785C  2667               	addwf	??_main,f,c
  3048  00785E  5072               	movf	main@j+1,w,c
  3049  007860  2268               	addwfc	??_main+1,f,c
  3050  007862  C067  FFF6         	movff	??_main,tblptrl
  3051  007866  C068  FFF7         	movff	??_main+1,tblptrh
  3052  00786A                     	if	0	;tblptru may be non-zero
  3053  00786A                     	endif
  3054  00786A                     	if	0	;tblptru may be non-zero
  3055  00786A                     	endif
  3056  00786A  0008               	tblrd		*
  3057  00786C  50F5               	movf	tablat,w,c
  3058  00786E  0A64               	xorlw	100
  3059  007870  B4D8               	btfsc	status,2,c
  3060  007872  D020               	goto	l183
  3061                           
  3062                           ;newmain.c: 517: if (h == circle[i][j]){
  3063  007874  C074  F043         	movff	main@i,___wmul@multiplier
  3064  007878  C075  F044         	movff	main@i+1,___wmul@multiplier+1
  3065  00787C  0E00               	movlw	0
  3066  00787E  6E46               	movwf	___wmul@multiplicand+1,c
  3067  007880  0E1A               	movlw	26
  3068  007882  6E45               	movwf	___wmul@multiplicand,c
  3069  007884  EC7C  F027         	call	___wmul	;wreg free
  3070  007888  0EC1               	movlw	low _circle
  3071  00788A  6E67               	movwf	??_main& (0+255),c
  3072  00788C  0E7C               	movlw	high _circle
  3073  00788E  6E68               	movwf	(??_main+1)& (0+255),c
  3074  007890  5043               	movf	?___wmul,w,c
  3075  007892  2667               	addwf	??_main,f,c
  3076  007894  5044               	movf	?___wmul+1,w,c
  3077  007896  2268               	addwfc	??_main+1,f,c
  3078  007898  5071               	movf	main@j,w,c
  3079  00789A  2667               	addwf	??_main,f,c
  3080  00789C  5072               	movf	main@j+1,w,c
  3081  00789E  2268               	addwfc	??_main+1,f,c
  3082  0078A0  C067  FFF6         	movff	??_main,tblptrl
  3083  0078A4  C068  FFF7         	movff	??_main+1,tblptrh
  3084  0078A8                     	if	0	;tblptru may be non-zero
  3085  0078A8                     	endif
  3086  0078A8                     	if	0	;tblptru may be non-zero
  3087  0078A8                     	endif
  3088  0078A8  0008               	tblrd		*
  3089  0078AA  50F5               	movf	tablat,w,c
  3090  0078AC  1873               	xorwf	main@h,w,c
  3091  0078AE  B4D8               	btfsc	status,2,c
  3092                           
  3093                           ;newmain.c: 518: m = i;
  3094  0078B0  C074  F070         	movff	main@i,main@m
  3095  0078B4                     l183:
  3096  0078B4  4A71               	infsnz	main@j,f,c
  3097  0078B6  2A72               	incf	main@j+1,f,c
  3098  0078B8  D7B6               	goto	l4809
  3099  0078BA                     u6310:
  3100  0078BA                     l4823:
  3101  0078BA  4A74               	infsnz	main@i,f,c
  3102  0078BC  2A75               	incf	main@i+1,f,c
  3103  0078BE  D7A7               	goto	l4803
  3104  0078C0                     u6320:
  3105  0078C0                     l4827:
  3106                           
  3107                           ;newmain.c: 520: }
  3108                           ;newmain.c: 521: }
  3109                           ;newmain.c: 523: animation3(m);
  3110  0078C0  5070               	movf	main@m,w,c
  3111  0078C2  ECD6  F036         	call	_animation3
  3112                           
  3113                           ;newmain.c: 524: } else if (rightbutton == 8 && column != 19) {
  3114  0078C6  D094               	goto	l196
  3115  0078C8                     l177:
  3116  0078C8  0E08               	movlw	8
  3117  0078CA  186E               	xorwf	main@rightbutton,w,c
  3118  0078CC  A4D8               	btfss	status,2,c
  3119  0078CE  D015               	goto	l185
  3120  0078D0  0E13               	movlw	19
  3121  0078D2  186F               	xorwf	main@column,w,c
  3122  0078D4  B4D8               	btfsc	status,2,c
  3123  0078D6  D011               	goto	l185
  3124                           
  3125                           ;newmain.c: 525: m = h / 16;
  3126  0078D8  C073  F043         	movff	main@h,___awdiv@dividend
  3127  0078DC  6A44               	clrf	___awdiv@dividend+1,c
  3128  0078DE  0E00               	movlw	0
  3129  0078E0  6E46               	movwf	___awdiv@divisor+1,c
  3130  0078E2  0E10               	movlw	16
  3131  0078E4  6E45               	movwf	___awdiv@divisor,c
  3132  0078E6  EC1E  F028         	call	___awdiv	;wreg free
  3133  0078EA  5043               	movf	?___awdiv,w,c
  3134  0078EC  6E70               	movwf	main@m,c
  3135                           
  3136                           ;newmain.c: 526: animation4(m, h);
  3137  0078EE  C073  F058         	movff	main@h,animation4@h
  3138  0078F2  5070               	movf	main@m,w,c
  3139  0078F4  EC25  F032         	call	_animation4
  3140                           
  3141                           ;newmain.c: 527: } else if (rightbutton == 9 && column != 19) {
  3142  0078F8  D07B               	goto	l196
  3143  0078FA                     l185:
  3144  0078FA  0E09               	movlw	9
  3145  0078FC  186E               	xorwf	main@rightbutton,w,c
  3146  0078FE  A4D8               	btfss	status,2,c
  3147  007900  D01A               	goto	l187
  3148  007902  0E13               	movlw	19
  3149  007904  186F               	xorwf	main@column,w,c
  3150  007906  B4D8               	btfsc	status,2,c
  3151  007908  D016               	goto	l187
  3152                           
  3153                           ;newmain.c: 529: m = h / 16;
  3154  00790A  C073  F043         	movff	main@h,___awdiv@dividend
  3155  00790E  6A44               	clrf	___awdiv@dividend+1,c
  3156  007910  0E00               	movlw	0
  3157  007912  6E46               	movwf	___awdiv@divisor+1,c
  3158  007914  0E10               	movlw	16
  3159  007916  6E45               	movwf	___awdiv@divisor,c
  3160  007918  EC1E  F028         	call	___awdiv	;wreg free
  3161  00791C  5043               	movf	?___awdiv,w,c
  3162  00791E  6E70               	movwf	main@m,c
  3163                           
  3164                           ;newmain.c: 530: n = h % 16;
  3165  007920  5073               	movf	main@h,w,c
  3166  007922  0B0F               	andlw	15
  3167  007924  6E6D               	movwf	main@n,c
  3168                           
  3169                           ;newmain.c: 531: animation5(m, n, h);
  3170  007926  C06D  F058         	movff	main@n,animation5@n
  3171  00792A  C073  F059         	movff	main@h,animation5@h
  3172  00792E  5070               	movf	main@m,w,c
  3173  007930  ECD7  F02E         	call	_animation5
  3174                           
  3175                           ;newmain.c: 533: } else if (rightbutton == 10 && column != 19) {
  3176  007934  D05D               	goto	l196
  3177  007936                     l187:
  3178  007936  0E0A               	movlw	10
  3179  007938  186E               	xorwf	main@rightbutton,w,c
  3180  00793A  A4D8               	btfss	status,2,c
  3181  00793C  D04E               	goto	l189
  3182  00793E  0E13               	movlw	19
  3183  007940  186F               	xorwf	main@column,w,c
  3184  007942  B4D8               	btfsc	status,2,c
  3185  007944  D04A               	goto	l189
  3186                           
  3187                           ;newmain.c: 534: for (i = 0; i < 8; i++) {
  3188  007946  0E00               	movlw	0
  3189  007948  6E75               	movwf	main@i+1,c
  3190  00794A  0E00               	movlw	0
  3191  00794C  6E74               	movwf	main@i,c
  3192  00794E                     l4853:
  3193  00794E  BE75               	btfsc	main@i+1,7,c
  3194  007950  D006               	goto	l190
  3195  007952  5075               	movf	main@i+1,w,c
  3196  007954  E13C               	bnz	l4875
  3197  007956  0E08               	movlw	8
  3198  007958  5C74               	subwf	main@i,w,c
  3199  00795A  B0D8               	btfsc	status,0,c
  3200  00795C  D038               	goto	u6430
  3201  00795E                     l190:
  3202                           
  3203                           ;newmain.c: 535: for (j = 0; j < 8; j++) {
  3204  00795E  0E00               	movlw	0
  3205  007960  6E72               	movwf	main@j+1,c
  3206  007962  0E00               	movlw	0
  3207  007964  6E71               	movwf	main@j,c
  3208  007966                     l4859:
  3209  007966  BE72               	btfsc	main@j+1,7,c
  3210  007968  D006               	goto	l192
  3211  00796A  5072               	movf	main@j+1,w,c
  3212  00796C  E12D               	bnz	l4871
  3213  00796E  0E08               	movlw	8
  3214  007970  5C71               	subwf	main@j,w,c
  3215  007972  B0D8               	btfsc	status,0,c
  3216  007974  D029               	goto	u6420
  3217  007976                     l192:
  3218                           
  3219                           ;newmain.c: 536: if (h == Buttons[i][j]) {
  3220  007976  C074  F067         	movff	main@i,??_main
  3221  00797A  C075  F068         	movff	main@i+1,??_main+1
  3222  00797E  90D8               	bcf	status,0,c
  3223  007980  3667               	rlcf	??_main,f,c
  3224  007982  3668               	rlcf	??_main+1,f,c
  3225  007984  90D8               	bcf	status,0,c
  3226  007986  3667               	rlcf	??_main,f,c
  3227  007988  3668               	rlcf	??_main+1,f,c
  3228  00798A  90D8               	bcf	status,0,c
  3229  00798C  3667               	rlcf	??_main,f,c
  3230  00798E  3668               	rlcf	??_main+1,f,c
  3231  007990  0EF9               	movlw	low _Buttons
  3232  007992  6E69               	movwf	(??_main+2)& (0+255),c
  3233  007994  0E7E               	movlw	high _Buttons
  3234  007996  6E6A               	movwf	(??_main+3)& (0+255),c
  3235  007998  5067               	movf	??_main,w,c
  3236  00799A  2669               	addwf	??_main+2,f,c
  3237  00799C  5068               	movf	??_main+1,w,c
  3238  00799E  226A               	addwfc	??_main+3,f,c
  3239  0079A0  5071               	movf	main@j,w,c
  3240  0079A2  2669               	addwf	??_main+2,f,c
  3241  0079A4  5072               	movf	main@j+1,w,c
  3242  0079A6  226A               	addwfc	??_main+3,f,c
  3243  0079A8  C069  FFF6         	movff	??_main+2,tblptrl
  3244  0079AC  C06A  FFF7         	movff	??_main+3,tblptrh
  3245  0079B0                     	if	0	;tblptru may be non-zero
  3246  0079B0                     	endif
  3247  0079B0                     	if	0	;tblptru may be non-zero
  3248  0079B0                     	endif
  3249  0079B0  0008               	tblrd		*
  3250  0079B2  50F5               	movf	tablat,w,c
  3251  0079B4  1873               	xorwf	main@h,w,c
  3252  0079B6  A4D8               	btfss	status,2,c
  3253  0079B8  D004               	goto	l194
  3254                           
  3255                           ;newmain.c: 537: m = i;
  3256  0079BA  C074  F070         	movff	main@i,main@m
  3257                           
  3258                           ;newmain.c: 538: n = j;
  3259  0079BE  C071  F06D         	movff	main@j,main@n
  3260  0079C2                     l194:
  3261  0079C2  4A71               	infsnz	main@j,f,c
  3262  0079C4  2A72               	incf	main@j+1,f,c
  3263  0079C6  D7CF               	goto	l4859
  3264  0079C8                     u6420:
  3265  0079C8                     l4871:
  3266  0079C8  4A74               	infsnz	main@i,f,c
  3267  0079CA  2A75               	incf	main@i+1,f,c
  3268  0079CC  D7C0               	goto	l4853
  3269  0079CE                     u6430:
  3270  0079CE                     l4875:
  3271                           
  3272                           ;newmain.c: 539: }
  3273                           ;newmain.c: 540: }
  3274                           ;newmain.c: 541: }
  3275                           ;newmain.c: 542: animation6(m, n);
  3276  0079CE  C06D  F058         	movff	main@n,animation6@n
  3277  0079D2  5070               	movf	main@m,w,c
  3278  0079D4  ECF4  F02B         	call	_animation6
  3279                           
  3280                           ;newmain.c: 543: } else if (rightbutton == 11 && column != 19) {
  3281  0079D8  D00B               	goto	l196
  3282  0079DA                     l189:
  3283  0079DA  0E0B               	movlw	11
  3284  0079DC  186E               	xorwf	main@rightbutton,w,c
  3285  0079DE  A4D8               	btfss	status,2,c
  3286  0079E0  D007               	goto	l196
  3287  0079E2  0E13               	movlw	19
  3288  0079E4  186F               	xorwf	main@column,w,c
  3289  0079E6  B4D8               	btfsc	status,2,c
  3290  0079E8  D003               	goto	l196
  3291                           
  3292                           ;newmain.c: 544: animation7(h);
  3293  0079EA  5073               	movf	main@h,w,c
  3294  0079EC  EC5F  F030         	call	_animation7
  3295  0079F0                     l196:
  3296  0079F0  2A73               	incf	main@h,f,c
  3297  0079F2  D571               	goto	l4643
  3298  0079F4                     u6460:
  3299                           
  3300                           ;newmain.c: 545: }
  3301                           ;newmain.c: 546: }
  3302                           ;newmain.c: 547: }
  3303                           ;newmain.c: 548: write_display();
  3304  0079F4  ECB4  F029         	call	_write_display	;wreg free
  3305  0079F8  D55F               	goto	l141
  3306  0079FA                     
  3307                           ;newmain.c: 549: }
  3308                           ;newmain.c: 550: }
  3309                           ;newmain.c: 552: while(1);
  3310  0079FA  D7FF               	goto	l198
  3311  0079FC                     __end_of_main:
  3312                           	opt stack 0
  3313                           tblptru	equ	0xFF8
  3314                           tblptrh	equ	0xFF7
  3315                           tblptrl	equ	0xFF6
  3316                           tablat	equ	0xFF5
  3317                           postinc0	equ	0xFEE
  3318                           wreg	equ	0xFE8
  3319                           indf2	equ	0xFDF
  3320                           fsr2h	equ	0xFDA
  3321                           fsr2l	equ	0xFD9
  3322                           status	equ	0xFD8
  3323                           
  3324 ;; *************** function _was_key_pressed *****************
  3325 ;; Defined at:
  3326 ;;		line 1053 in file "newmain.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  k               1    wreg     unsigned char 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  k               1   18[COMRAM] unsigned char 
  3331 ;;  led             2   16[COMRAM] int 
  3332 ;;  matrix          2   14[COMRAM] int 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      unsigned char 
  3335 ;; Registers used:
  3336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3342 ;;      Params:         0       0       0       0       0       0       0
  3343 ;;      Locals:         5       0       0       0       0       0       0
  3344 ;;      Temps:          8       0       0       0       0       0       0
  3345 ;;      Totals:        13       0       0       0       0       0       0
  3346 ;;Total ram usage:       13 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:    1
  3349 ;; This function calls:
  3350 ;;		___wmul
  3351 ;; This function is called by:
  3352 ;;		_main
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           	psect	text1
  3357  005162                     __ptext1:
  3358                           	opt stack 0
  3359  005162                     _was_key_pressed:
  3360                           	opt stack 29
  3361                           
  3362                           ;incstack = 0
  3363                           ;was_key_pressed@k stored from wreg
  3364  005162  6E55               	movwf	was_key_pressed@k,c
  3365                           
  3366                           ;newmain.c: 1055: int matrix=k>>4;
  3367  005164  C055  F049         	movff	was_key_pressed@k,??_was_key_pressed
  3368  005168  3A49               	swapf	??_was_key_pressed,f,c
  3369  00516A  0E0F               	movlw	15
  3370  00516C  1649               	andwf	??_was_key_pressed,f,c
  3371  00516E  5049               	movf	??_was_key_pressed,w,c
  3372  005170  6E51               	movwf	was_key_pressed@matrix,c
  3373  005172  6A52               	clrf	was_key_pressed@matrix+1,c
  3374                           
  3375                           ;newmain.c: 1056: int led=k&0b1111;
  3376  005174  C055  F049         	movff	was_key_pressed@k,??_was_key_pressed
  3377  005178  0E0F               	movlw	15
  3378  00517A  1649               	andwf	??_was_key_pressed,f,c
  3379  00517C  5049               	movf	??_was_key_pressed,w,c
  3380  00517E  6E53               	movwf	was_key_pressed@led,c
  3381  005180  6A54               	clrf	was_key_pressed@led+1,c
  3382                           
  3383                           ;newmain.c: 1057: return (matrices[matrix].last_keys[buttonLUT[led]>>4]&(1<<(buttonLUT[l
      +                          ed]&0x0f)));
  3384  005182  C051  F043         	movff	was_key_pressed@matrix,___wmul@multiplier
  3385  005186  C052  F044         	movff	was_key_pressed@matrix+1,___wmul@multiplier+1
  3386  00518A  0E00               	movlw	0
  3387  00518C  6E46               	movwf	___wmul@multiplicand+1,c
  3388  00518E  0E1D               	movlw	29
  3389  005190  6E45               	movwf	___wmul@multiplicand,c
  3390  005192  EC7C  F027         	call	___wmul	;wreg free
  3391  005196  0EDF               	movlw	low _buttonLUT
  3392  005198  2453               	addwf	was_key_pressed@led,w,c
  3393  00519A  6EF6               	movwf	tblptrl,c
  3394  00519C  0E7F               	movlw	high _buttonLUT
  3395  00519E  2054               	addwfc	was_key_pressed@led+1,w,c
  3396  0051A0  6EF7               	movwf	tblptrh,c
  3397  0051A2                     	if	0	;There are less than 3 active tblptr bytes
  3398  0051A2                     	endif
  3399  0051A2  0008               	tblrd		*
  3400  0051A4  CFF5 F049          	movff	tablat,??_was_key_pressed
  3401  0051A8  3849               	swapf	??_was_key_pressed,w,c
  3402  0051AA  0B0F               	andlw	15
  3403  0051AC  6E4A               	movwf	(??_was_key_pressed+1)& (0+255),c
  3404  0051AE  6A4B               	clrf	(??_was_key_pressed+2)& (0+255),c
  3405  0051B0  0E07               	movlw	7
  3406  0051B2  264A               	addwf	??_was_key_pressed+1,f,c
  3407  0051B4  0E00               	movlw	0
  3408  0051B6  224B               	addwfc	??_was_key_pressed+2,f,c
  3409  0051B8  0E80               	movlw	low _matrices
  3410  0051BA  6E4C               	movwf	(??_was_key_pressed+3)& (0+255),c
  3411  0051BC  0E00               	movlw	high _matrices
  3412  0051BE  6E4D               	movwf	(??_was_key_pressed+4)& (0+255),c
  3413  0051C0  504A               	movf	??_was_key_pressed+1,w,c
  3414  0051C2  264C               	addwf	??_was_key_pressed+3,f,c
  3415  0051C4  504B               	movf	??_was_key_pressed+2,w,c
  3416  0051C6  224D               	addwfc	??_was_key_pressed+4,f,c
  3417  0051C8  5043               	movf	?___wmul,w,c
  3418  0051CA  244C               	addwf	??_was_key_pressed+3,w,c
  3419  0051CC  6ED9               	movwf	fsr2l,c
  3420  0051CE  5044               	movf	?___wmul+1,w,c
  3421  0051D0  204D               	addwfc	??_was_key_pressed+4,w,c
  3422  0051D2  6EDA               	movwf	fsr2h,c
  3423  0051D4  50DF               	movf	indf2,w,c
  3424  0051D6  6E4E               	movwf	(??_was_key_pressed+5)& (0+255),c
  3425  0051D8  0EDF               	movlw	low _buttonLUT
  3426  0051DA  2453               	addwf	was_key_pressed@led,w,c
  3427  0051DC  6EF6               	movwf	tblptrl,c
  3428  0051DE  0E7F               	movlw	high _buttonLUT
  3429  0051E0  2054               	addwfc	was_key_pressed@led+1,w,c
  3430  0051E2  6EF7               	movwf	tblptrh,c
  3431  0051E4                     	if	0	;There are less than 3 active tblptr bytes
  3432  0051E4                     	endif
  3433  0051E4  0008               	tblrd		*
  3434  0051E6  CFF5 F04F          	movff	tablat,??_was_key_pressed+6
  3435  0051EA  0E0F               	movlw	15
  3436  0051EC  164F               	andwf	??_was_key_pressed+6,f,c
  3437  0051EE  0E01               	movlw	1
  3438  0051F0  6E50               	movwf	(??_was_key_pressed+7)& (0+255),c
  3439  0051F2  2A4F               	incf	??_was_key_pressed+6,f,c
  3440  0051F4  D002               	goto	u3654
  3441  0051F6                     u3655:
  3442  0051F6  90D8               	bcf	status,0,c
  3443  0051F8  3650               	rlcf	??_was_key_pressed+7,f,c
  3444  0051FA                     u3654:
  3445  0051FA  2E4F               	decfsz	??_was_key_pressed+6,f,c
  3446  0051FC  D7FC               	goto	u3655
  3447  0051FE  5050               	movf	??_was_key_pressed+7,w,c
  3448  005200  144E               	andwf	??_was_key_pressed+5,w,c
  3449  005202  0012               	return	
  3450  005204                     __end_of_was_key_pressed:
  3451                           	opt stack 0
  3452                           tblptru	equ	0xFF8
  3453                           tblptrh	equ	0xFF7
  3454                           tblptrl	equ	0xFF6
  3455                           tablat	equ	0xFF5
  3456                           postinc0	equ	0xFEE
  3457                           wreg	equ	0xFE8
  3458                           indf2	equ	0xFDF
  3459                           fsr2h	equ	0xFDA
  3460                           fsr2l	equ	0xFD9
  3461                           status	equ	0xFD8
  3462                           
  3463 ;; *************** function _read_switch *****************
  3464 ;; Defined at:
  3465 ;;		line 1059 in file "newmain.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;		None
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  j               2   29[COMRAM] int 
  3470 ;;  i               2   27[COMRAM] int 
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  1    wreg      unsigned char 
  3473 ;; Registers used:
  3474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3480 ;;      Params:         0       0       0       0       0       0       0
  3481 ;;      Locals:         4       0       0       0       0       0       0
  3482 ;;      Temps:         10       0       0       0       0       0       0
  3483 ;;      Totals:        14       0       0       0       0       0       0
  3484 ;;Total ram usage:       14 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:    3
  3487 ;; This function calls:
  3488 ;;		_MyIdleI2C
  3489 ;;		_MyNotAckI2C
  3490 ;;		_MyStartI2C
  3491 ;;		_MyStopI2C
  3492 ;;		_MygetsI2C
  3493 ;;		___wmul
  3494 ;;		_memcpy
  3495 ;;		_write
  3496 ;; This function is called by:
  3497 ;;		_main
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text2
  3502  005602                     __ptext2:
  3503                           	opt stack 0
  3504  005602                     _read_switch:
  3505                           	opt stack 27
  3506                           
  3507                           ;newmain.c: 1061: int i,j;
  3508                           ;newmain.c: 1062: for(j=0;j<4;j++)
  3509                           
  3510                           ;incstack = 0
  3511  005602  0E00               	movlw	0
  3512  005604  6E61               	movwf	read_switch@j+1,c
  3513  005606  0E00               	movlw	0
  3514  005608  6E60               	movwf	read_switch@j,c
  3515  00560A  BE61               	btfsc	read_switch@j+1,7,c
  3516  00560C  D008               	goto	l493
  3517  00560E  5061               	movf	read_switch@j+1,w,c
  3518  005610  E105               	bnz	u3580
  3519  005612  0E04               	movlw	4
  3520  005614  5C60               	subwf	read_switch@j,w,c
  3521  005616  B0D8               	btfsc	status,0,c
  3522  005618  D0E5               	goto	u3630
  3523  00561A  D001               	goto	l493
  3524  00561C                     u3580:
  3525  00561C  D0E3               	goto	u3630
  3526  00561E                     l493:
  3527                           
  3528                           ;newmain.c: 1063: {
  3529                           ;newmain.c: 1064: memcpy(matrices[j].last_keys,matrices[j].keys,sizeof(matrices[j].keys)
      +                          );
  3530  00561E  C060  F043         	movff	read_switch@j,___wmul@multiplier
  3531  005622  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  3532  005626  0E00               	movlw	0
  3533  005628  6E46               	movwf	___wmul@multiplicand+1,c
  3534  00562A  0E1D               	movlw	29
  3535  00562C  6E45               	movwf	___wmul@multiplicand,c
  3536  00562E  EC7C  F027         	call	___wmul	;wreg free
  3537  005632  0E07               	movlw	7
  3538  005634  2643               	addwf	?___wmul,f,c
  3539  005636  0E00               	movlw	0
  3540  005638  2244               	addwfc	?___wmul+1,f,c
  3541  00563A  0E80               	movlw	low _matrices
  3542  00563C  2443               	addwf	?___wmul,w,c
  3543  00563E  6E49               	movwf	memcpy@d1,c
  3544  005640  0E00               	movlw	high _matrices
  3545  005642  2044               	addwfc	?___wmul+1,w,c
  3546  005644  6E4A               	movwf	memcpy@d1+1,c
  3547  005646  C060  F043         	movff	read_switch@j,___wmul@multiplier
  3548  00564A  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  3549  00564E  0E00               	movlw	0
  3550  005650  6E46               	movwf	___wmul@multiplicand+1,c
  3551  005652  0E1D               	movlw	29
  3552  005654  6E45               	movwf	___wmul@multiplicand,c
  3553  005656  EC7C  F027         	call	___wmul	;wreg free
  3554  00565A  0E01               	movlw	1
  3555  00565C  2643               	addwf	?___wmul,f,c
  3556  00565E  0E00               	movlw	0
  3557  005660  2244               	addwfc	?___wmul+1,f,c
  3558  005662  0E80               	movlw	low _matrices
  3559  005664  2443               	addwf	?___wmul,w,c
  3560  005666  6E4B               	movwf	memcpy@s1,c
  3561  005668  0E00               	movlw	high _matrices
  3562  00566A  2044               	addwfc	?___wmul+1,w,c
  3563  00566C  6E4C               	movwf	memcpy@s1+1,c
  3564  00566E  0E00               	movlw	0
  3565  005670  6E4E               	movwf	memcpy@n+1,c
  3566  005672  0E06               	movlw	6
  3567  005674  6E4D               	movwf	memcpy@n,c
  3568  005676  ECA6  F027         	call	_memcpy	;wreg free
  3569                           
  3570                           ;newmain.c: 1066: MyIdleI2C();
  3571  00567A  EC45  F027         	call	_MyIdleI2C	;wreg free
  3572                           
  3573                           ;newmain.c: 1067: MyStartI2C();
  3574  00567E  EC3E  F027         	call	_MyStartI2C	;wreg free
  3575                           
  3576                           ;newmain.c: 1068: MyIdleI2C();
  3577  005682  EC45  F027         	call	_MyIdleI2C	;wreg free
  3578                           
  3579                           ;newmain.c: 1069: write(matrices[j].address | 0x00);
  3580  005686  C060  F043         	movff	read_switch@j,___wmul@multiplier
  3581  00568A  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  3582  00568E  0E00               	movlw	0
  3583  005690  6E46               	movwf	___wmul@multiplicand+1,c
  3584  005692  0E1D               	movlw	29
  3585  005694  6E45               	movwf	___wmul@multiplicand,c
  3586  005696  EC7C  F027         	call	___wmul	;wreg free
  3587  00569A  0E80               	movlw	low _matrices
  3588  00569C  2443               	addwf	?___wmul,w,c
  3589  00569E  6ED9               	movwf	fsr2l,c
  3590  0056A0  0E00               	movlw	high _matrices
  3591  0056A2  2044               	addwfc	?___wmul+1,w,c
  3592  0056A4  6EDA               	movwf	fsr2h,c
  3593  0056A6  50DF               	movf	indf2,w,c
  3594  0056A8  EC8F  F027         	call	_write
  3595                           
  3596                           ;newmain.c: 1070: MyIdleI2C();
  3597  0056AC  EC45  F027         	call	_MyIdleI2C	;wreg free
  3598                           
  3599                           ;newmain.c: 1071: write(0x40);
  3600  0056B0  0E40               	movlw	64
  3601  0056B2  EC8F  F027         	call	_write
  3602                           
  3603                           ;newmain.c: 1072: MyIdleI2C();
  3604  0056B6  EC45  F027         	call	_MyIdleI2C	;wreg free
  3605                           
  3606                           ;newmain.c: 1073: MyStopI2C();
  3607  0056BA  EC40  F027         	call	_MyStopI2C	;wreg free
  3608                           
  3609                           ;newmain.c: 1075: MyIdleI2C();
  3610  0056BE  EC45  F027         	call	_MyIdleI2C	;wreg free
  3611                           
  3612                           ;newmain.c: 1076: MyStartI2C();
  3613  0056C2  EC3E  F027         	call	_MyStartI2C	;wreg free
  3614                           
  3615                           ;newmain.c: 1077: MyIdleI2C();
  3616  0056C6  EC45  F027         	call	_MyIdleI2C	;wreg free
  3617                           
  3618                           ;newmain.c: 1078: write(matrices[j].address | 0x01);
  3619  0056CA  C060  F043         	movff	read_switch@j,___wmul@multiplier
  3620  0056CE  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  3621  0056D2  0E00               	movlw	0
  3622  0056D4  6E46               	movwf	___wmul@multiplicand+1,c
  3623  0056D6  0E1D               	movlw	29
  3624  0056D8  6E45               	movwf	___wmul@multiplicand,c
  3625  0056DA  EC7C  F027         	call	___wmul	;wreg free
  3626  0056DE  0E80               	movlw	low _matrices
  3627  0056E0  2443               	addwf	?___wmul,w,c
  3628  0056E2  6ED9               	movwf	fsr2l,c
  3629  0056E4  0E00               	movlw	high _matrices
  3630  0056E6  2044               	addwfc	?___wmul+1,w,c
  3631  0056E8  6EDA               	movwf	fsr2h,c
  3632  0056EA  50DF               	movf	indf2,w,c
  3633  0056EC  0901               	iorlw	1
  3634  0056EE  EC8F  F027         	call	_write
  3635                           
  3636                           ;newmain.c: 1079: MyIdleI2C();
  3637  0056F2  EC45  F027         	call	_MyIdleI2C	;wreg free
  3638  0056F6  C060  F043         	movff	read_switch@j,___wmul@multiplier
  3639  0056FA  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  3640  0056FE  0E00               	movlw	0
  3641  005700  6E46               	movwf	___wmul@multiplicand+1,c
  3642  005702  0E1D               	movlw	29
  3643  005704  6E45               	movwf	___wmul@multiplicand,c
  3644  005706  EC7C  F027         	call	___wmul	;wreg free
  3645  00570A  0E01               	movlw	1
  3646  00570C  2643               	addwf	?___wmul,f,c
  3647  00570E  0E00               	movlw	0
  3648  005710  2244               	addwfc	?___wmul+1,f,c
  3649  005712  0E80               	movlw	low _matrices
  3650  005714  2443               	addwf	?___wmul,w,c
  3651  005716  6E49               	movwf	MygetsI2C@rdptr,c
  3652  005718  0E00               	movlw	high _matrices
  3653  00571A  2044               	addwfc	?___wmul+1,w,c
  3654  00571C  6E4A               	movwf	MygetsI2C@rdptr+1,c
  3655  00571E  0E06               	movlw	6
  3656  005720  6E4B               	movwf	MygetsI2C@length,c
  3657  005722  ECC8  F027         	call	_MygetsI2C	;wreg free
  3658  005726  0900               	iorlw	0
  3659  005728  A4D8               	btfss	status,2,c
  3660  00572A  D7E5               	goto	l496
  3661                           
  3662                           ;newmain.c: 1081: MyNotAckI2C();
  3663  00572C  EC42  F027         	call	_MyNotAckI2C	;wreg free
  3664                           
  3665                           ;newmain.c: 1082: MyStopI2C();
  3666  005730  EC40  F027         	call	_MyStopI2C	;wreg free
  3667                           
  3668                           ;newmain.c: 1084: for(i=0;i<6;i++)
  3669  005734  0E00               	movlw	0
  3670  005736  6E5F               	movwf	read_switch@i+1,c
  3671  005738  0E00               	movlw	0
  3672  00573A  6E5E               	movwf	read_switch@i,c
  3673  00573C                     l3283:
  3674  00573C  BE5F               	btfsc	read_switch@i+1,7,c
  3675  00573E  D006               	goto	l498
  3676  005740  505F               	movf	read_switch@i+1,w,c
  3677  005742  E149               	bnz	l3297
  3678  005744  0E06               	movlw	6
  3679  005746  5C5E               	subwf	read_switch@i,w,c
  3680  005748  B0D8               	btfsc	status,0,c
  3681  00574A  D045               	goto	u3620
  3682  00574C                     l498:
  3683                           
  3684                           ;newmain.c: 1085: {
  3685                           ;newmain.c: 1086: if(matrices[j].keys[i]!=matrices[j].last_keys[i])
  3686  00574C  C060  F043         	movff	read_switch@j,___wmul@multiplier
  3687  005750  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  3688  005754  0E00               	movlw	0
  3689  005756  6E46               	movwf	___wmul@multiplicand+1,c
  3690  005758  0E1D               	movlw	29
  3691  00575A  6E45               	movwf	___wmul@multiplicand,c
  3692  00575C  EC7C  F027         	call	___wmul	;wreg free
  3693  005760  0E07               	movlw	7
  3694  005762  245E               	addwf	read_switch@i,w,c
  3695  005764  6E54               	movwf	??_read_switch& (0+255),c
  3696  005766  0E00               	movlw	0
  3697  005768  205F               	addwfc	read_switch@i+1,w,c
  3698  00576A  6E55               	movwf	(??_read_switch+1)& (0+255),c
  3699  00576C  0E80               	movlw	low _matrices
  3700  00576E  6E56               	movwf	(??_read_switch+2)& (0+255),c
  3701  005770  0E00               	movlw	high _matrices
  3702  005772  6E57               	movwf	(??_read_switch+3)& (0+255),c
  3703  005774  5054               	movf	??_read_switch,w,c
  3704  005776  2656               	addwf	??_read_switch+2,f,c
  3705  005778  5055               	movf	??_read_switch+1,w,c
  3706  00577A  2257               	addwfc	??_read_switch+3,f,c
  3707  00577C  5043               	movf	?___wmul,w,c
  3708  00577E  2456               	addwf	??_read_switch+2,w,c
  3709  005780  6ED9               	movwf	fsr2l,c
  3710  005782  5044               	movf	?___wmul+1,w,c
  3711  005784  2057               	addwfc	??_read_switch+3,w,c
  3712  005786  6EDA               	movwf	fsr2h,c
  3713  005788  C060  F043         	movff	read_switch@j,___wmul@multiplier
  3714  00578C  C061  F044         	movff	read_switch@j+1,___wmul@multiplier+1
  3715  005790  0E00               	movlw	0
  3716  005792  6E46               	movwf	___wmul@multiplicand+1,c
  3717  005794  0E1D               	movlw	29
  3718  005796  6E45               	movwf	___wmul@multiplicand,c
  3719  005798  EC7C  F027         	call	___wmul	;wreg free
  3720  00579C  0E01               	movlw	1
  3721  00579E  245E               	addwf	read_switch@i,w,c
  3722  0057A0  6E59               	movwf	(??_read_switch+5)& (0+255),c
  3723  0057A2  0E00               	movlw	0
  3724  0057A4  205F               	addwfc	read_switch@i+1,w,c
  3725  0057A6  6E5A               	movwf	(??_read_switch+6)& (0+255),c
  3726  0057A8  0E80               	movlw	low _matrices
  3727  0057AA  6E5B               	movwf	(??_read_switch+7)& (0+255),c
  3728  0057AC  0E00               	movlw	high _matrices
  3729  0057AE  6E5C               	movwf	(??_read_switch+8)& (0+255),c
  3730  0057B0  5059               	movf	??_read_switch+5,w,c
  3731  0057B2  265B               	addwf	??_read_switch+7,f,c
  3732  0057B4  505A               	movf	??_read_switch+6,w,c
  3733  0057B6  225C               	addwfc	??_read_switch+8,f,c
  3734  0057B8  5043               	movf	?___wmul,w,c
  3735  0057BA  245B               	addwf	??_read_switch+7,w,c
  3736  0057BC  6EE1               	movwf	fsr1l,c
  3737  0057BE  5044               	movf	?___wmul+1,w,c
  3738  0057C0  205C               	addwfc	??_read_switch+8,w,c
  3739  0057C2  6EE2               	movwf	fsr1h,c
  3740  0057C4  50DE               	movf	postinc2,w,c
  3741  0057C6  18E6               	xorwf	postinc1,w,c
  3742  0057C8  B4D8               	btfsc	status,2,c
  3743  0057CA  D002               	goto	l500
  3744                           
  3745                           ;newmain.c: 1087: {
  3746                           ;newmain.c: 1088: return 1;
  3747  0057CC  0E01               	movlw	1
  3748  0057CE  0012               	return	
  3749  0057D0                     l500:
  3750  0057D0  4A5E               	infsnz	read_switch@i,f,c
  3751  0057D2  2A5F               	incf	read_switch@i+1,f,c
  3752  0057D4  D7B3               	goto	l3283
  3753  0057D6                     u3620:
  3754  0057D6                     l3297:
  3755  0057D6  4A60               	infsnz	read_switch@j,f,c
  3756  0057D8  2A61               	incf	read_switch@j+1,f,c
  3757  0057DA  BE61               	btfsc	read_switch@j+1,7,c
  3758  0057DC  D720               	goto	l493
  3759  0057DE  5061               	movf	read_switch@j+1,w,c
  3760  0057E0  E101               	bnz	l3301
  3761  0057E2  D717               	goto	L4
  3762  0057E4                     u3630:
  3763  0057E4                     l3301:
  3764                           
  3765                           ;newmain.c: 1089: }
  3766                           ;newmain.c: 1090: }
  3767                           ;newmain.c: 1092: }
  3768                           ;newmain.c: 1093: return 0;
  3769  0057E4  0E00               	movlw	0
  3770  0057E6  0012               	return	
  3771  0057E8                     __end_of_read_switch:
  3772                           	opt stack 0
  3773                           tblptru	equ	0xFF8
  3774                           tblptrh	equ	0xFF7
  3775                           tblptrl	equ	0xFF6
  3776                           tablat	equ	0xFF5
  3777                           postinc0	equ	0xFEE
  3778                           wreg	equ	0xFE8
  3779                           postinc1	equ	0xFE6
  3780                           fsr1h	equ	0xFE2
  3781                           fsr1l	equ	0xFE1
  3782                           indf2	equ	0xFDF
  3783                           postinc2	equ	0xFDE
  3784                           fsr2h	equ	0xFDA
  3785                           fsr2l	equ	0xFD9
  3786                           status	equ	0xFD8
  3787                           
  3788 ;; *************** function _memcpy *****************
  3789 ;; Defined at:
  3790 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memcpy.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  d1              2    6[COMRAM] PTR void 
  3793 ;;		 -> matrices(116), 
  3794 ;;  s1              2    8[COMRAM] PTR const void 
  3795 ;;		 -> matrices.keys(6), matrices(116), 
  3796 ;;  n               2   10[COMRAM] unsigned int 
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;  s               2   14[COMRAM] PTR const unsigned char 
  3799 ;;		 -> matrices.keys(6), matrices(116), 
  3800 ;;  d               2   12[COMRAM] PTR unsigned char 
  3801 ;;		 -> matrices(116), 
  3802 ;;  tmp             1   16[COMRAM] unsigned char 
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  2    6[COMRAM] PTR void 
  3805 ;; Registers used:
  3806 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3812 ;;      Params:         6       0       0       0       0       0       0
  3813 ;;      Locals:         5       0       0       0       0       0       0
  3814 ;;      Temps:          0       0       0       0       0       0       0
  3815 ;;      Totals:        11       0       0       0       0       0       0
  3816 ;;Total ram usage:       11 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; This function calls:
  3819 ;;		Nothing
  3820 ;; This function is called by:
  3821 ;;		_read_switch
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           	psect	text3
  3826  004F4C                     __ptext3:
  3827                           	opt stack 0
  3828  004F4C                     _memcpy:
  3829                           	opt stack 29
  3830                           
  3831                           ;incstack = 0
  3832  004F4C  C04B  F051         	movff	memcpy@s1,memcpy@s
  3833  004F50  C04C  F052         	movff	memcpy@s1+1,memcpy@s+1
  3834  004F54  C049  F04F         	movff	memcpy@d1,memcpy@d
  3835  004F58  C04A  F050         	movff	memcpy@d1+1,memcpy@d+1
  3836  004F5C  D010               	goto	l1015
  3837  004F5E                     l3195:
  3838  004F5E  C051  FFD9         	movff	memcpy@s,fsr2l
  3839  004F62  C052  FFDA         	movff	memcpy@s+1,fsr2h
  3840  004F66  50DF               	movf	indf2,w,c
  3841  004F68  6E53               	movwf	memcpy@tmp,c
  3842  004F6A  4A51               	infsnz	memcpy@s,f,c
  3843  004F6C  2A52               	incf	memcpy@s+1,f,c
  3844  004F6E  C04F  FFD9         	movff	memcpy@d,fsr2l
  3845  004F72  C050  FFDA         	movff	memcpy@d+1,fsr2h
  3846  004F76  C053  FFDF         	movff	memcpy@tmp,indf2
  3847  004F7A  4A4F               	infsnz	memcpy@d,f,c
  3848  004F7C  2A50               	incf	memcpy@d+1,f,c
  3849  004F7E                     l1015:
  3850  004F7E  064D               	decf	memcpy@n,f,c
  3851  004F80  A0D8               	btfss	status,0,c
  3852  004F82  064E               	decf	memcpy@n+1,f,c
  3853  004F84  284D               	incf	memcpy@n,w,c
  3854  004F86  E1EB               	bnz	l3195
  3855  004F88  284E               	incf	memcpy@n+1,w,c
  3856  004F8A  B4D8               	btfsc	status,2,c
  3857  004F8C  0012               	return	
  3858  004F8E  D7E7               	goto	l1016
  3859  004F90                     __end_of_memcpy:
  3860                           	opt stack 0
  3861                           tblptru	equ	0xFF8
  3862                           tblptrh	equ	0xFF7
  3863                           tblptrl	equ	0xFF6
  3864                           tablat	equ	0xFF5
  3865                           postinc0	equ	0xFEE
  3866                           wreg	equ	0xFE8
  3867                           postinc1	equ	0xFE6
  3868                           fsr1h	equ	0xFE2
  3869                           fsr1l	equ	0xFE1
  3870                           indf2	equ	0xFDF
  3871                           postinc2	equ	0xFDE
  3872                           fsr2h	equ	0xFDA
  3873                           fsr2l	equ	0xFD9
  3874                           status	equ	0xFD8
  3875                           
  3876 ;; *************** function _MygetsI2C *****************
  3877 ;; Defined at:
  3878 ;;		line 1202 in file "newmain.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;  rdptr           2    6[COMRAM] PTR unsigned char 
  3881 ;;		 -> matrices(116), 
  3882 ;;  length          1    8[COMRAM] unsigned char 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      char 
  3887 ;; Registers used:
  3888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3894 ;;      Params:         3       0       0       0       0       0       0
  3895 ;;      Locals:         0       0       0       0       0       0       0
  3896 ;;      Temps:          0       0       0       0       0       0       0
  3897 ;;      Totals:         3       0       0       0       0       0       0
  3898 ;;Total ram usage:        3 bytes
  3899 ;; Hardware stack levels used:    1
  3900 ;; Hardware stack levels required when called:    1
  3901 ;; This function calls:
  3902 ;;		_MyReadI2C
  3903 ;; This function is called by:
  3904 ;;		_read_switch
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text4
  3909  004F90                     __ptext4:
  3910                           	opt stack 0
  3911  004F90                     _MygetsI2C:
  3912                           	opt stack 28
  3913                           
  3914                           ;newmain.c: 1204: while ( length-- )
  3915                           
  3916                           ;incstack = 0
  3917  004F90  D020               	goto	u3560
  3918  004F92                     
  3919                           ;newmain.c: 1205: {
  3920                           ;newmain.c: 1206: *rdptr++ = MyReadI2C();
  3921  004F92  EC4E  F027         	call	_MyReadI2C	;wreg free
  3922  004F96  C049  FFD9         	movff	MygetsI2C@rdptr,fsr2l
  3923  004F9A  C04A  FFDA         	movff	MygetsI2C@rdptr+1,fsr2h
  3924  004F9E  6EDF               	movwf	indf2,c
  3925  004FA0  4A49               	infsnz	MygetsI2C@rdptr,f,c
  3926  004FA2  2A4A               	incf	MygetsI2C@rdptr+1,f,c
  3927  004FA4  B6C5               	btfsc	4037,3,c	;volatile
  3928  004FA6  D7FE               	goto	l561
  3929                           
  3930                           ;newmain.c: 1209: if ( PIR2bits.BCLIF )
  3931  004FA8  A6A1               	btfss	4001,3,c	;volatile
  3932  004FAA  D002               	goto	l563
  3933                           
  3934                           ;newmain.c: 1210: {
  3935                           ;newmain.c: 1211: return ( -1 );
  3936  004FAC  0EFF               	movlw	255
  3937  004FAE  0012               	return	
  3938  004FB0                     l563:
  3939                           
  3940                           ;newmain.c: 1212: }
  3941                           ;newmain.c: 1214: if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
  3942  004FB0  50C6               	movf	4038,w,c	;volatile
  3943  004FB2  0B0F               	andlw	15
  3944  004FB4  0A08               	xorlw	8
  3945  004FB6  B4D8               	btfsc	status,2,c
  3946  004FB8  D005               	goto	u3540
  3947  004FBA  50C6               	movf	4038,w,c	;volatile
  3948  004FBC  0B0F               	andlw	15
  3949  004FBE  0A0B               	xorlw	11
  3950  004FC0  A4D8               	btfss	status,2,c
  3951  004FC2  D007               	goto	u3560
  3952  004FC4                     u3540:
  3953                           
  3954                           ;newmain.c: 1215: {
  3955                           ;newmain.c: 1216: if ( length )
  3956  004FC4  504B               	movf	MygetsI2C@length,w,c
  3957  004FC6  B4D8               	btfsc	status,2,c
  3958  004FC8  D004               	goto	u3560
  3959                           
  3960                           ;newmain.c: 1217: {
  3961                           ;newmain.c: 1218: SSPCON2bits.ACKDT = 0;
  3962  004FCA  9AC5               	bcf	4037,5,c	;volatile
  3963                           
  3964                           ;newmain.c: 1219: SSPCON2bits.ACKEN = 1;
  3965  004FCC  88C5               	bsf	4037,4,c	;volatile
  3966  004FCE  B8C5               	btfsc	4037,4,c	;volatile
  3967  004FD0  D7FE               	goto	l570
  3968  004FD2                     u3560:
  3969  004FD2  064B               	decf	MygetsI2C@length,f,c
  3970  004FD4  284B               	incf	MygetsI2C@length,w,c
  3971  004FD6  A4D8               	btfss	status,2,c
  3972  004FD8  D7DC               	goto	l559
  3973                           
  3974                           ;newmain.c: 1221: }
  3975                           ;newmain.c: 1222: }
  3976                           ;newmain.c: 1224: }
  3977                           ;newmain.c: 1225: return ( 0 );
  3978  004FDA  0E00               	movlw	0
  3979  004FDC  0012               	return	
  3980  004FDE                     __end_of_MygetsI2C:
  3981                           	opt stack 0
  3982                           tblptru	equ	0xFF8
  3983                           tblptrh	equ	0xFF7
  3984                           tblptrl	equ	0xFF6
  3985                           tablat	equ	0xFF5
  3986                           postinc0	equ	0xFEE
  3987                           wreg	equ	0xFE8
  3988                           postinc1	equ	0xFE6
  3989                           fsr1h	equ	0xFE2
  3990                           fsr1l	equ	0xFE1
  3991                           indf2	equ	0xFDF
  3992                           postinc2	equ	0xFDE
  3993                           fsr2h	equ	0xFDA
  3994                           fsr2l	equ	0xFD9
  3995                           status	equ	0xFD8
  3996                           
  3997 ;; *************** function _MyReadI2C *****************
  3998 ;; Defined at:
  3999 ;;		line 1232 in file "newmain.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;		None
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;		None
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  1    wreg      unsigned char 
  4006 ;; Registers used:
  4007 ;;		wreg, status,2, status,0
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4013 ;;      Params:         0       0       0       0       0       0       0
  4014 ;;      Locals:         0       0       0       0       0       0       0
  4015 ;;      Temps:          0       0       0       0       0       0       0
  4016 ;;      Totals:         0       0       0       0       0       0       0
  4017 ;;Total ram usage:        0 bytes
  4018 ;; Hardware stack levels used:    1
  4019 ;; This function calls:
  4020 ;;		Nothing
  4021 ;; This function is called by:
  4022 ;;		_MygetsI2C
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026                           	psect	text5
  4027  004E9C                     __ptext5:
  4028                           	opt stack 0
  4029  004E9C                     _MyReadI2C:
  4030                           	opt stack 28
  4031                           
  4032                           ;newmain.c: 1234: if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
  4033                           
  4034                           ;incstack = 0
  4035  004E9C  50C6               	movf	4038,w,c	;volatile
  4036  004E9E  0B0F               	andlw	15
  4037  004EA0  0A08               	xorlw	8
  4038  004EA2  B4D8               	btfsc	status,2,c
  4039  004EA4  D004               	goto	u3420
  4040  004EA6  50C6               	movf	4038,w,c	;volatile
  4041  004EA8  0B0F               	andlw	15
  4042  004EAA  0A0B               	xorlw	11
  4043  004EAC  B4D8               	btfsc	status,2,c
  4044  004EAE                     u3420:
  4045                           
  4046                           ;newmain.c: 1235: SSPCON2bits.RCEN = 1;
  4047  004EAE  86C5               	bsf	4037,3,c	;volatile
  4048  004EB0                     
  4049                           ;newmain.c: 1236: while ( !SSPSTATbits.BF );
  4050  004EB0  A0C7               	btfss	4039,0,c	;volatile
  4051  004EB2  D7FE               	goto	l578
  4052                           
  4053                           ;newmain.c: 1237: return ( SSPBUF );
  4054  004EB4  50C9               	movf	4041,w,c	;volatile
  4055  004EB6  0012               	return	
  4056  004EB8                     __end_of_MyReadI2C:
  4057                           	opt stack 0
  4058                           tblptru	equ	0xFF8
  4059                           tblptrh	equ	0xFF7
  4060                           tblptrl	equ	0xFF6
  4061                           tablat	equ	0xFF5
  4062                           postinc0	equ	0xFEE
  4063                           wreg	equ	0xFE8
  4064                           postinc1	equ	0xFE6
  4065                           fsr1h	equ	0xFE2
  4066                           fsr1l	equ	0xFE1
  4067                           indf2	equ	0xFDF
  4068                           postinc2	equ	0xFDE
  4069                           fsr2h	equ	0xFDA
  4070                           fsr2l	equ	0xFD9
  4071                           status	equ	0xFD8
  4072                           
  4073 ;; *************** function _MyNotAckI2C *****************
  4074 ;; Defined at:
  4075 ;;		line 1227 in file "newmain.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;		None
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;		None
  4080 ;; Return value:  Size  Location     Type
  4081 ;;                  1    wreg      void 
  4082 ;; Registers used:
  4083 ;;		None
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4089 ;;      Params:         0       0       0       0       0       0       0
  4090 ;;      Locals:         0       0       0       0       0       0       0
  4091 ;;      Temps:          0       0       0       0       0       0       0
  4092 ;;      Totals:         0       0       0       0       0       0       0
  4093 ;;Total ram usage:        0 bytes
  4094 ;; Hardware stack levels used:    1
  4095 ;; This function calls:
  4096 ;;		Nothing
  4097 ;; This function is called by:
  4098 ;;		_read_switch
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           	psect	text6
  4103  004E84                     __ptext6:
  4104                           	opt stack 0
  4105  004E84                     _MyNotAckI2C:
  4106                           	opt stack 29
  4107                           
  4108                           ;newmain.c: 1229: SSPCON2bits.ACKDT = 1;
  4109                           
  4110                           ;incstack = 0
  4111  004E84  8AC5               	bsf	4037,5,c	;volatile
  4112                           
  4113                           ;newmain.c: 1230: SSPCON2bits.ACKEN = 1;
  4114  004E86  88C5               	bsf	4037,4,c	;volatile
  4115  004E88  0012               	return		;funcret
  4116  004E8A                     __end_of_MyNotAckI2C:
  4117                           	opt stack 0
  4118                           tblptru	equ	0xFF8
  4119                           tblptrh	equ	0xFF7
  4120                           tblptrl	equ	0xFF6
  4121                           tablat	equ	0xFF5
  4122                           postinc0	equ	0xFEE
  4123                           wreg	equ	0xFE8
  4124                           postinc1	equ	0xFE6
  4125                           fsr1h	equ	0xFE2
  4126                           fsr1l	equ	0xFE1
  4127                           indf2	equ	0xFDF
  4128                           postinc2	equ	0xFDE
  4129                           fsr2h	equ	0xFDA
  4130                           fsr2l	equ	0xFD9
  4131                           status	equ	0xFD8
  4132                           
  4133 ;; *************** function _is_key_pressed *****************
  4134 ;; Defined at:
  4135 ;;		line 1047 in file "newmain.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;  k               1    wreg     unsigned char 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  k               1   18[COMRAM] unsigned char 
  4140 ;;  led             2   16[COMRAM] int 
  4141 ;;  matrix          2   14[COMRAM] int 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  1    wreg      unsigned char 
  4144 ;; Registers used:
  4145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4151 ;;      Params:         0       0       0       0       0       0       0
  4152 ;;      Locals:         5       0       0       0       0       0       0
  4153 ;;      Temps:          8       0       0       0       0       0       0
  4154 ;;      Totals:        13       0       0       0       0       0       0
  4155 ;;Total ram usage:       13 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:    1
  4158 ;; This function calls:
  4159 ;;		___wmul
  4160 ;; This function is called by:
  4161 ;;		_main
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           	psect	text7
  4166  0050C0                     __ptext7:
  4167                           	opt stack 0
  4168  0050C0                     _is_key_pressed:
  4169                           	opt stack 29
  4170                           
  4171                           ;incstack = 0
  4172                           ;is_key_pressed@k stored from wreg
  4173  0050C0  6E55               	movwf	is_key_pressed@k,c
  4174                           
  4175                           ;newmain.c: 1049: int matrix=k>>4;
  4176  0050C2  C055  F049         	movff	is_key_pressed@k,??_is_key_pressed
  4177  0050C6  3A49               	swapf	??_is_key_pressed,f,c
  4178  0050C8  0E0F               	movlw	15
  4179  0050CA  1649               	andwf	??_is_key_pressed,f,c
  4180  0050CC  5049               	movf	??_is_key_pressed,w,c
  4181  0050CE  6E51               	movwf	is_key_pressed@matrix,c
  4182  0050D0  6A52               	clrf	is_key_pressed@matrix+1,c
  4183                           
  4184                           ;newmain.c: 1050: int led=k&0b1111;
  4185  0050D2  C055  F049         	movff	is_key_pressed@k,??_is_key_pressed
  4186  0050D6  0E0F               	movlw	15
  4187  0050D8  1649               	andwf	??_is_key_pressed,f,c
  4188  0050DA  5049               	movf	??_is_key_pressed,w,c
  4189  0050DC  6E53               	movwf	is_key_pressed@led,c
  4190  0050DE  6A54               	clrf	is_key_pressed@led+1,c
  4191                           
  4192                           ;newmain.c: 1051: return (matrices[matrix].keys[buttonLUT[led]>>4]&(1<<(buttonLUT[led]&0
      +                          x0f)));
  4193  0050E0  C051  F043         	movff	is_key_pressed@matrix,___wmul@multiplier
  4194  0050E4  C052  F044         	movff	is_key_pressed@matrix+1,___wmul@multiplier+1
  4195  0050E8  0E00               	movlw	0
  4196  0050EA  6E46               	movwf	___wmul@multiplicand+1,c
  4197  0050EC  0E1D               	movlw	29
  4198  0050EE  6E45               	movwf	___wmul@multiplicand,c
  4199  0050F0  EC7C  F027         	call	___wmul	;wreg free
  4200  0050F4  0EDF               	movlw	low _buttonLUT
  4201  0050F6  2453               	addwf	is_key_pressed@led,w,c
  4202  0050F8  6EF6               	movwf	tblptrl,c
  4203  0050FA  0E7F               	movlw	high _buttonLUT
  4204  0050FC  2054               	addwfc	is_key_pressed@led+1,w,c
  4205  0050FE  6EF7               	movwf	tblptrh,c
  4206  005100                     	if	0	;There are less than 3 active tblptr bytes
  4207  005100                     	endif
  4208  005100  0008               	tblrd		*
  4209  005102  CFF5 F049          	movff	tablat,??_is_key_pressed
  4210  005106  3849               	swapf	??_is_key_pressed,w,c
  4211  005108  0B0F               	andlw	15
  4212  00510A  6E4A               	movwf	(??_is_key_pressed+1)& (0+255),c
  4213  00510C  6A4B               	clrf	(??_is_key_pressed+2)& (0+255),c
  4214  00510E  0E01               	movlw	1
  4215  005110  264A               	addwf	??_is_key_pressed+1,f,c
  4216  005112  0E00               	movlw	0
  4217  005114  224B               	addwfc	??_is_key_pressed+2,f,c
  4218  005116  0E80               	movlw	low _matrices
  4219  005118  6E4C               	movwf	(??_is_key_pressed+3)& (0+255),c
  4220  00511A  0E00               	movlw	high _matrices
  4221  00511C  6E4D               	movwf	(??_is_key_pressed+4)& (0+255),c
  4222  00511E  504A               	movf	??_is_key_pressed+1,w,c
  4223  005120  264C               	addwf	??_is_key_pressed+3,f,c
  4224  005122  504B               	movf	??_is_key_pressed+2,w,c
  4225  005124  224D               	addwfc	??_is_key_pressed+4,f,c
  4226  005126  5043               	movf	?___wmul,w,c
  4227  005128  244C               	addwf	??_is_key_pressed+3,w,c
  4228  00512A  6ED9               	movwf	fsr2l,c
  4229  00512C  5044               	movf	?___wmul+1,w,c
  4230  00512E  204D               	addwfc	??_is_key_pressed+4,w,c
  4231  005130  6EDA               	movwf	fsr2h,c
  4232  005132  50DF               	movf	indf2,w,c
  4233  005134  6E4E               	movwf	(??_is_key_pressed+5)& (0+255),c
  4234  005136  0EDF               	movlw	low _buttonLUT
  4235  005138  2453               	addwf	is_key_pressed@led,w,c
  4236  00513A  6EF6               	movwf	tblptrl,c
  4237  00513C  0E7F               	movlw	high _buttonLUT
  4238  00513E  2054               	addwfc	is_key_pressed@led+1,w,c
  4239  005140  6EF7               	movwf	tblptrh,c
  4240  005142                     	if	0	;There are less than 3 active tblptr bytes
  4241  005142                     	endif
  4242  005142  0008               	tblrd		*
  4243  005144  CFF5 F04F          	movff	tablat,??_is_key_pressed+6
  4244  005148  0E0F               	movlw	15
  4245  00514A  164F               	andwf	??_is_key_pressed+6,f,c
  4246  00514C  0E01               	movlw	1
  4247  00514E  6E50               	movwf	(??_is_key_pressed+7)& (0+255),c
  4248  005150  2A4F               	incf	??_is_key_pressed+6,f,c
  4249  005152  D002               	goto	u3644
  4250  005154                     u3645:
  4251  005154  90D8               	bcf	status,0,c
  4252  005156  3650               	rlcf	??_is_key_pressed+7,f,c
  4253  005158                     u3644:
  4254  005158  2E4F               	decfsz	??_is_key_pressed+6,f,c
  4255  00515A  D7FC               	goto	u3645
  4256  00515C  5050               	movf	??_is_key_pressed+7,w,c
  4257  00515E  144E               	andwf	??_is_key_pressed+5,w,c
  4258  005160  0012               	return	
  4259  005162                     __end_of_is_key_pressed:
  4260                           	opt stack 0
  4261                           tblptru	equ	0xFF8
  4262                           tblptrh	equ	0xFF7
  4263                           tblptrl	equ	0xFF6
  4264                           tablat	equ	0xFF5
  4265                           postinc0	equ	0xFEE
  4266                           wreg	equ	0xFE8
  4267                           postinc1	equ	0xFE6
  4268                           fsr1h	equ	0xFE2
  4269                           fsr1l	equ	0xFE1
  4270                           indf2	equ	0xFDF
  4271                           postinc2	equ	0xFDE
  4272                           fsr2h	equ	0xFDA
  4273                           fsr2l	equ	0xFD9
  4274                           status	equ	0xFD8
  4275                           
  4276 ;; *************** function _animation7 *****************
  4277 ;; Defined at:
  4278 ;;		line 957 in file "newmain.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;  h               1    wreg     unsigned char 
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;  h               1   23[COMRAM] unsigned char 
  4283 ;;  j               1   25[COMRAM] unsigned char 
  4284 ;;  i               1   24[COMRAM] unsigned char 
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  1    wreg      void 
  4287 ;; Registers used:
  4288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4294 ;;      Params:         0       0       0       0       0       0       0
  4295 ;;      Locals:         3       0       0       0       0       0       0
  4296 ;;      Temps:          2       0       0       0       0       0       0
  4297 ;;      Totals:         5       0       0       0       0       0       0
  4298 ;;Total ram usage:        5 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; Hardware stack levels required when called:    4
  4301 ;; This function calls:
  4302 ;;		_clr_led
  4303 ;;		_set_led
  4304 ;;		_write_display
  4305 ;; This function is called by:
  4306 ;;		_main
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           	psect	text8
  4311  0060BE                     __ptext8:
  4312                           	opt stack 0
  4313  0060BE                     _animation7:
  4314                           	opt stack 26
  4315                           
  4316                           ;incstack = 0
  4317                           ;animation7@h stored from wreg
  4318  0060BE  6E5A               	movwf	animation7@h,c
  4319                           
  4320                           ;newmain.c: 958: uint8_t i = 0, j = 0;
  4321  0060C0  0E00               	movlw	0
  4322  0060C2  6E5B               	movwf	animation7@i,c
  4323  0060C4  0E00               	movlw	0
  4324  0060C6  6E5C               	movwf	animation7@j,c
  4325                           
  4326                           ;newmain.c: 959: if (h == 15 || h == 28 || h == 35 || h == 48 || h == 10 || h == 11 || h
      +                           == 24 || h == 25 || h == 14 || h == 34 || h == 38 || h == 39 || h == 52 || h == 53 || h
      +                           == 29 || h == 49) {
  4327  0060C8  0E0F               	movlw	15
  4328  0060CA  185A               	xorwf	animation7@h,w,c
  4329  0060CC  B4D8               	btfsc	status,2,c
  4330  0060CE  D03C               	goto	u5550
  4331  0060D0  0E1C               	movlw	28
  4332  0060D2  185A               	xorwf	animation7@h,w,c
  4333  0060D4  B4D8               	btfsc	status,2,c
  4334  0060D6  D038               	goto	u5550
  4335  0060D8  0E23               	movlw	35
  4336  0060DA  185A               	xorwf	animation7@h,w,c
  4337  0060DC  B4D8               	btfsc	status,2,c
  4338  0060DE  D034               	goto	u5550
  4339  0060E0  0E30               	movlw	48
  4340  0060E2  185A               	xorwf	animation7@h,w,c
  4341  0060E4  B4D8               	btfsc	status,2,c
  4342  0060E6  D030               	goto	u5550
  4343  0060E8  0E0A               	movlw	10
  4344  0060EA  185A               	xorwf	animation7@h,w,c
  4345  0060EC  B4D8               	btfsc	status,2,c
  4346  0060EE  D02C               	goto	u5550
  4347  0060F0  0E0B               	movlw	11
  4348  0060F2  185A               	xorwf	animation7@h,w,c
  4349  0060F4  B4D8               	btfsc	status,2,c
  4350  0060F6  D028               	goto	u5550
  4351  0060F8  0E18               	movlw	24
  4352  0060FA  185A               	xorwf	animation7@h,w,c
  4353  0060FC  B4D8               	btfsc	status,2,c
  4354  0060FE  D024               	goto	u5550
  4355  006100  0E19               	movlw	25
  4356  006102  185A               	xorwf	animation7@h,w,c
  4357  006104  B4D8               	btfsc	status,2,c
  4358  006106  D020               	goto	u5550
  4359  006108  0E0E               	movlw	14
  4360  00610A  185A               	xorwf	animation7@h,w,c
  4361  00610C  B4D8               	btfsc	status,2,c
  4362  00610E  D01C               	goto	u5550
  4363  006110  0E22               	movlw	34
  4364  006112  185A               	xorwf	animation7@h,w,c
  4365  006114  B4D8               	btfsc	status,2,c
  4366  006116  D018               	goto	u5550
  4367  006118  0E26               	movlw	38
  4368  00611A  185A               	xorwf	animation7@h,w,c
  4369  00611C  B4D8               	btfsc	status,2,c
  4370  00611E  D014               	goto	u5550
  4371  006120  0E27               	movlw	39
  4372  006122  185A               	xorwf	animation7@h,w,c
  4373  006124  B4D8               	btfsc	status,2,c
  4374  006126  D010               	goto	u5550
  4375  006128  0E34               	movlw	52
  4376  00612A  185A               	xorwf	animation7@h,w,c
  4377  00612C  B4D8               	btfsc	status,2,c
  4378  00612E  D00C               	goto	u5550
  4379  006130  0E35               	movlw	53
  4380  006132  185A               	xorwf	animation7@h,w,c
  4381  006134  B4D8               	btfsc	status,2,c
  4382  006136  D008               	goto	u5550
  4383  006138  0E1D               	movlw	29
  4384  00613A  185A               	xorwf	animation7@h,w,c
  4385  00613C  B4D8               	btfsc	status,2,c
  4386  00613E  D004               	goto	u5550
  4387  006140  0E31               	movlw	49
  4388  006142  185A               	xorwf	animation7@h,w,c
  4389  006144  A4D8               	btfss	status,2,c
  4390  006146  D06C               	goto	l438
  4391  006148                     u5550:
  4392                           
  4393                           ;newmain.c: 960: for (i = 0; i < 4; i++) {
  4394  006148  0E00               	movlw	0
  4395  00614A  6E5B               	movwf	animation7@i,c
  4396  00614C                     l4367:
  4397  00614C  0E03               	movlw	3
  4398  00614E  645B               	cpfsgt	animation7@i,c
  4399  006150  D001               	goto	l441
  4400  006152  0012               	return	
  4401  006154                     l441:
  4402                           
  4403                           ;newmain.c: 961: for (j = 0; j < 29; j++) {
  4404  006154  0E00               	movlw	0
  4405  006156  6E5C               	movwf	animation7@j,c
  4406  006158                     l4373:
  4407  006158  0E1C               	movlw	28
  4408  00615A  645C               	cpfsgt	animation7@j,c
  4409  00615C  D001               	goto	l443
  4410  00615E  D033               	goto	u5590
  4411  006160                     l443:
  4412                           
  4413                           ;newmain.c: 962: if (show7_1[i][j] != 100)
  4414  006160  505B               	movf	animation7@i,w,c
  4415  006162  0D1D               	mullw	29
  4416  006164  0E4D               	movlw	low _show7_1
  4417  006166  6E58               	movwf	??_animation7& (0+255),c
  4418  006168  0E7C               	movlw	high _show7_1
  4419  00616A  6E59               	movwf	(??_animation7+1)& (0+255),c
  4420  00616C  50F3               	movf	prodl,w,c
  4421  00616E  2658               	addwf	??_animation7,f,c
  4422  006170  50F4               	movf	prodh,w,c
  4423  006172  2259               	addwfc	??_animation7+1,f,c
  4424  006174  505C               	movf	animation7@j,w,c
  4425  006176  0D01               	mullw	1
  4426  006178  50F3               	movf	prodl,w,c
  4427  00617A  2658               	addwf	??_animation7,f,c
  4428  00617C  50F4               	movf	prodh,w,c
  4429  00617E  2259               	addwfc	??_animation7+1,f,c
  4430  006180  C058  FFF6         	movff	??_animation7,tblptrl
  4431  006184  C059  FFF7         	movff	??_animation7+1,tblptrh
  4432  006188                     	if	0	;tblptru may be non-zero
  4433  006188                     	endif
  4434  006188                     	if	0	;tblptru may be non-zero
  4435  006188                     	endif
  4436  006188  0008               	tblrd		*
  4437  00618A  50F5               	movf	tablat,w,c
  4438  00618C  0A64               	xorlw	100
  4439  00618E  B4D8               	btfsc	status,2,c
  4440  006190  D018               	goto	l445
  4441                           
  4442                           ;newmain.c: 963: set_led(show7_1[i][j]);
  4443  006192  505B               	movf	animation7@i,w,c
  4444  006194  0D1D               	mullw	29
  4445  006196  0E4D               	movlw	low _show7_1
  4446  006198  6E58               	movwf	??_animation7& (0+255),c
  4447  00619A  0E7C               	movlw	high _show7_1
  4448  00619C  6E59               	movwf	(??_animation7+1)& (0+255),c
  4449  00619E  50F3               	movf	prodl,w,c
  4450  0061A0  2658               	addwf	??_animation7,f,c
  4451  0061A2  50F4               	movf	prodh,w,c
  4452  0061A4  2259               	addwfc	??_animation7+1,f,c
  4453  0061A6  505C               	movf	animation7@j,w,c
  4454  0061A8  0D01               	mullw	1
  4455  0061AA  50F3               	movf	prodl,w,c
  4456  0061AC  2658               	addwf	??_animation7,f,c
  4457  0061AE  50F4               	movf	prodh,w,c
  4458  0061B0  2259               	addwfc	??_animation7+1,f,c
  4459  0061B2  C058  FFF6         	movff	??_animation7,tblptrl
  4460  0061B6  C059  FFF7         	movff	??_animation7+1,tblptrh
  4461  0061BA                     	if	0	;tblptru may be non-zero
  4462  0061BA                     	endif
  4463  0061BA                     	if	0	;tblptru may be non-zero
  4464  0061BA                     	endif
  4465  0061BA  0008               	tblrd		*
  4466  0061BC  50F5               	movf	tablat,w,c
  4467  0061BE  EC02  F029         	call	_set_led
  4468  0061C2                     l445:
  4469  0061C2  2A5C               	incf	animation7@j,f,c
  4470  0061C4  D7C9               	goto	l4373
  4471  0061C6                     u5590:
  4472                           
  4473                           ;newmain.c: 964: }
  4474                           ;newmain.c: 965: write_display();
  4475  0061C6  ECB4  F029         	call	_write_display	;wreg free
  4476                           
  4477                           ;newmain.c: 966: _delay((unsigned long)((40)*(4000000/4000.0)));
  4478  0061CA  0E34               	movlw	52
  4479  0061CC  6E58               	movwf	??_animation7& (0+255),c
  4480  0061CE  0EF2               	movlw	242
  4481  0061D0                     u6567:
  4482  0061D0  2EE8               	decfsz	wreg,f,c
  4483  0061D2  D7FE               	bra	u6567
  4484  0061D4  2E58               	decfsz	??_animation7& (0+255),f,c
  4485  0061D6  D7FC               	bra	u6567
  4486                           
  4487                           ;newmain.c: 967: for (j = 0; j < 29; j++)
  4488  0061D8  0E00               	movlw	0
  4489  0061DA  6E5C               	movwf	animation7@j,c
  4490  0061DC                     l4391:
  4491  0061DC  0E1C               	movlw	28
  4492  0061DE  645C               	cpfsgt	animation7@j,c
  4493  0061E0  D001               	goto	l446
  4494  0061E2  D01A               	goto	u5610
  4495  0061E4                     l446:
  4496                           
  4497                           ;newmain.c: 968: clr_led(show7_1[i][j]);
  4498  0061E4  505B               	movf	animation7@i,w,c
  4499  0061E6  0D1D               	mullw	29
  4500  0061E8  0E4D               	movlw	low _show7_1
  4501  0061EA  6E58               	movwf	??_animation7& (0+255),c
  4502  0061EC  0E7C               	movlw	high _show7_1
  4503  0061EE  6E59               	movwf	(??_animation7+1)& (0+255),c
  4504  0061F0  50F3               	movf	prodl,w,c
  4505  0061F2  2658               	addwf	??_animation7,f,c
  4506  0061F4  50F4               	movf	prodh,w,c
  4507  0061F6  2259               	addwfc	??_animation7+1,f,c
  4508  0061F8  505C               	movf	animation7@j,w,c
  4509  0061FA  0D01               	mullw	1
  4510  0061FC  50F3               	movf	prodl,w,c
  4511  0061FE  2658               	addwf	??_animation7,f,c
  4512  006200  50F4               	movf	prodh,w,c
  4513  006202  2259               	addwfc	??_animation7+1,f,c
  4514  006204  C058  FFF6         	movff	??_animation7,tblptrl
  4515  006208  C059  FFF7         	movff	??_animation7+1,tblptrh
  4516  00620C                     	if	0	;tblptru may be non-zero
  4517  00620C                     	endif
  4518  00620C                     	if	0	;tblptru may be non-zero
  4519  00620C                     	endif
  4520  00620C  0008               	tblrd		*
  4521  00620E  50F5               	movf	tablat,w,c
  4522  006210  EC59  F029         	call	_clr_led
  4523  006214  2A5C               	incf	animation7@j,f,c
  4524  006216  D7E2               	goto	l4391
  4525  006218                     u5610:
  4526                           
  4527                           ;newmain.c: 969: write_display();
  4528  006218  ECB4  F029         	call	_write_display	;wreg free
  4529  00621C  2A5B               	incf	animation7@i,f,c
  4530  00621E  D796               	goto	l4367
  4531  006220                     l438:
  4532                           
  4533                           ;newmain.c: 973: if (count == 0) {
  4534  006220  5041               	movf	_count,w,c
  4535  006222  1042               	iorwf	_count+1,w,c
  4536  006224  A4D8               	btfss	status,2,c
  4537  006226  D08B               	goto	l449
  4538                           
  4539                           ;newmain.c: 974: for (i = 0; i < 9; i++) {
  4540  006228  0E00               	movlw	0
  4541  00622A  6E5B               	movwf	animation7@i,c
  4542  00622C                     l4411:
  4543  00622C  0E08               	movlw	8
  4544  00622E  645B               	cpfsgt	animation7@i,c
  4545  006230  D001               	goto	l450
  4546  006232  D080               	goto	u5710
  4547  006234                     l450:
  4548                           
  4549                           ;newmain.c: 975: for (j = 0; j < 24; j++) {
  4550  006234  0E00               	movlw	0
  4551  006236  6E5C               	movwf	animation7@j,c
  4552  006238                     l4417:
  4553  006238  0E17               	movlw	23
  4554  00623A  645C               	cpfsgt	animation7@j,c
  4555  00623C  D001               	goto	l452
  4556  00623E  D033               	goto	u5670
  4557  006240                     l452:
  4558                           
  4559                           ;newmain.c: 976: if (show7_2[i][j] != 100)
  4560  006240  505B               	movf	animation7@i,w,c
  4561  006242  0D18               	mullw	24
  4562  006244  0EFD               	movlw	low _show7_2
  4563  006246  6E58               	movwf	??_animation7& (0+255),c
  4564  006248  0E7A               	movlw	high _show7_2
  4565  00624A  6E59               	movwf	(??_animation7+1)& (0+255),c
  4566  00624C  50F3               	movf	prodl,w,c
  4567  00624E  2658               	addwf	??_animation7,f,c
  4568  006250  50F4               	movf	prodh,w,c
  4569  006252  2259               	addwfc	??_animation7+1,f,c
  4570  006254  505C               	movf	animation7@j,w,c
  4571  006256  0D01               	mullw	1
  4572  006258  50F3               	movf	prodl,w,c
  4573  00625A  2658               	addwf	??_animation7,f,c
  4574  00625C  50F4               	movf	prodh,w,c
  4575  00625E  2259               	addwfc	??_animation7+1,f,c
  4576  006260  C058  FFF6         	movff	??_animation7,tblptrl
  4577  006264  C059  FFF7         	movff	??_animation7+1,tblptrh
  4578  006268                     	if	0	;tblptru may be non-zero
  4579  006268                     	endif
  4580  006268                     	if	0	;tblptru may be non-zero
  4581  006268                     	endif
  4582  006268  0008               	tblrd		*
  4583  00626A  50F5               	movf	tablat,w,c
  4584  00626C  0A64               	xorlw	100
  4585  00626E  B4D8               	btfsc	status,2,c
  4586  006270  D018               	goto	l454
  4587                           
  4588                           ;newmain.c: 977: set_led(show7_2[i][j]);
  4589  006272  505B               	movf	animation7@i,w,c
  4590  006274  0D18               	mullw	24
  4591  006276  0EFD               	movlw	low _show7_2
  4592  006278  6E58               	movwf	??_animation7& (0+255),c
  4593  00627A  0E7A               	movlw	high _show7_2
  4594  00627C  6E59               	movwf	(??_animation7+1)& (0+255),c
  4595  00627E  50F3               	movf	prodl,w,c
  4596  006280  2658               	addwf	??_animation7,f,c
  4597  006282  50F4               	movf	prodh,w,c
  4598  006284  2259               	addwfc	??_animation7+1,f,c
  4599  006286  505C               	movf	animation7@j,w,c
  4600  006288  0D01               	mullw	1
  4601  00628A  50F3               	movf	prodl,w,c
  4602  00628C  2658               	addwf	??_animation7,f,c
  4603  00628E  50F4               	movf	prodh,w,c
  4604  006290  2259               	addwfc	??_animation7+1,f,c
  4605  006292  C058  FFF6         	movff	??_animation7,tblptrl
  4606  006296  C059  FFF7         	movff	??_animation7+1,tblptrh
  4607  00629A                     	if	0	;tblptru may be non-zero
  4608  00629A                     	endif
  4609  00629A                     	if	0	;tblptru may be non-zero
  4610  00629A                     	endif
  4611  00629A  0008               	tblrd		*
  4612  00629C  50F5               	movf	tablat,w,c
  4613  00629E  EC02  F029         	call	_set_led
  4614  0062A2                     l454:
  4615  0062A2  2A5C               	incf	animation7@j,f,c
  4616  0062A4  D7C9               	goto	l4417
  4617  0062A6                     u5670:
  4618                           
  4619                           ;newmain.c: 978: }
  4620                           ;newmain.c: 979: write_display();
  4621  0062A6  ECB4  F029         	call	_write_display	;wreg free
  4622                           
  4623                           ;newmain.c: 980: _delay((unsigned long)((50)*(4000000/4000.0)));
  4624  0062AA  0E41               	movlw	65
  4625  0062AC  6E58               	movwf	??_animation7& (0+255),c
  4626  0062AE  0EEE               	movlw	238
  4627  0062B0                     u6577:
  4628  0062B0  2EE8               	decfsz	wreg,f,c
  4629  0062B2  D7FE               	bra	u6577
  4630  0062B4  2E58               	decfsz	??_animation7& (0+255),f,c
  4631  0062B6  D7FC               	bra	u6577
  4632  0062B8  D000               	nop2	
  4633                           
  4634                           ;newmain.c: 981: for (j = 0; j < 24; j++)
  4635  0062BA  0E00               	movlw	0
  4636  0062BC  6E5C               	movwf	animation7@j,c
  4637  0062BE                     l4435:
  4638  0062BE  0E17               	movlw	23
  4639  0062C0  645C               	cpfsgt	animation7@j,c
  4640  0062C2  D001               	goto	l455
  4641  0062C4  D033               	goto	u5700
  4642  0062C6                     l455:
  4643                           
  4644                           ;newmain.c: 982: if (show7_2[i][j] != 100)
  4645  0062C6  505B               	movf	animation7@i,w,c
  4646  0062C8  0D18               	mullw	24
  4647  0062CA  0EFD               	movlw	low _show7_2
  4648  0062CC  6E58               	movwf	??_animation7& (0+255),c
  4649  0062CE  0E7A               	movlw	high _show7_2
  4650  0062D0  6E59               	movwf	(??_animation7+1)& (0+255),c
  4651  0062D2  50F3               	movf	prodl,w,c
  4652  0062D4  2658               	addwf	??_animation7,f,c
  4653  0062D6  50F4               	movf	prodh,w,c
  4654  0062D8  2259               	addwfc	??_animation7+1,f,c
  4655  0062DA  505C               	movf	animation7@j,w,c
  4656  0062DC  0D01               	mullw	1
  4657  0062DE  50F3               	movf	prodl,w,c
  4658  0062E0  2658               	addwf	??_animation7,f,c
  4659  0062E2  50F4               	movf	prodh,w,c
  4660  0062E4  2259               	addwfc	??_animation7+1,f,c
  4661  0062E6  C058  FFF6         	movff	??_animation7,tblptrl
  4662  0062EA  C059  FFF7         	movff	??_animation7+1,tblptrh
  4663  0062EE                     	if	0	;tblptru may be non-zero
  4664  0062EE                     	endif
  4665  0062EE                     	if	0	;tblptru may be non-zero
  4666  0062EE                     	endif
  4667  0062EE  0008               	tblrd		*
  4668  0062F0  50F5               	movf	tablat,w,c
  4669  0062F2  0A64               	xorlw	100
  4670  0062F4  B4D8               	btfsc	status,2,c
  4671  0062F6  D018               	goto	l457
  4672                           
  4673                           ;newmain.c: 983: clr_led(show7_2[i][j]);
  4674  0062F8  505B               	movf	animation7@i,w,c
  4675  0062FA  0D18               	mullw	24
  4676  0062FC  0EFD               	movlw	low _show7_2
  4677  0062FE  6E58               	movwf	??_animation7& (0+255),c
  4678  006300  0E7A               	movlw	high _show7_2
  4679  006302  6E59               	movwf	(??_animation7+1)& (0+255),c
  4680  006304  50F3               	movf	prodl,w,c
  4681  006306  2658               	addwf	??_animation7,f,c
  4682  006308  50F4               	movf	prodh,w,c
  4683  00630A  2259               	addwfc	??_animation7+1,f,c
  4684  00630C  505C               	movf	animation7@j,w,c
  4685  00630E  0D01               	mullw	1
  4686  006310  50F3               	movf	prodl,w,c
  4687  006312  2658               	addwf	??_animation7,f,c
  4688  006314  50F4               	movf	prodh,w,c
  4689  006316  2259               	addwfc	??_animation7+1,f,c
  4690  006318  C058  FFF6         	movff	??_animation7,tblptrl
  4691  00631C  C059  FFF7         	movff	??_animation7+1,tblptrh
  4692  006320                     	if	0	;tblptru may be non-zero
  4693  006320                     	endif
  4694  006320                     	if	0	;tblptru may be non-zero
  4695  006320                     	endif
  4696  006320  0008               	tblrd		*
  4697  006322  50F5               	movf	tablat,w,c
  4698  006324  EC59  F029         	call	_clr_led
  4699  006328                     l457:
  4700  006328  2A5C               	incf	animation7@j,f,c
  4701  00632A  D7C9               	goto	l4435
  4702  00632C                     u5700:
  4703                           
  4704                           ;newmain.c: 984: write_display();
  4705  00632C  ECB4  F029         	call	_write_display	;wreg free
  4706  006330  2A5B               	incf	animation7@i,f,c
  4707  006332  D77C               	goto	l4411
  4708  006334                     u5710:
  4709                           
  4710                           ;newmain.c: 985: }
  4711                           ;newmain.c: 986: count = 1;
  4712  006334  0E00               	movlw	0
  4713  006336  6E42               	movwf	_count+1,c
  4714  006338  0E01               	movlw	1
  4715  00633A  6E41               	movwf	_count,c
  4716                           
  4717                           ;newmain.c: 988: } else if (count == 1) {
  4718  00633C  0012               	return	
  4719  00633E                     l449:
  4720  00633E  0441               	decf	_count,w,c
  4721  006340  1042               	iorwf	_count+1,w,c
  4722  006342  A4D8               	btfss	status,2,c
  4723  006344  0012               	return	
  4724                           
  4725                           ;newmain.c: 989: for (i = 8; i >= 0; i--) {
  4726  006346  0E08               	movlw	8
  4727  006348  6E5B               	movwf	animation7@i,c
  4728  00634A                     
  4729                           ;newmain.c: 990: for (j = 0; j < 24; j++) {
  4730  00634A  0E00               	movlw	0
  4731  00634C  6E5C               	movwf	animation7@j,c
  4732  00634E                     l4463:
  4733  00634E  0E17               	movlw	23
  4734  006350  645C               	cpfsgt	animation7@j,c
  4735  006352  D001               	goto	l462
  4736  006354  D033               	goto	u5750
  4737  006356                     l462:
  4738                           
  4739                           ;newmain.c: 991: if (show7_2[i][j] != 100)
  4740  006356  505B               	movf	animation7@i,w,c
  4741  006358  0D18               	mullw	24
  4742  00635A  0EFD               	movlw	low _show7_2
  4743  00635C  6E58               	movwf	??_animation7& (0+255),c
  4744  00635E  0E7A               	movlw	high _show7_2
  4745  006360  6E59               	movwf	(??_animation7+1)& (0+255),c
  4746  006362  50F3               	movf	prodl,w,c
  4747  006364  2658               	addwf	??_animation7,f,c
  4748  006366  50F4               	movf	prodh,w,c
  4749  006368  2259               	addwfc	??_animation7+1,f,c
  4750  00636A  505C               	movf	animation7@j,w,c
  4751  00636C  0D01               	mullw	1
  4752  00636E  50F3               	movf	prodl,w,c
  4753  006370  2658               	addwf	??_animation7,f,c
  4754  006372  50F4               	movf	prodh,w,c
  4755  006374  2259               	addwfc	??_animation7+1,f,c
  4756  006376  C058  FFF6         	movff	??_animation7,tblptrl
  4757  00637A  C059  FFF7         	movff	??_animation7+1,tblptrh
  4758  00637E                     	if	0	;tblptru may be non-zero
  4759  00637E                     	endif
  4760  00637E                     	if	0	;tblptru may be non-zero
  4761  00637E                     	endif
  4762  00637E  0008               	tblrd		*
  4763  006380  50F5               	movf	tablat,w,c
  4764  006382  0A64               	xorlw	100
  4765  006384  B4D8               	btfsc	status,2,c
  4766  006386  D018               	goto	l464
  4767                           
  4768                           ;newmain.c: 992: set_led(show7_2[i][j]);
  4769  006388  505B               	movf	animation7@i,w,c
  4770  00638A  0D18               	mullw	24
  4771  00638C  0EFD               	movlw	low _show7_2
  4772  00638E  6E58               	movwf	??_animation7& (0+255),c
  4773  006390  0E7A               	movlw	high _show7_2
  4774  006392  6E59               	movwf	(??_animation7+1)& (0+255),c
  4775  006394  50F3               	movf	prodl,w,c
  4776  006396  2658               	addwf	??_animation7,f,c
  4777  006398  50F4               	movf	prodh,w,c
  4778  00639A  2259               	addwfc	??_animation7+1,f,c
  4779  00639C  505C               	movf	animation7@j,w,c
  4780  00639E  0D01               	mullw	1
  4781  0063A0  50F3               	movf	prodl,w,c
  4782  0063A2  2658               	addwf	??_animation7,f,c
  4783  0063A4  50F4               	movf	prodh,w,c
  4784  0063A6  2259               	addwfc	??_animation7+1,f,c
  4785  0063A8  C058  FFF6         	movff	??_animation7,tblptrl
  4786  0063AC  C059  FFF7         	movff	??_animation7+1,tblptrh
  4787  0063B0                     	if	0	;tblptru may be non-zero
  4788  0063B0                     	endif
  4789  0063B0                     	if	0	;tblptru may be non-zero
  4790  0063B0                     	endif
  4791  0063B0  0008               	tblrd		*
  4792  0063B2  50F5               	movf	tablat,w,c
  4793  0063B4  EC02  F029         	call	_set_led
  4794  0063B8                     l464:
  4795  0063B8  2A5C               	incf	animation7@j,f,c
  4796  0063BA  D7C9               	goto	l4463
  4797  0063BC                     u5750:
  4798                           
  4799                           ;newmain.c: 993: }
  4800                           ;newmain.c: 994: write_display();
  4801  0063BC  ECB4  F029         	call	_write_display	;wreg free
  4802                           
  4803                           ;newmain.c: 995: _delay((unsigned long)((50)*(4000000/4000.0)));
  4804  0063C0  0E41               	movlw	65
  4805  0063C2  6E58               	movwf	??_animation7& (0+255),c
  4806  0063C4  0EEE               	movlw	238
  4807  0063C6                     u6587:
  4808  0063C6  2EE8               	decfsz	wreg,f,c
  4809  0063C8  D7FE               	bra	u6587
  4810  0063CA  2E58               	decfsz	??_animation7& (0+255),f,c
  4811  0063CC  D7FC               	bra	u6587
  4812  0063CE  D000               	nop2	
  4813                           
  4814                           ;newmain.c: 996: for (j = 0; j < 24; j++)
  4815  0063D0  0E00               	movlw	0
  4816  0063D2  6E5C               	movwf	animation7@j,c
  4817  0063D4                     l4481:
  4818  0063D4  0E17               	movlw	23
  4819  0063D6  645C               	cpfsgt	animation7@j,c
  4820  0063D8  D001               	goto	l465
  4821  0063DA  D033               	goto	u5780
  4822  0063DC                     l465:
  4823                           
  4824                           ;newmain.c: 997: if (show7_2[i][j] != 100)
  4825  0063DC  505B               	movf	animation7@i,w,c
  4826  0063DE  0D18               	mullw	24
  4827  0063E0  0EFD               	movlw	low _show7_2
  4828  0063E2  6E58               	movwf	??_animation7& (0+255),c
  4829  0063E4  0E7A               	movlw	high _show7_2
  4830  0063E6  6E59               	movwf	(??_animation7+1)& (0+255),c
  4831  0063E8  50F3               	movf	prodl,w,c
  4832  0063EA  2658               	addwf	??_animation7,f,c
  4833  0063EC  50F4               	movf	prodh,w,c
  4834  0063EE  2259               	addwfc	??_animation7+1,f,c
  4835  0063F0  505C               	movf	animation7@j,w,c
  4836  0063F2  0D01               	mullw	1
  4837  0063F4  50F3               	movf	prodl,w,c
  4838  0063F6  2658               	addwf	??_animation7,f,c
  4839  0063F8  50F4               	movf	prodh,w,c
  4840  0063FA  2259               	addwfc	??_animation7+1,f,c
  4841  0063FC  C058  FFF6         	movff	??_animation7,tblptrl
  4842  006400  C059  FFF7         	movff	??_animation7+1,tblptrh
  4843  006404                     	if	0	;tblptru may be non-zero
  4844  006404                     	endif
  4845  006404                     	if	0	;tblptru may be non-zero
  4846  006404                     	endif
  4847  006404  0008               	tblrd		*
  4848  006406  50F5               	movf	tablat,w,c
  4849  006408  0A64               	xorlw	100
  4850  00640A  B4D8               	btfsc	status,2,c
  4851  00640C  D018               	goto	l467
  4852                           
  4853                           ;newmain.c: 998: clr_led(show7_2[i][j]);
  4854  00640E  505B               	movf	animation7@i,w,c
  4855  006410  0D18               	mullw	24
  4856  006412  0EFD               	movlw	low _show7_2
  4857  006414  6E58               	movwf	??_animation7& (0+255),c
  4858  006416  0E7A               	movlw	high _show7_2
  4859  006418  6E59               	movwf	(??_animation7+1)& (0+255),c
  4860  00641A  50F3               	movf	prodl,w,c
  4861  00641C  2658               	addwf	??_animation7,f,c
  4862  00641E  50F4               	movf	prodh,w,c
  4863  006420  2259               	addwfc	??_animation7+1,f,c
  4864  006422  505C               	movf	animation7@j,w,c
  4865  006424  0D01               	mullw	1
  4866  006426  50F3               	movf	prodl,w,c
  4867  006428  2658               	addwf	??_animation7,f,c
  4868  00642A  50F4               	movf	prodh,w,c
  4869  00642C  2259               	addwfc	??_animation7+1,f,c
  4870  00642E  C058  FFF6         	movff	??_animation7,tblptrl
  4871  006432  C059  FFF7         	movff	??_animation7+1,tblptrh
  4872  006436                     	if	0	;tblptru may be non-zero
  4873  006436                     	endif
  4874  006436                     	if	0	;tblptru may be non-zero
  4875  006436                     	endif
  4876  006436  0008               	tblrd		*
  4877  006438  50F5               	movf	tablat,w,c
  4878  00643A  EC59  F029         	call	_clr_led
  4879  00643E                     l467:
  4880  00643E  2A5C               	incf	animation7@j,f,c
  4881  006440  D7C9               	goto	l4481
  4882  006442                     u5780:
  4883                           
  4884                           ;newmain.c: 999: write_display();
  4885  006442  ECB4  F029         	call	_write_display	;wreg free
  4886  006446  065B               	decf	animation7@i,f,c
  4887  006448  D780               	goto	l460
  4888  00644A                     __end_of_animation7:
  4889                           	opt stack 0
  4890                           tblptru	equ	0xFF8
  4891                           tblptrh	equ	0xFF7
  4892                           tblptrl	equ	0xFF6
  4893                           tablat	equ	0xFF5
  4894                           prodh	equ	0xFF4
  4895                           prodl	equ	0xFF3
  4896                           postinc0	equ	0xFEE
  4897                           wreg	equ	0xFE8
  4898                           postinc1	equ	0xFE6
  4899                           fsr1h	equ	0xFE2
  4900                           fsr1l	equ	0xFE1
  4901                           indf2	equ	0xFDF
  4902                           postinc2	equ	0xFDE
  4903                           fsr2h	equ	0xFDA
  4904                           fsr2l	equ	0xFD9
  4905                           status	equ	0xFD8
  4906                           
  4907 ;; *************** function _animation6 *****************
  4908 ;; Defined at:
  4909 ;;		line 923 in file "newmain.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;  m               1    wreg     unsigned char 
  4912 ;;  n               1   21[COMRAM] unsigned char 
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;  m               1   35[COMRAM] unsigned char 
  4915 ;;  x               1   26[COMRAM] unsigned char 
  4916 ;;  d               2   33[COMRAM] int 
  4917 ;;  c               2   31[COMRAM] int 
  4918 ;;  b               2   29[COMRAM] int 
  4919 ;;  a               2   27[COMRAM] int 
  4920 ;; Return value:  Size  Location     Type
  4921 ;;                  1    wreg      void 
  4922 ;; Registers used:
  4923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4924 ;; Tracked objects:
  4925 ;;		On entry : 0/0
  4926 ;;		On exit  : 0/0
  4927 ;;		Unchanged: 0/0
  4928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4929 ;;      Params:         1       0       0       0       0       0       0
  4930 ;;      Locals:        10       0       0       0       0       0       0
  4931 ;;      Temps:          4       0       0       0       0       0       0
  4932 ;;      Totals:        15       0       0       0       0       0       0
  4933 ;;Total ram usage:       15 bytes
  4934 ;; Hardware stack levels used:    1
  4935 ;; Hardware stack levels required when called:    4
  4936 ;; This function calls:
  4937 ;;		_clr_led
  4938 ;;		_set_led
  4939 ;;		_write_display
  4940 ;; This function is called by:
  4941 ;;		_main
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945                           	psect	text9
  4946  0057E8                     __ptext9:
  4947                           	opt stack 0
  4948  0057E8                     _animation6:
  4949                           	opt stack 26
  4950                           
  4951                           ;incstack = 0
  4952                           ;animation6@m stored from wreg
  4953  0057E8  6E66               	movwf	animation6@m,c
  4954                           
  4955                           ;newmain.c: 924: int a = m - 1, b = m + 1, c = n - 1, d = n + 1;
  4956  0057EA  0EFF               	movlw	255
  4957  0057EC  2466               	addwf	animation6@m,w,c
  4958  0057EE  6E5E               	movwf	animation6@a,c
  4959  0057F0  6A5F               	clrf	animation6@a+1,c
  4960  0057F2  0EFF               	movlw	255
  4961  0057F4  225F               	addwfc	animation6@a+1,f,c
  4962  0057F6  0E01               	movlw	1
  4963  0057F8  2466               	addwf	animation6@m,w,c
  4964  0057FA  6E60               	movwf	animation6@b,c
  4965  0057FC  6A61               	clrf	animation6@b+1,c
  4966  0057FE  0E00               	movlw	0
  4967  005800  2261               	addwfc	animation6@b+1,f,c
  4968  005802  0EFF               	movlw	255
  4969  005804  2458               	addwf	animation6@n,w,c
  4970  005806  6E62               	movwf	animation6@c,c
  4971  005808  6A63               	clrf	animation6@c+1,c
  4972  00580A  0EFF               	movlw	255
  4973  00580C  2263               	addwfc	animation6@c+1,f,c
  4974  00580E  0E01               	movlw	1
  4975  005810  2458               	addwf	animation6@n,w,c
  4976  005812  6E64               	movwf	animation6@d,c
  4977  005814  6A65               	clrf	animation6@d+1,c
  4978  005816  0E00               	movlw	0
  4979  005818  2265               	addwfc	animation6@d+1,f,c
  4980                           
  4981                           ;newmain.c: 926: set_led(Buttons[m][n]);
  4982  00581A  5066               	movf	animation6@m,w,c
  4983  00581C  0D08               	mullw	8
  4984  00581E  0EF9               	movlw	low _Buttons
  4985  005820  6E59               	movwf	??_animation6& (0+255),c
  4986  005822  0E7E               	movlw	high _Buttons
  4987  005824  6E5A               	movwf	(??_animation6+1)& (0+255),c
  4988  005826  50F3               	movf	prodl,w,c
  4989  005828  2659               	addwf	??_animation6,f,c
  4990  00582A  50F4               	movf	prodh,w,c
  4991  00582C  225A               	addwfc	??_animation6+1,f,c
  4992  00582E  5058               	movf	animation6@n,w,c
  4993  005830  0D01               	mullw	1
  4994  005832  50F3               	movf	prodl,w,c
  4995  005834  2659               	addwf	??_animation6,f,c
  4996  005836  50F4               	movf	prodh,w,c
  4997  005838  225A               	addwfc	??_animation6+1,f,c
  4998  00583A  C059  FFF6         	movff	??_animation6,tblptrl
  4999  00583E  C05A  FFF7         	movff	??_animation6+1,tblptrh
  5000  005842                     	if	0	;tblptru may be non-zero
  5001  005842                     	endif
  5002  005842                     	if	0	;tblptru may be non-zero
  5003  005842                     	endif
  5004  005842  0008               	tblrd		*
  5005  005844  50F5               	movf	tablat,w,c
  5006  005846  EC02  F029         	call	_set_led
  5007                           
  5008                           ;newmain.c: 927: write_display();
  5009  00584A  ECB4  F029         	call	_write_display	;wreg free
  5010                           
  5011                           ;newmain.c: 928: _delay((unsigned long)((40)*(4000000/4000.0)));
  5012  00584E  0E34               	movlw	52
  5013  005850  6E59               	movwf	??_animation6& (0+255),c
  5014  005852  0EF2               	movlw	242
  5015  005854                     u6597:
  5016  005854  2EE8               	decfsz	wreg,f,c
  5017  005856  D7FE               	bra	u6597
  5018  005858  2E59               	decfsz	??_animation6& (0+255),f,c
  5019  00585A  D7FC               	bra	u6597
  5020                           
  5021                           ;newmain.c: 929: clr_led(Buttons[m][n]);
  5022  00585C  5066               	movf	animation6@m,w,c
  5023  00585E  0D08               	mullw	8
  5024  005860  0EF9               	movlw	low _Buttons
  5025  005862  6E59               	movwf	??_animation6& (0+255),c
  5026  005864  0E7E               	movlw	high _Buttons
  5027  005866  6E5A               	movwf	(??_animation6+1)& (0+255),c
  5028  005868  50F3               	movf	prodl,w,c
  5029  00586A  2659               	addwf	??_animation6,f,c
  5030  00586C  50F4               	movf	prodh,w,c
  5031  00586E  225A               	addwfc	??_animation6+1,f,c
  5032  005870  5058               	movf	animation6@n,w,c
  5033  005872  0D01               	mullw	1
  5034  005874  50F3               	movf	prodl,w,c
  5035  005876  2659               	addwf	??_animation6,f,c
  5036  005878  50F4               	movf	prodh,w,c
  5037  00587A  225A               	addwfc	??_animation6+1,f,c
  5038  00587C  C059  FFF6         	movff	??_animation6,tblptrl
  5039  005880  C05A  FFF7         	movff	??_animation6+1,tblptrh
  5040  005884                     	if	0	;tblptru may be non-zero
  5041  005884                     	endif
  5042  005884                     	if	0	;tblptru may be non-zero
  5043  005884                     	endif
  5044  005884  0008               	tblrd		*
  5045  005886  50F5               	movf	tablat,w,c
  5046  005888  EC59  F029         	call	_clr_led
  5047                           
  5048                           ;newmain.c: 930: write_display();
  5049  00588C  ECB4  F029         	call	_write_display	;wreg free
  5050                           
  5051                           ;newmain.c: 932: for (uint8_t x = 0; x < 8; x++) {
  5052  005890  0E00               	movlw	0
  5053  005892  6E5D               	movwf	animation6@x,c
  5054  005894                     l4285:
  5055  005894  0E07               	movlw	7
  5056  005896  645D               	cpfsgt	animation6@x,c
  5057  005898  D001               	goto	l427
  5058  00589A  0012               	return	
  5059  00589C                     l427:
  5060                           
  5061                           ;newmain.c: 933: if (a >= 0)
  5062  00589C  BE5F               	btfsc	animation6@a+1,7,c
  5063  00589E  D023               	goto	l429
  5064                           
  5065                           ;newmain.c: 934: set_led(Buttons[a][n]);
  5066  0058A0  5058               	movf	animation6@n,w,c
  5067  0058A2  0D01               	mullw	1
  5068  0058A4  C05E  F059         	movff	animation6@a,??_animation6
  5069  0058A8  C05F  F05A         	movff	animation6@a+1,??_animation6+1
  5070  0058AC  90D8               	bcf	status,0,c
  5071  0058AE  3659               	rlcf	??_animation6,f,c
  5072  0058B0  365A               	rlcf	??_animation6+1,f,c
  5073  0058B2  90D8               	bcf	status,0,c
  5074  0058B4  3659               	rlcf	??_animation6,f,c
  5075  0058B6  365A               	rlcf	??_animation6+1,f,c
  5076  0058B8  90D8               	bcf	status,0,c
  5077  0058BA  3659               	rlcf	??_animation6,f,c
  5078  0058BC  365A               	rlcf	??_animation6+1,f,c
  5079  0058BE  0EF9               	movlw	low _Buttons
  5080  0058C0  6E5B               	movwf	(??_animation6+2)& (0+255),c
  5081  0058C2  0E7E               	movlw	high _Buttons
  5082  0058C4  6E5C               	movwf	(??_animation6+3)& (0+255),c
  5083  0058C6  5059               	movf	??_animation6,w,c
  5084  0058C8  265B               	addwf	??_animation6+2,f,c
  5085  0058CA  505A               	movf	??_animation6+1,w,c
  5086  0058CC  225C               	addwfc	??_animation6+3,f,c
  5087  0058CE  50F3               	movf	prodl,w,c
  5088  0058D0  265B               	addwf	??_animation6+2,f,c
  5089  0058D2  50F4               	movf	prodh,w,c
  5090  0058D4  225C               	addwfc	??_animation6+3,f,c
  5091  0058D6  C05B  FFF6         	movff	??_animation6+2,tblptrl
  5092  0058DA  C05C  FFF7         	movff	??_animation6+3,tblptrh
  5093  0058DE                     	if	0	;tblptru may be non-zero
  5094  0058DE                     	endif
  5095  0058DE                     	if	0	;tblptru may be non-zero
  5096  0058DE                     	endif
  5097  0058DE  0008               	tblrd		*
  5098  0058E0  50F5               	movf	tablat,w,c
  5099  0058E2  EC02  F029         	call	_set_led
  5100  0058E6                     l429:
  5101                           
  5102                           ;newmain.c: 935: if (b < 8)
  5103  0058E6  BE61               	btfsc	animation6@b+1,7,c
  5104  0058E8  D006               	goto	u5360
  5105  0058EA  5061               	movf	animation6@b+1,w,c
  5106  0058EC  E127               	bnz	l4297
  5107  0058EE  0E08               	movlw	8
  5108  0058F0  5C60               	subwf	animation6@b,w,c
  5109  0058F2  B0D8               	btfsc	status,0,c
  5110  0058F4  D023               	goto	l430
  5111  0058F6                     u5360:
  5112                           
  5113                           ;newmain.c: 936: set_led(Buttons[b][n]);
  5114  0058F6  5058               	movf	animation6@n,w,c
  5115  0058F8  0D01               	mullw	1
  5116  0058FA  C060  F059         	movff	animation6@b,??_animation6
  5117  0058FE  C061  F05A         	movff	animation6@b+1,??_animation6+1
  5118  005902  90D8               	bcf	status,0,c
  5119  005904  3659               	rlcf	??_animation6,f,c
  5120  005906  365A               	rlcf	??_animation6+1,f,c
  5121  005908  90D8               	bcf	status,0,c
  5122  00590A  3659               	rlcf	??_animation6,f,c
  5123  00590C  365A               	rlcf	??_animation6+1,f,c
  5124  00590E  90D8               	bcf	status,0,c
  5125  005910  3659               	rlcf	??_animation6,f,c
  5126  005912  365A               	rlcf	??_animation6+1,f,c
  5127  005914  0EF9               	movlw	low _Buttons
  5128  005916  6E5B               	movwf	(??_animation6+2)& (0+255),c
  5129  005918  0E7E               	movlw	high _Buttons
  5130  00591A  6E5C               	movwf	(??_animation6+3)& (0+255),c
  5131  00591C  5059               	movf	??_animation6,w,c
  5132  00591E  265B               	addwf	??_animation6+2,f,c
  5133  005920  505A               	movf	??_animation6+1,w,c
  5134  005922  225C               	addwfc	??_animation6+3,f,c
  5135  005924  50F3               	movf	prodl,w,c
  5136  005926  265B               	addwf	??_animation6+2,f,c
  5137  005928  50F4               	movf	prodh,w,c
  5138  00592A  225C               	addwfc	??_animation6+3,f,c
  5139  00592C  C05B  FFF6         	movff	??_animation6+2,tblptrl
  5140  005930  C05C  FFF7         	movff	??_animation6+3,tblptrh
  5141  005934                     	if	0	;tblptru may be non-zero
  5142  005934                     	endif
  5143  005934                     	if	0	;tblptru may be non-zero
  5144  005934                     	endif
  5145  005934  0008               	tblrd		*
  5146  005936  50F5               	movf	tablat,w,c
  5147  005938  EC02  F029         	call	_set_led
  5148  00593C                     l430:
  5149  00593C                     l4297:
  5150                           
  5151                           ;newmain.c: 937: if (c >= 0)
  5152  00593C  BE63               	btfsc	animation6@c+1,7,c
  5153  00593E  D016               	goto	l431
  5154                           
  5155                           ;newmain.c: 938: set_led(Buttons[m][c]);
  5156  005940  5066               	movf	animation6@m,w,c
  5157  005942  0D08               	mullw	8
  5158  005944  0EF9               	movlw	low _Buttons
  5159  005946  6E59               	movwf	??_animation6& (0+255),c
  5160  005948  0E7E               	movlw	high _Buttons
  5161  00594A  6E5A               	movwf	(??_animation6+1)& (0+255),c
  5162  00594C  50F3               	movf	prodl,w,c
  5163  00594E  2659               	addwf	??_animation6,f,c
  5164  005950  50F4               	movf	prodh,w,c
  5165  005952  225A               	addwfc	??_animation6+1,f,c
  5166  005954  5062               	movf	animation6@c,w,c
  5167  005956  2659               	addwf	??_animation6,f,c
  5168  005958  5063               	movf	animation6@c+1,w,c
  5169  00595A  225A               	addwfc	??_animation6+1,f,c
  5170  00595C  C059  FFF6         	movff	??_animation6,tblptrl
  5171  005960  C05A  FFF7         	movff	??_animation6+1,tblptrh
  5172  005964                     	if	0	;tblptru may be non-zero
  5173  005964                     	endif
  5174  005964                     	if	0	;tblptru may be non-zero
  5175  005964                     	endif
  5176  005964  0008               	tblrd		*
  5177  005966  50F5               	movf	tablat,w,c
  5178  005968  EC02  F029         	call	_set_led
  5179  00596C                     l431:
  5180                           
  5181                           ;newmain.c: 939: if (d < 8)
  5182  00596C  BE65               	btfsc	animation6@d+1,7,c
  5183  00596E  D006               	goto	u5380
  5184  005970  5065               	movf	animation6@d+1,w,c
  5185  005972  E11A               	bnz	l4305
  5186  005974  0E08               	movlw	8
  5187  005976  5C64               	subwf	animation6@d,w,c
  5188  005978  B0D8               	btfsc	status,0,c
  5189  00597A  D016               	goto	l432
  5190  00597C                     u5380:
  5191                           
  5192                           ;newmain.c: 940: set_led(Buttons[m][d]);
  5193  00597C  5066               	movf	animation6@m,w,c
  5194  00597E  0D08               	mullw	8
  5195  005980  0EF9               	movlw	low _Buttons
  5196  005982  6E59               	movwf	??_animation6& (0+255),c
  5197  005984  0E7E               	movlw	high _Buttons
  5198  005986  6E5A               	movwf	(??_animation6+1)& (0+255),c
  5199  005988  50F3               	movf	prodl,w,c
  5200  00598A  2659               	addwf	??_animation6,f,c
  5201  00598C  50F4               	movf	prodh,w,c
  5202  00598E  225A               	addwfc	??_animation6+1,f,c
  5203  005990  5064               	movf	animation6@d,w,c
  5204  005992  2659               	addwf	??_animation6,f,c
  5205  005994  5065               	movf	animation6@d+1,w,c
  5206  005996  225A               	addwfc	??_animation6+1,f,c
  5207  005998  C059  FFF6         	movff	??_animation6,tblptrl
  5208  00599C  C05A  FFF7         	movff	??_animation6+1,tblptrh
  5209  0059A0                     	if	0	;tblptru may be non-zero
  5210  0059A0                     	endif
  5211  0059A0                     	if	0	;tblptru may be non-zero
  5212  0059A0                     	endif
  5213  0059A0  0008               	tblrd		*
  5214  0059A2  50F5               	movf	tablat,w,c
  5215  0059A4  EC02  F029         	call	_set_led
  5216  0059A8                     l432:
  5217  0059A8                     l4305:
  5218                           
  5219                           ;newmain.c: 942: write_display();
  5220  0059A8  ECB4  F029         	call	_write_display	;wreg free
  5221                           
  5222                           ;newmain.c: 943: _delay((unsigned long)((40)*(4000000/4000.0)));
  5223  0059AC  0E34               	movlw	52
  5224  0059AE  6E59               	movwf	??_animation6& (0+255),c
  5225  0059B0  0EF2               	movlw	242
  5226  0059B2                     u6607:
  5227  0059B2  2EE8               	decfsz	wreg,f,c
  5228  0059B4  D7FE               	bra	u6607
  5229  0059B6  2E59               	decfsz	??_animation6& (0+255),f,c
  5230  0059B8  D7FC               	bra	u6607
  5231                           
  5232                           ;newmain.c: 944: clr_led(Buttons[a][n]);
  5233  0059BA  5058               	movf	animation6@n,w,c
  5234  0059BC  0D01               	mullw	1
  5235  0059BE  C05E  F059         	movff	animation6@a,??_animation6
  5236  0059C2  C05F  F05A         	movff	animation6@a+1,??_animation6+1
  5237  0059C6  90D8               	bcf	status,0,c
  5238  0059C8  3659               	rlcf	??_animation6,f,c
  5239  0059CA  365A               	rlcf	??_animation6+1,f,c
  5240  0059CC  90D8               	bcf	status,0,c
  5241  0059CE  3659               	rlcf	??_animation6,f,c
  5242  0059D0  365A               	rlcf	??_animation6+1,f,c
  5243  0059D2  90D8               	bcf	status,0,c
  5244  0059D4  3659               	rlcf	??_animation6,f,c
  5245  0059D6  365A               	rlcf	??_animation6+1,f,c
  5246  0059D8  0EF9               	movlw	low _Buttons
  5247  0059DA  6E5B               	movwf	(??_animation6+2)& (0+255),c
  5248  0059DC  0E7E               	movlw	high _Buttons
  5249  0059DE  6E5C               	movwf	(??_animation6+3)& (0+255),c
  5250  0059E0  5059               	movf	??_animation6,w,c
  5251  0059E2  265B               	addwf	??_animation6+2,f,c
  5252  0059E4  505A               	movf	??_animation6+1,w,c
  5253  0059E6  225C               	addwfc	??_animation6+3,f,c
  5254  0059E8  50F3               	movf	prodl,w,c
  5255  0059EA  265B               	addwf	??_animation6+2,f,c
  5256  0059EC  50F4               	movf	prodh,w,c
  5257  0059EE  225C               	addwfc	??_animation6+3,f,c
  5258  0059F0  C05B  FFF6         	movff	??_animation6+2,tblptrl
  5259  0059F4  C05C  FFF7         	movff	??_animation6+3,tblptrh
  5260  0059F8                     	if	0	;tblptru may be non-zero
  5261  0059F8                     	endif
  5262  0059F8                     	if	0	;tblptru may be non-zero
  5263  0059F8                     	endif
  5264  0059F8  0008               	tblrd		*
  5265  0059FA  50F5               	movf	tablat,w,c
  5266  0059FC  EC59  F029         	call	_clr_led
  5267                           
  5268                           ;newmain.c: 945: clr_led(Buttons[b][n]);
  5269  005A00  5058               	movf	animation6@n,w,c
  5270  005A02  0D01               	mullw	1
  5271  005A04  C060  F059         	movff	animation6@b,??_animation6
  5272  005A08  C061  F05A         	movff	animation6@b+1,??_animation6+1
  5273  005A0C  90D8               	bcf	status,0,c
  5274  005A0E  3659               	rlcf	??_animation6,f,c
  5275  005A10  365A               	rlcf	??_animation6+1,f,c
  5276  005A12  90D8               	bcf	status,0,c
  5277  005A14  3659               	rlcf	??_animation6,f,c
  5278  005A16  365A               	rlcf	??_animation6+1,f,c
  5279  005A18  90D8               	bcf	status,0,c
  5280  005A1A  3659               	rlcf	??_animation6,f,c
  5281  005A1C  365A               	rlcf	??_animation6+1,f,c
  5282  005A1E  0EF9               	movlw	low _Buttons
  5283  005A20  6E5B               	movwf	(??_animation6+2)& (0+255),c
  5284  005A22  0E7E               	movlw	high _Buttons
  5285  005A24  6E5C               	movwf	(??_animation6+3)& (0+255),c
  5286  005A26  5059               	movf	??_animation6,w,c
  5287  005A28  265B               	addwf	??_animation6+2,f,c
  5288  005A2A  505A               	movf	??_animation6+1,w,c
  5289  005A2C  225C               	addwfc	??_animation6+3,f,c
  5290  005A2E  50F3               	movf	prodl,w,c
  5291  005A30  265B               	addwf	??_animation6+2,f,c
  5292  005A32  50F4               	movf	prodh,w,c
  5293  005A34  225C               	addwfc	??_animation6+3,f,c
  5294  005A36  C05B  FFF6         	movff	??_animation6+2,tblptrl
  5295  005A3A  C05C  FFF7         	movff	??_animation6+3,tblptrh
  5296  005A3E                     	if	0	;tblptru may be non-zero
  5297  005A3E                     	endif
  5298  005A3E                     	if	0	;tblptru may be non-zero
  5299  005A3E                     	endif
  5300  005A3E  0008               	tblrd		*
  5301  005A40  50F5               	movf	tablat,w,c
  5302  005A42  EC59  F029         	call	_clr_led
  5303                           
  5304                           ;newmain.c: 946: clr_led(Buttons[m][c]);
  5305  005A46  5066               	movf	animation6@m,w,c
  5306  005A48  0D08               	mullw	8
  5307  005A4A  0EF9               	movlw	low _Buttons
  5308  005A4C  6E59               	movwf	??_animation6& (0+255),c
  5309  005A4E  0E7E               	movlw	high _Buttons
  5310  005A50  6E5A               	movwf	(??_animation6+1)& (0+255),c
  5311  005A52  50F3               	movf	prodl,w,c
  5312  005A54  2659               	addwf	??_animation6,f,c
  5313  005A56  50F4               	movf	prodh,w,c
  5314  005A58  225A               	addwfc	??_animation6+1,f,c
  5315  005A5A  5062               	movf	animation6@c,w,c
  5316  005A5C  2659               	addwf	??_animation6,f,c
  5317  005A5E  5063               	movf	animation6@c+1,w,c
  5318  005A60  225A               	addwfc	??_animation6+1,f,c
  5319  005A62  C059  FFF6         	movff	??_animation6,tblptrl
  5320  005A66  C05A  FFF7         	movff	??_animation6+1,tblptrh
  5321  005A6A                     	if	0	;tblptru may be non-zero
  5322  005A6A                     	endif
  5323  005A6A                     	if	0	;tblptru may be non-zero
  5324  005A6A                     	endif
  5325  005A6A  0008               	tblrd		*
  5326  005A6C  50F5               	movf	tablat,w,c
  5327  005A6E  EC59  F029         	call	_clr_led
  5328                           
  5329                           ;newmain.c: 947: clr_led(Buttons[m][d]);
  5330  005A72  5066               	movf	animation6@m,w,c
  5331  005A74  0D08               	mullw	8
  5332  005A76  0EF9               	movlw	low _Buttons
  5333  005A78  6E59               	movwf	??_animation6& (0+255),c
  5334  005A7A  0E7E               	movlw	high _Buttons
  5335  005A7C  6E5A               	movwf	(??_animation6+1)& (0+255),c
  5336  005A7E  50F3               	movf	prodl,w,c
  5337  005A80  2659               	addwf	??_animation6,f,c
  5338  005A82  50F4               	movf	prodh,w,c
  5339  005A84  225A               	addwfc	??_animation6+1,f,c
  5340  005A86  5064               	movf	animation6@d,w,c
  5341  005A88  2659               	addwf	??_animation6,f,c
  5342  005A8A  5065               	movf	animation6@d+1,w,c
  5343  005A8C  225A               	addwfc	??_animation6+1,f,c
  5344  005A8E  C059  FFF6         	movff	??_animation6,tblptrl
  5345  005A92  C05A  FFF7         	movff	??_animation6+1,tblptrh
  5346  005A96                     	if	0	;tblptru may be non-zero
  5347  005A96                     	endif
  5348  005A96                     	if	0	;tblptru may be non-zero
  5349  005A96                     	endif
  5350  005A96  0008               	tblrd		*
  5351  005A98  50F5               	movf	tablat,w,c
  5352  005A9A  EC59  F029         	call	_clr_led
  5353                           
  5354                           ;newmain.c: 948: write_display();
  5355  005A9E  ECB4  F029         	call	_write_display	;wreg free
  5356                           
  5357                           ;newmain.c: 949: a--;
  5358  005AA2  065E               	decf	animation6@a,f,c
  5359  005AA4  A0D8               	btfss	status,0,c
  5360  005AA6  065F               	decf	animation6@a+1,f,c
  5361                           
  5362                           ;newmain.c: 950: b++;
  5363  005AA8  4A60               	infsnz	animation6@b,f,c
  5364  005AAA  2A61               	incf	animation6@b+1,f,c
  5365                           
  5366                           ;newmain.c: 951: c--;
  5367  005AAC  0662               	decf	animation6@c,f,c
  5368  005AAE  A0D8               	btfss	status,0,c
  5369  005AB0  0663               	decf	animation6@c+1,f,c
  5370                           
  5371                           ;newmain.c: 952: d++;
  5372  005AB2  4A64               	infsnz	animation6@d,f,c
  5373  005AB4  2A65               	incf	animation6@d+1,f,c
  5374  005AB6  2A5D               	incf	animation6@x,f,c
  5375  005AB8  D6ED               	goto	l4285
  5376  005ABA                     __end_of_animation6:
  5377                           	opt stack 0
  5378                           tblptru	equ	0xFF8
  5379                           tblptrh	equ	0xFF7
  5380                           tblptrl	equ	0xFF6
  5381                           tablat	equ	0xFF5
  5382                           prodh	equ	0xFF4
  5383                           prodl	equ	0xFF3
  5384                           postinc0	equ	0xFEE
  5385                           wreg	equ	0xFE8
  5386                           postinc1	equ	0xFE6
  5387                           fsr1h	equ	0xFE2
  5388                           fsr1l	equ	0xFE1
  5389                           indf2	equ	0xFDF
  5390                           postinc2	equ	0xFDE
  5391                           fsr2h	equ	0xFDA
  5392                           fsr2l	equ	0xFD9
  5393                           status	equ	0xFD8
  5394                           
  5395 ;; *************** function _animation5 *****************
  5396 ;; Defined at:
  5397 ;;		line 849 in file "newmain.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;  m               1    wreg     unsigned char 
  5400 ;;  n               1   21[COMRAM] unsigned char 
  5401 ;;  h               1   22[COMRAM] unsigned char 
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;  m               1   25[COMRAM] unsigned char 
  5404 ;;  x               1   28[COMRAM] unsigned char 
  5405 ;;  i               1   27[COMRAM] unsigned char 
  5406 ;;  j               1   26[COMRAM] unsigned char 
  5407 ;; Return value:  Size  Location     Type
  5408 ;;                  1    wreg      void 
  5409 ;; Registers used:
  5410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5411 ;; Tracked objects:
  5412 ;;		On entry : 0/0
  5413 ;;		On exit  : 0/0
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5416 ;;      Params:         2       0       0       0       0       0       0
  5417 ;;      Locals:         4       0       0       0       0       0       0
  5418 ;;      Temps:          2       0       0       0       0       0       0
  5419 ;;      Totals:         8       0       0       0       0       0       0
  5420 ;;Total ram usage:        8 bytes
  5421 ;; Hardware stack levels used:    1
  5422 ;; Hardware stack levels required when called:    4
  5423 ;; This function calls:
  5424 ;;		_clr_led
  5425 ;;		_set_led
  5426 ;;		_write_display
  5427 ;; This function is called by:
  5428 ;;		_main
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           	psect	text10
  5433  005DAE                     __ptext10:
  5434                           	opt stack 0
  5435  005DAE                     _animation5:
  5436                           	opt stack 26
  5437                           
  5438                           ;incstack = 0
  5439                           ;animation5@m stored from wreg
  5440  005DAE  6E5C               	movwf	animation5@m,c
  5441                           
  5442                           ;newmain.c: 850: uint8_t i = 0, j = 0, x = 0;
  5443  005DB0  0E00               	movlw	0
  5444  005DB2  6E5E               	movwf	animation5@i,c
  5445  005DB4  0E00               	movlw	0
  5446  005DB6  6E5D               	movwf	animation5@j,c
  5447  005DB8  0E00               	movlw	0
  5448  005DBA  6E5F               	movwf	animation5@x,c
  5449                           
  5450                           ;newmain.c: 852: if (m == 0) {
  5451  005DBC  505C               	movf	animation5@m,w,c
  5452  005DBE  A4D8               	btfss	status,2,c
  5453  005DC0  D05C               	goto	l389
  5454                           
  5455                           ;newmain.c: 853: for (i = 0; i < 16; i++) {
  5456  005DC2  0E00               	movlw	0
  5457  005DC4  6E5E               	movwf	animation5@i,c
  5458  005DC6                     l4123:
  5459  005DC6  0E0F               	movlw	15
  5460  005DC8  645E               	cpfsgt	animation5@i,c
  5461  005DCA  D001               	goto	l390
  5462  005DCC  0012               	return	
  5463  005DCE                     l390:
  5464                           
  5465                           ;newmain.c: 854: if (show5[i][0] == n) {
  5466  005DCE  505E               	movf	animation5@i,w,c
  5467  005DD0  0D04               	mullw	4
  5468  005DD2  0E39               	movlw	low _show5
  5469  005DD4  24F3               	addwf	prodl,w,c
  5470  005DD6  6EF6               	movwf	tblptrl,c
  5471  005DD8  0E7E               	movlw	high _show5
  5472  005DDA  20F4               	addwfc	prodh,w,c
  5473  005DDC  6EF7               	movwf	tblptrh,c
  5474  005DDE                     	if	0	;There are less than 3 active tblptr bytes
  5475  005DDE                     	endif
  5476  005DDE  0008               	tblrd		*
  5477  005DE0  50F5               	movf	tablat,w,c
  5478  005DE2  1858               	xorwf	animation5@n,w,c
  5479  005DE4  A4D8               	btfss	status,2,c
  5480  005DE6  D047               	goto	l392
  5481                           
  5482                           ;newmain.c: 855: for (j = 0; j < 4; j++) {
  5483  005DE8  0E00               	movlw	0
  5484  005DEA  6E5D               	movwf	animation5@j,c
  5485  005DEC                     l4131:
  5486  005DEC  0E03               	movlw	3
  5487  005DEE  645D               	cpfsgt	animation5@j,c
  5488  005DF0  D001               	goto	l393
  5489  005DF2  D03E               	goto	u5110
  5490  005DF4                     l393:
  5491                           
  5492                           ;newmain.c: 856: x = show5[i][j];
  5493  005DF4  505E               	movf	animation5@i,w,c
  5494  005DF6  0D04               	mullw	4
  5495  005DF8  0E39               	movlw	low _show5
  5496  005DFA  6E5A               	movwf	??_animation5& (0+255),c
  5497  005DFC  0E7E               	movlw	high _show5
  5498  005DFE  6E5B               	movwf	(??_animation5+1)& (0+255),c
  5499  005E00  50F3               	movf	prodl,w,c
  5500  005E02  265A               	addwf	??_animation5,f,c
  5501  005E04  50F4               	movf	prodh,w,c
  5502  005E06  225B               	addwfc	??_animation5+1,f,c
  5503  005E08  505D               	movf	animation5@j,w,c
  5504  005E0A  0D01               	mullw	1
  5505  005E0C  50F3               	movf	prodl,w,c
  5506  005E0E  265A               	addwf	??_animation5,f,c
  5507  005E10  50F4               	movf	prodh,w,c
  5508  005E12  225B               	addwfc	??_animation5+1,f,c
  5509  005E14  C05A  FFF6         	movff	??_animation5,tblptrl
  5510  005E18  C05B  FFF7         	movff	??_animation5+1,tblptrh
  5511  005E1C                     	if	0	;tblptru may be non-zero
  5512  005E1C                     	endif
  5513  005E1C                     	if	0	;tblptru may be non-zero
  5514  005E1C                     	endif
  5515  005E1C  0008               	tblrd		*
  5516  005E1E  CFF5 F05F          	movff	tablat,animation5@x
  5517                           
  5518                           ;newmain.c: 857: if (temp[x] == 0) {
  5519  005E22  505F               	movf	animation5@x,w,c
  5520  005E24  0D01               	mullw	1
  5521  005E26  0E01               	movlw	low _temp
  5522  005E28  24F3               	addwf	prodl,w,c
  5523  005E2A  6ED9               	movwf	fsr2l,c
  5524  005E2C  0E00               	movlw	high _temp
  5525  005E2E  20F4               	addwfc	prodh,w,c
  5526  005E30  6EDA               	movwf	fsr2h,c
  5527  005E32  50DF               	movf	indf2,w,c
  5528  005E34  A4D8               	btfss	status,2,c
  5529  005E36  D00D               	goto	l395
  5530                           
  5531                           ;newmain.c: 858: set_led(x);
  5532  005E38  505F               	movf	animation5@x,w,c
  5533  005E3A  EC02  F029         	call	_set_led
  5534                           
  5535                           ;newmain.c: 859: temp[x] = 1;
  5536  005E3E  505F               	movf	animation5@x,w,c
  5537  005E40  0D01               	mullw	1
  5538  005E42  0E01               	movlw	low _temp
  5539  005E44  24F3               	addwf	prodl,w,c
  5540  005E46  6ED9               	movwf	fsr2l,c
  5541  005E48  0E00               	movlw	high _temp
  5542  005E4A  20F4               	addwfc	prodh,w,c
  5543  005E4C  6EDA               	movwf	fsr2h,c
  5544  005E4E  0E01               	movlw	1
  5545  005E50  D00C               	goto	L5
  5546  005E52                     l395:
  5547                           
  5548                           ;newmain.c: 861: clr_led(x);
  5549  005E52  505F               	movf	animation5@x,w,c
  5550  005E54  EC59  F029         	call	_clr_led
  5551                           
  5552                           ;newmain.c: 862: temp[x] = 0;
  5553  005E58  505F               	movf	animation5@x,w,c
  5554  005E5A  0D01               	mullw	1
  5555  005E5C  0E01               	movlw	low _temp
  5556  005E5E  24F3               	addwf	prodl,w,c
  5557  005E60  6ED9               	movwf	fsr2l,c
  5558  005E62  0E00               	movlw	high _temp
  5559  005E64  20F4               	addwfc	prodh,w,c
  5560  005E66  6EDA               	movwf	fsr2h,c
  5561  005E68  0E00               	movlw	0
  5562  005E6A                     L5:
  5563  005E6A  6EDF               	movwf	indf2,c
  5564  005E6C  2A5D               	incf	animation5@j,f,c
  5565  005E6E  D7BE               	goto	l4131
  5566  005E70                     u5110:
  5567                           
  5568                           ;newmain.c: 863: }
  5569                           ;newmain.c: 864: }
  5570                           ;newmain.c: 865: write_display();
  5571  005E70  ECB4  F029         	call	_write_display	;wreg free
  5572                           
  5573                           ;newmain.c: 866: break;
  5574  005E74  0012               	return	
  5575  005E76                     l392:
  5576  005E76  2A5E               	incf	animation5@i,f,c
  5577  005E78  D7A6               	goto	l4123
  5578  005E7A                     l389:
  5579  005E7A  045C               	decf	animation5@m,w,c
  5580  005E7C  A4D8               	btfss	status,2,c
  5581  005E7E  D05D               	goto	l398
  5582                           
  5583                           ;newmain.c: 870: for (i = 0; i < 16; i++) {
  5584  005E80  0E00               	movlw	0
  5585  005E82  6E5E               	movwf	animation5@i,c
  5586  005E84                     l4161:
  5587  005E84  0E0F               	movlw	15
  5588  005E86  645E               	cpfsgt	animation5@i,c
  5589  005E88  D001               	goto	l399
  5590  005E8A  0012               	return	
  5591  005E8C                     l399:
  5592                           
  5593                           ;newmain.c: 871: if (show5[i][0] == n) {
  5594  005E8C  505E               	movf	animation5@i,w,c
  5595  005E8E  0D04               	mullw	4
  5596  005E90  0E39               	movlw	low _show5
  5597  005E92  24F3               	addwf	prodl,w,c
  5598  005E94  6EF6               	movwf	tblptrl,c
  5599  005E96  0E7E               	movlw	high _show5
  5600  005E98  20F4               	addwfc	prodh,w,c
  5601  005E9A  6EF7               	movwf	tblptrh,c
  5602  005E9C                     	if	0	;There are less than 3 active tblptr bytes
  5603  005E9C                     	endif
  5604  005E9C  0008               	tblrd		*
  5605  005E9E  50F5               	movf	tablat,w,c
  5606  005EA0  1858               	xorwf	animation5@n,w,c
  5607  005EA2  A4D8               	btfss	status,2,c
  5608  005EA4  D048               	goto	l401
  5609                           
  5610                           ;newmain.c: 872: for (j = 0; j < 4; j++) {
  5611  005EA6  0E00               	movlw	0
  5612  005EA8  6E5D               	movwf	animation5@j,c
  5613  005EAA                     l4169:
  5614  005EAA  0E03               	movlw	3
  5615  005EAC  645D               	cpfsgt	animation5@j,c
  5616  005EAE  D001               	goto	l402
  5617  005EB0  D03F               	goto	u5180
  5618  005EB2                     l402:
  5619                           
  5620                           ;newmain.c: 873: x = show5[i][j] + 16;
  5621  005EB2  505E               	movf	animation5@i,w,c
  5622  005EB4  0D04               	mullw	4
  5623  005EB6  0E39               	movlw	low _show5
  5624  005EB8  6E5A               	movwf	??_animation5& (0+255),c
  5625  005EBA  0E7E               	movlw	high _show5
  5626  005EBC  6E5B               	movwf	(??_animation5+1)& (0+255),c
  5627  005EBE  50F3               	movf	prodl,w,c
  5628  005EC0  265A               	addwf	??_animation5,f,c
  5629  005EC2  50F4               	movf	prodh,w,c
  5630  005EC4  225B               	addwfc	??_animation5+1,f,c
  5631  005EC6  505D               	movf	animation5@j,w,c
  5632  005EC8  0D01               	mullw	1
  5633  005ECA  50F3               	movf	prodl,w,c
  5634  005ECC  265A               	addwf	??_animation5,f,c
  5635  005ECE  50F4               	movf	prodh,w,c
  5636  005ED0  225B               	addwfc	??_animation5+1,f,c
  5637  005ED2  C05A  FFF6         	movff	??_animation5,tblptrl
  5638  005ED6  C05B  FFF7         	movff	??_animation5+1,tblptrh
  5639  005EDA                     	if	0	;tblptru may be non-zero
  5640  005EDA                     	endif
  5641  005EDA                     	if	0	;tblptru may be non-zero
  5642  005EDA                     	endif
  5643  005EDA  0008               	tblrd		*
  5644  005EDC  50F5               	movf	tablat,w,c
  5645  005EDE  0F10               	addlw	16
  5646  005EE0  6E5F               	movwf	animation5@x,c
  5647                           
  5648                           ;newmain.c: 874: if (temp[x] == 0) {
  5649  005EE2  505F               	movf	animation5@x,w,c
  5650  005EE4  0D01               	mullw	1
  5651  005EE6  0E01               	movlw	low _temp
  5652  005EE8  24F3               	addwf	prodl,w,c
  5653  005EEA  6ED9               	movwf	fsr2l,c
  5654  005EEC  0E00               	movlw	high _temp
  5655  005EEE  20F4               	addwfc	prodh,w,c
  5656  005EF0  6EDA               	movwf	fsr2h,c
  5657  005EF2  50DF               	movf	indf2,w,c
  5658  005EF4  A4D8               	btfss	status,2,c
  5659  005EF6  D00D               	goto	l404
  5660                           
  5661                           ;newmain.c: 875: set_led(x);
  5662  005EF8  505F               	movf	animation5@x,w,c
  5663  005EFA  EC02  F029         	call	_set_led
  5664                           
  5665                           ;newmain.c: 876: temp[x] = 1;
  5666  005EFE  505F               	movf	animation5@x,w,c
  5667  005F00  0D01               	mullw	1
  5668  005F02  0E01               	movlw	low _temp
  5669  005F04  24F3               	addwf	prodl,w,c
  5670  005F06  6ED9               	movwf	fsr2l,c
  5671  005F08  0E00               	movlw	high _temp
  5672  005F0A  20F4               	addwfc	prodh,w,c
  5673  005F0C  6EDA               	movwf	fsr2h,c
  5674  005F0E  0E01               	movlw	1
  5675  005F10  D00C               	goto	L6
  5676  005F12                     l404:
  5677                           
  5678                           ;newmain.c: 878: clr_led(x);
  5679  005F12  505F               	movf	animation5@x,w,c
  5680  005F14  EC59  F029         	call	_clr_led
  5681                           
  5682                           ;newmain.c: 879: temp[x] = 0;
  5683  005F18  505F               	movf	animation5@x,w,c
  5684  005F1A  0D01               	mullw	1
  5685  005F1C  0E01               	movlw	low _temp
  5686  005F1E  24F3               	addwf	prodl,w,c
  5687  005F20  6ED9               	movwf	fsr2l,c
  5688  005F22  0E00               	movlw	high _temp
  5689  005F24  20F4               	addwfc	prodh,w,c
  5690  005F26  6EDA               	movwf	fsr2h,c
  5691  005F28  0E00               	movlw	0
  5692  005F2A                     L6:
  5693  005F2A  6EDF               	movwf	indf2,c
  5694  005F2C  2A5D               	incf	animation5@j,f,c
  5695  005F2E  D7BD               	goto	l4169
  5696  005F30                     u5180:
  5697                           
  5698                           ;newmain.c: 880: }
  5699                           ;newmain.c: 881: }
  5700                           ;newmain.c: 882: write_display();
  5701  005F30  ECB4  F029         	call	_write_display	;wreg free
  5702                           
  5703                           ;newmain.c: 883: break;
  5704  005F34  0012               	return	
  5705  005F36                     l401:
  5706  005F36  2A5E               	incf	animation5@i,f,c
  5707  005F38  D7A5               	goto	l4161
  5708  005F3A                     l398:
  5709  005F3A  0E02               	movlw	2
  5710  005F3C  185C               	xorwf	animation5@m,w,c
  5711  005F3E  A4D8               	btfss	status,2,c
  5712  005F40  D05D               	goto	l407
  5713                           
  5714                           ;newmain.c: 887: for (i = 0; i < 16; i++) {
  5715  005F42  0E00               	movlw	0
  5716  005F44  6E5E               	movwf	animation5@i,c
  5717  005F46                     l4199:
  5718  005F46  0E0F               	movlw	15
  5719  005F48  645E               	cpfsgt	animation5@i,c
  5720  005F4A  D001               	goto	l408
  5721  005F4C  0012               	return	
  5722  005F4E                     l408:
  5723                           
  5724                           ;newmain.c: 888: if (show5[i][0] == n) {
  5725  005F4E  505E               	movf	animation5@i,w,c
  5726  005F50  0D04               	mullw	4
  5727  005F52  0E39               	movlw	low _show5
  5728  005F54  24F3               	addwf	prodl,w,c
  5729  005F56  6EF6               	movwf	tblptrl,c
  5730  005F58  0E7E               	movlw	high _show5
  5731  005F5A  20F4               	addwfc	prodh,w,c
  5732  005F5C  6EF7               	movwf	tblptrh,c
  5733  005F5E                     	if	0	;There are less than 3 active tblptr bytes
  5734  005F5E                     	endif
  5735  005F5E  0008               	tblrd		*
  5736  005F60  50F5               	movf	tablat,w,c
  5737  005F62  1858               	xorwf	animation5@n,w,c
  5738  005F64  A4D8               	btfss	status,2,c
  5739  005F66  D048               	goto	l410
  5740                           
  5741                           ;newmain.c: 889: for (j = 0; j < 4; j++) {
  5742  005F68  0E00               	movlw	0
  5743  005F6A  6E5D               	movwf	animation5@j,c
  5744  005F6C                     l4207:
  5745  005F6C  0E03               	movlw	3
  5746  005F6E  645D               	cpfsgt	animation5@j,c
  5747  005F70  D001               	goto	l411
  5748  005F72  D03F               	goto	u5250
  5749  005F74                     l411:
  5750                           
  5751                           ;newmain.c: 890: x = show5[i][j] + 32;
  5752  005F74  505E               	movf	animation5@i,w,c
  5753  005F76  0D04               	mullw	4
  5754  005F78  0E39               	movlw	low _show5
  5755  005F7A  6E5A               	movwf	??_animation5& (0+255),c
  5756  005F7C  0E7E               	movlw	high _show5
  5757  005F7E  6E5B               	movwf	(??_animation5+1)& (0+255),c
  5758  005F80  50F3               	movf	prodl,w,c
  5759  005F82  265A               	addwf	??_animation5,f,c
  5760  005F84  50F4               	movf	prodh,w,c
  5761  005F86  225B               	addwfc	??_animation5+1,f,c
  5762  005F88  505D               	movf	animation5@j,w,c
  5763  005F8A  0D01               	mullw	1
  5764  005F8C  50F3               	movf	prodl,w,c
  5765  005F8E  265A               	addwf	??_animation5,f,c
  5766  005F90  50F4               	movf	prodh,w,c
  5767  005F92  225B               	addwfc	??_animation5+1,f,c
  5768  005F94  C05A  FFF6         	movff	??_animation5,tblptrl
  5769  005F98  C05B  FFF7         	movff	??_animation5+1,tblptrh
  5770  005F9C                     	if	0	;tblptru may be non-zero
  5771  005F9C                     	endif
  5772  005F9C                     	if	0	;tblptru may be non-zero
  5773  005F9C                     	endif
  5774  005F9C  0008               	tblrd		*
  5775  005F9E  50F5               	movf	tablat,w,c
  5776  005FA0  0F20               	addlw	32
  5777  005FA2  6E5F               	movwf	animation5@x,c
  5778                           
  5779                           ;newmain.c: 891: if (temp[x] == 0) {
  5780  005FA4  505F               	movf	animation5@x,w,c
  5781  005FA6  0D01               	mullw	1
  5782  005FA8  0E01               	movlw	low _temp
  5783  005FAA  24F3               	addwf	prodl,w,c
  5784  005FAC  6ED9               	movwf	fsr2l,c
  5785  005FAE  0E00               	movlw	high _temp
  5786  005FB0  20F4               	addwfc	prodh,w,c
  5787  005FB2  6EDA               	movwf	fsr2h,c
  5788  005FB4  50DF               	movf	indf2,w,c
  5789  005FB6  A4D8               	btfss	status,2,c
  5790  005FB8  D00D               	goto	l413
  5791                           
  5792                           ;newmain.c: 892: set_led(x);
  5793  005FBA  505F               	movf	animation5@x,w,c
  5794  005FBC  EC02  F029         	call	_set_led
  5795                           
  5796                           ;newmain.c: 893: temp[x] = 1;
  5797  005FC0  505F               	movf	animation5@x,w,c
  5798  005FC2  0D01               	mullw	1
  5799  005FC4  0E01               	movlw	low _temp
  5800  005FC6  24F3               	addwf	prodl,w,c
  5801  005FC8  6ED9               	movwf	fsr2l,c
  5802  005FCA  0E00               	movlw	high _temp
  5803  005FCC  20F4               	addwfc	prodh,w,c
  5804  005FCE  6EDA               	movwf	fsr2h,c
  5805  005FD0  0E01               	movlw	1
  5806  005FD2  D00C               	goto	L7
  5807  005FD4                     l413:
  5808                           
  5809                           ;newmain.c: 895: clr_led(x);
  5810  005FD4  505F               	movf	animation5@x,w,c
  5811  005FD6  EC59  F029         	call	_clr_led
  5812                           
  5813                           ;newmain.c: 896: temp[x] = 0;
  5814  005FDA  505F               	movf	animation5@x,w,c
  5815  005FDC  0D01               	mullw	1
  5816  005FDE  0E01               	movlw	low _temp
  5817  005FE0  24F3               	addwf	prodl,w,c
  5818  005FE2  6ED9               	movwf	fsr2l,c
  5819  005FE4  0E00               	movlw	high _temp
  5820  005FE6  20F4               	addwfc	prodh,w,c
  5821  005FE8  6EDA               	movwf	fsr2h,c
  5822  005FEA  0E00               	movlw	0
  5823  005FEC                     L7:
  5824  005FEC  6EDF               	movwf	indf2,c
  5825  005FEE  2A5D               	incf	animation5@j,f,c
  5826  005FF0  D7BD               	goto	l4207
  5827  005FF2                     u5250:
  5828                           
  5829                           ;newmain.c: 897: }
  5830                           ;newmain.c: 898: }
  5831                           ;newmain.c: 899: write_display();
  5832  005FF2  ECB4  F029         	call	_write_display	;wreg free
  5833                           
  5834                           ;newmain.c: 900: break;
  5835  005FF6  0012               	return	
  5836  005FF8                     l410:
  5837  005FF8  2A5E               	incf	animation5@i,f,c
  5838  005FFA  D7A5               	goto	l4199
  5839  005FFC                     l407:
  5840  005FFC  0E03               	movlw	3
  5841  005FFE  185C               	xorwf	animation5@m,w,c
  5842  006000  A4D8               	btfss	status,2,c
  5843  006002  0012               	return	
  5844                           
  5845                           ;newmain.c: 904: for (i = 0; i < 16; i++) {
  5846  006004  0E00               	movlw	0
  5847  006006  6E5E               	movwf	animation5@i,c
  5848  006008                     l4237:
  5849  006008  0E0F               	movlw	15
  5850  00600A  645E               	cpfsgt	animation5@i,c
  5851  00600C  D001               	goto	l417
  5852  00600E  0012               	return	
  5853  006010                     l417:
  5854                           
  5855                           ;newmain.c: 905: if (show5[i][0] == n) {
  5856  006010  505E               	movf	animation5@i,w,c
  5857  006012  0D04               	mullw	4
  5858  006014  0E39               	movlw	low _show5
  5859  006016  24F3               	addwf	prodl,w,c
  5860  006018  6EF6               	movwf	tblptrl,c
  5861  00601A  0E7E               	movlw	high _show5
  5862  00601C  20F4               	addwfc	prodh,w,c
  5863  00601E  6EF7               	movwf	tblptrh,c
  5864  006020                     	if	0	;There are less than 3 active tblptr bytes
  5865  006020                     	endif
  5866  006020  0008               	tblrd		*
  5867  006022  50F5               	movf	tablat,w,c
  5868  006024  1858               	xorwf	animation5@n,w,c
  5869  006026  A4D8               	btfss	status,2,c
  5870  006028  D048               	goto	l419
  5871                           
  5872                           ;newmain.c: 906: for (j = 0; j < 4; j++) {
  5873  00602A  0E00               	movlw	0
  5874  00602C  6E5D               	movwf	animation5@j,c
  5875  00602E                     l4245:
  5876  00602E  0E03               	movlw	3
  5877  006030  645D               	cpfsgt	animation5@j,c
  5878  006032  D001               	goto	l420
  5879  006034  D03F               	goto	u5320
  5880  006036                     l420:
  5881                           
  5882                           ;newmain.c: 907: x = show5[i][j] + 48;
  5883  006036  505E               	movf	animation5@i,w,c
  5884  006038  0D04               	mullw	4
  5885  00603A  0E39               	movlw	low _show5
  5886  00603C  6E5A               	movwf	??_animation5& (0+255),c
  5887  00603E  0E7E               	movlw	high _show5
  5888  006040  6E5B               	movwf	(??_animation5+1)& (0+255),c
  5889  006042  50F3               	movf	prodl,w,c
  5890  006044  265A               	addwf	??_animation5,f,c
  5891  006046  50F4               	movf	prodh,w,c
  5892  006048  225B               	addwfc	??_animation5+1,f,c
  5893  00604A  505D               	movf	animation5@j,w,c
  5894  00604C  0D01               	mullw	1
  5895  00604E  50F3               	movf	prodl,w,c
  5896  006050  265A               	addwf	??_animation5,f,c
  5897  006052  50F4               	movf	prodh,w,c
  5898  006054  225B               	addwfc	??_animation5+1,f,c
  5899  006056  C05A  FFF6         	movff	??_animation5,tblptrl
  5900  00605A  C05B  FFF7         	movff	??_animation5+1,tblptrh
  5901  00605E                     	if	0	;tblptru may be non-zero
  5902  00605E                     	endif
  5903  00605E                     	if	0	;tblptru may be non-zero
  5904  00605E                     	endif
  5905  00605E  0008               	tblrd		*
  5906  006060  50F5               	movf	tablat,w,c
  5907  006062  0F30               	addlw	48
  5908  006064  6E5F               	movwf	animation5@x,c
  5909                           
  5910                           ;newmain.c: 908: if (temp[x] == 0) {
  5911  006066  505F               	movf	animation5@x,w,c
  5912  006068  0D01               	mullw	1
  5913  00606A  0E01               	movlw	low _temp
  5914  00606C  24F3               	addwf	prodl,w,c
  5915  00606E  6ED9               	movwf	fsr2l,c
  5916  006070  0E00               	movlw	high _temp
  5917  006072  20F4               	addwfc	prodh,w,c
  5918  006074  6EDA               	movwf	fsr2h,c
  5919  006076  50DF               	movf	indf2,w,c
  5920  006078  A4D8               	btfss	status,2,c
  5921  00607A  D00D               	goto	l422
  5922                           
  5923                           ;newmain.c: 909: set_led(x);
  5924  00607C  505F               	movf	animation5@x,w,c
  5925  00607E  EC02  F029         	call	_set_led
  5926                           
  5927                           ;newmain.c: 910: temp[x] = 1;
  5928  006082  505F               	movf	animation5@x,w,c
  5929  006084  0D01               	mullw	1
  5930  006086  0E01               	movlw	low _temp
  5931  006088  24F3               	addwf	prodl,w,c
  5932  00608A  6ED9               	movwf	fsr2l,c
  5933  00608C  0E00               	movlw	high _temp
  5934  00608E  20F4               	addwfc	prodh,w,c
  5935  006090  6EDA               	movwf	fsr2h,c
  5936  006092  0E01               	movlw	1
  5937  006094  D00C               	goto	L8
  5938  006096                     l422:
  5939                           
  5940                           ;newmain.c: 912: clr_led(x);
  5941  006096  505F               	movf	animation5@x,w,c
  5942  006098  EC59  F029         	call	_clr_led
  5943                           
  5944                           ;newmain.c: 913: temp[x] = 0;
  5945  00609C  505F               	movf	animation5@x,w,c
  5946  00609E  0D01               	mullw	1
  5947  0060A0  0E01               	movlw	low _temp
  5948  0060A2  24F3               	addwf	prodl,w,c
  5949  0060A4  6ED9               	movwf	fsr2l,c
  5950  0060A6  0E00               	movlw	high _temp
  5951  0060A8  20F4               	addwfc	prodh,w,c
  5952  0060AA  6EDA               	movwf	fsr2h,c
  5953  0060AC  0E00               	movlw	0
  5954  0060AE                     L8:
  5955  0060AE  6EDF               	movwf	indf2,c
  5956  0060B0  2A5D               	incf	animation5@j,f,c
  5957  0060B2  D7BD               	goto	l4245
  5958  0060B4                     u5320:
  5959                           
  5960                           ;newmain.c: 914: }
  5961                           ;newmain.c: 915: }
  5962                           ;newmain.c: 916: write_display();
  5963  0060B4  ECB4  F029         	call	_write_display	;wreg free
  5964                           
  5965                           ;newmain.c: 917: break;
  5966  0060B8  0012               	return	
  5967  0060BA                     l419:
  5968  0060BA  2A5E               	incf	animation5@i,f,c
  5969  0060BC  D7A5               	goto	l4237
  5970  0060BE                     __end_of_animation5:
  5971                           	opt stack 0
  5972                           tblptru	equ	0xFF8
  5973                           tblptrh	equ	0xFF7
  5974                           tblptrl	equ	0xFF6
  5975                           tablat	equ	0xFF5
  5976                           prodh	equ	0xFF4
  5977                           prodl	equ	0xFF3
  5978                           postinc0	equ	0xFEE
  5979                           wreg	equ	0xFE8
  5980                           postinc1	equ	0xFE6
  5981                           fsr1h	equ	0xFE2
  5982                           fsr1l	equ	0xFE1
  5983                           indf2	equ	0xFDF
  5984                           postinc2	equ	0xFDE
  5985                           fsr2h	equ	0xFDA
  5986                           fsr2l	equ	0xFD9
  5987                           status	equ	0xFD8
  5988                           
  5989 ;; *************** function _animation4 *****************
  5990 ;; Defined at:
  5991 ;;		line 785 in file "newmain.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;  m               1    wreg     unsigned char 
  5994 ;;  h               1   21[COMRAM] unsigned char 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;  m               1   24[COMRAM] unsigned char 
  5997 ;;  j               1   26[COMRAM] unsigned char 
  5998 ;;  i               1   25[COMRAM] unsigned char 
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  1    wreg      void 
  6001 ;; Registers used:
  6002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6008 ;;      Params:         1       0       0       0       0       0       0
  6009 ;;      Locals:         3       0       0       0       0       0       0
  6010 ;;      Temps:          2       0       0       0       0       0       0
  6011 ;;      Totals:         6       0       0       0       0       0       0
  6012 ;;Total ram usage:        6 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; Hardware stack levels required when called:    4
  6015 ;; This function calls:
  6016 ;;		_clr_led
  6017 ;;		_set_led
  6018 ;;		_write_display
  6019 ;; This function is called by:
  6020 ;;		_main
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024                           	psect	text11
  6025  00644A                     __ptext11:
  6026                           	opt stack 0
  6027  00644A                     _animation4:
  6028                           	opt stack 26
  6029                           
  6030                           ;incstack = 0
  6031                           ;animation4@m stored from wreg
  6032  00644A  6E5B               	movwf	animation4@m,c
  6033                           
  6034                           ;newmain.c: 786: uint8_t i = 0, j = 0;
  6035  00644C  0E00               	movlw	0
  6036  00644E  6E5C               	movwf	animation4@i,c
  6037  006450  0E00               	movlw	0
  6038  006452  6E5D               	movwf	animation4@j,c
  6039                           
  6040                           ;newmain.c: 787: set_led(h);
  6041  006454  5058               	movf	animation4@h,w,c
  6042  006456  EC02  F029         	call	_set_led
  6043                           
  6044                           ;newmain.c: 788: write_display();
  6045  00645A  ECB4  F029         	call	_write_display	;wreg free
  6046                           
  6047                           ;newmain.c: 789: if (m == 0) {
  6048  00645E  505B               	movf	animation4@m,w,c
  6049  006460  A4D8               	btfss	status,2,c
  6050  006462  D085               	goto	l345
  6051                           
  6052                           ;newmain.c: 790: for (i = 0; i < 8; i++) {
  6053  006464  0E00               	movlw	0
  6054  006466  6E5C               	movwf	animation4@i,c
  6055  006468                     l3933:
  6056  006468  0E07               	movlw	7
  6057  00646A  645C               	cpfsgt	animation4@i,c
  6058  00646C  D001               	goto	l346
  6059  00646E  D21B               	goto	u5050
  6060  006470                     l346:
  6061                           
  6062                           ;newmain.c: 791: for (j = 0; j < 8; j++)
  6063  006470  0E00               	movlw	0
  6064  006472  6E5D               	movwf	animation4@j,c
  6065  006474                     l3939:
  6066  006474  0E07               	movlw	7
  6067  006476  645D               	cpfsgt	animation4@j,c
  6068  006478  D001               	goto	l348
  6069  00647A  D033               	goto	u4740
  6070  00647C                     l348:
  6071                           
  6072                           ;newmain.c: 792: if (show4_1[i][j] != 100)
  6073  00647C  505C               	movf	animation4@i,w,c
  6074  00647E  0D08               	mullw	8
  6075  006480  0EB9               	movlw	low _show4_1
  6076  006482  6E59               	movwf	??_animation4& (0+255),c
  6077  006484  0E7E               	movlw	high _show4_1
  6078  006486  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6079  006488  50F3               	movf	prodl,w,c
  6080  00648A  2659               	addwf	??_animation4,f,c
  6081  00648C  50F4               	movf	prodh,w,c
  6082  00648E  225A               	addwfc	??_animation4+1,f,c
  6083  006490  505D               	movf	animation4@j,w,c
  6084  006492  0D01               	mullw	1
  6085  006494  50F3               	movf	prodl,w,c
  6086  006496  2659               	addwf	??_animation4,f,c
  6087  006498  50F4               	movf	prodh,w,c
  6088  00649A  225A               	addwfc	??_animation4+1,f,c
  6089  00649C  C059  FFF6         	movff	??_animation4,tblptrl
  6090  0064A0  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6091  0064A4                     	if	0	;tblptru may be non-zero
  6092  0064A4                     	endif
  6093  0064A4                     	if	0	;tblptru may be non-zero
  6094  0064A4                     	endif
  6095  0064A4  0008               	tblrd		*
  6096  0064A6  50F5               	movf	tablat,w,c
  6097  0064A8  0A64               	xorlw	100
  6098  0064AA  B4D8               	btfsc	status,2,c
  6099  0064AC  D018               	goto	l350
  6100                           
  6101                           ;newmain.c: 793: set_led(show4_1[i][j]);
  6102  0064AE  505C               	movf	animation4@i,w,c
  6103  0064B0  0D08               	mullw	8
  6104  0064B2  0EB9               	movlw	low _show4_1
  6105  0064B4  6E59               	movwf	??_animation4& (0+255),c
  6106  0064B6  0E7E               	movlw	high _show4_1
  6107  0064B8  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6108  0064BA  50F3               	movf	prodl,w,c
  6109  0064BC  2659               	addwf	??_animation4,f,c
  6110  0064BE  50F4               	movf	prodh,w,c
  6111  0064C0  225A               	addwfc	??_animation4+1,f,c
  6112  0064C2  505D               	movf	animation4@j,w,c
  6113  0064C4  0D01               	mullw	1
  6114  0064C6  50F3               	movf	prodl,w,c
  6115  0064C8  2659               	addwf	??_animation4,f,c
  6116  0064CA  50F4               	movf	prodh,w,c
  6117  0064CC  225A               	addwfc	??_animation4+1,f,c
  6118  0064CE  C059  FFF6         	movff	??_animation4,tblptrl
  6119  0064D2  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6120  0064D6                     	if	0	;tblptru may be non-zero
  6121  0064D6                     	endif
  6122  0064D6                     	if	0	;tblptru may be non-zero
  6123  0064D6                     	endif
  6124  0064D6  0008               	tblrd		*
  6125  0064D8  50F5               	movf	tablat,w,c
  6126  0064DA  EC02  F029         	call	_set_led
  6127  0064DE                     l350:
  6128  0064DE  2A5D               	incf	animation4@j,f,c
  6129  0064E0  D7C9               	goto	l3939
  6130  0064E2                     u4740:
  6131                           
  6132                           ;newmain.c: 794: write_display();
  6133  0064E2  ECB4  F029         	call	_write_display	;wreg free
  6134                           
  6135                           ;newmain.c: 795: _delay((unsigned long)((40)*(4000000/4000.0)));
  6136  0064E6  0E34               	movlw	52
  6137  0064E8  6E59               	movwf	??_animation4& (0+255),c
  6138  0064EA  0EF2               	movlw	242
  6139  0064EC                     u6617:
  6140  0064EC  2EE8               	decfsz	wreg,f,c
  6141  0064EE  D7FE               	bra	u6617
  6142  0064F0  2E59               	decfsz	??_animation4& (0+255),f,c
  6143  0064F2  D7FC               	bra	u6617
  6144                           
  6145                           ;newmain.c: 797: for (j = 0; j < 8; j++)
  6146  0064F4  0E00               	movlw	0
  6147  0064F6  6E5D               	movwf	animation4@j,c
  6148  0064F8                     l3957:
  6149  0064F8  0E07               	movlw	7
  6150  0064FA  645D               	cpfsgt	animation4@j,c
  6151  0064FC  D001               	goto	l351
  6152  0064FE  D033               	goto	u4770
  6153  006500                     l351:
  6154                           
  6155                           ;newmain.c: 798: if (show4_1[i][j] != 100)
  6156  006500  505C               	movf	animation4@i,w,c
  6157  006502  0D08               	mullw	8
  6158  006504  0EB9               	movlw	low _show4_1
  6159  006506  6E59               	movwf	??_animation4& (0+255),c
  6160  006508  0E7E               	movlw	high _show4_1
  6161  00650A  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6162  00650C  50F3               	movf	prodl,w,c
  6163  00650E  2659               	addwf	??_animation4,f,c
  6164  006510  50F4               	movf	prodh,w,c
  6165  006512  225A               	addwfc	??_animation4+1,f,c
  6166  006514  505D               	movf	animation4@j,w,c
  6167  006516  0D01               	mullw	1
  6168  006518  50F3               	movf	prodl,w,c
  6169  00651A  2659               	addwf	??_animation4,f,c
  6170  00651C  50F4               	movf	prodh,w,c
  6171  00651E  225A               	addwfc	??_animation4+1,f,c
  6172  006520  C059  FFF6         	movff	??_animation4,tblptrl
  6173  006524  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6174  006528                     	if	0	;tblptru may be non-zero
  6175  006528                     	endif
  6176  006528                     	if	0	;tblptru may be non-zero
  6177  006528                     	endif
  6178  006528  0008               	tblrd		*
  6179  00652A  50F5               	movf	tablat,w,c
  6180  00652C  0A64               	xorlw	100
  6181  00652E  B4D8               	btfsc	status,2,c
  6182  006530  D018               	goto	l353
  6183                           
  6184                           ;newmain.c: 799: clr_led(show4_1[i][j]);
  6185  006532  505C               	movf	animation4@i,w,c
  6186  006534  0D08               	mullw	8
  6187  006536  0EB9               	movlw	low _show4_1
  6188  006538  6E59               	movwf	??_animation4& (0+255),c
  6189  00653A  0E7E               	movlw	high _show4_1
  6190  00653C  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6191  00653E  50F3               	movf	prodl,w,c
  6192  006540  2659               	addwf	??_animation4,f,c
  6193  006542  50F4               	movf	prodh,w,c
  6194  006544  225A               	addwfc	??_animation4+1,f,c
  6195  006546  505D               	movf	animation4@j,w,c
  6196  006548  0D01               	mullw	1
  6197  00654A  50F3               	movf	prodl,w,c
  6198  00654C  2659               	addwf	??_animation4,f,c
  6199  00654E  50F4               	movf	prodh,w,c
  6200  006550  225A               	addwfc	??_animation4+1,f,c
  6201  006552  C059  FFF6         	movff	??_animation4,tblptrl
  6202  006556  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6203  00655A                     	if	0	;tblptru may be non-zero
  6204  00655A                     	endif
  6205  00655A                     	if	0	;tblptru may be non-zero
  6206  00655A                     	endif
  6207  00655A  0008               	tblrd		*
  6208  00655C  50F5               	movf	tablat,w,c
  6209  00655E  EC59  F029         	call	_clr_led
  6210  006562                     l353:
  6211  006562  2A5D               	incf	animation4@j,f,c
  6212  006564  D7C9               	goto	l3957
  6213  006566                     u4770:
  6214                           
  6215                           ;newmain.c: 800: write_display();
  6216  006566  ECB4  F029         	call	_write_display	;wreg free
  6217  00656A  2A5C               	incf	animation4@i,f,c
  6218  00656C  D77D               	goto	l3933
  6219  00656E                     l345:
  6220  00656E  045B               	decf	animation4@m,w,c
  6221  006570  A4D8               	btfss	status,2,c
  6222  006572  D086               	goto	l355
  6223                           
  6224                           ;newmain.c: 803: for (i = 0; i < 12; i++) {
  6225  006574  0E00               	movlw	0
  6226  006576  6E5C               	movwf	animation4@i,c
  6227  006578                     l3979:
  6228  006578  0E0B               	movlw	11
  6229  00657A  645C               	cpfsgt	animation4@i,c
  6230  00657C  D001               	goto	l356
  6231  00657E  D193               	goto	u5050
  6232  006580                     l356:
  6233                           
  6234                           ;newmain.c: 804: for (j = 0; j < 8; j++)
  6235  006580  0E00               	movlw	0
  6236  006582  6E5D               	movwf	animation4@j,c
  6237  006584                     l3985:
  6238  006584  0E07               	movlw	7
  6239  006586  645D               	cpfsgt	animation4@j,c
  6240  006588  D001               	goto	l358
  6241  00658A  D033               	goto	u4830
  6242  00658C                     l358:
  6243                           
  6244                           ;newmain.c: 805: if (show4_2[i][j] != 100)
  6245  00658C  505C               	movf	animation4@i,w,c
  6246  00658E  0D08               	mullw	8
  6247  006590  0E89               	movlw	low _show4_2
  6248  006592  6E59               	movwf	??_animation4& (0+255),c
  6249  006594  0E7D               	movlw	high _show4_2
  6250  006596  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6251  006598  50F3               	movf	prodl,w,c
  6252  00659A  2659               	addwf	??_animation4,f,c
  6253  00659C  50F4               	movf	prodh,w,c
  6254  00659E  225A               	addwfc	??_animation4+1,f,c
  6255  0065A0  505D               	movf	animation4@j,w,c
  6256  0065A2  0D01               	mullw	1
  6257  0065A4  50F3               	movf	prodl,w,c
  6258  0065A6  2659               	addwf	??_animation4,f,c
  6259  0065A8  50F4               	movf	prodh,w,c
  6260  0065AA  225A               	addwfc	??_animation4+1,f,c
  6261  0065AC  C059  FFF6         	movff	??_animation4,tblptrl
  6262  0065B0  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6263  0065B4                     	if	0	;tblptru may be non-zero
  6264  0065B4                     	endif
  6265  0065B4                     	if	0	;tblptru may be non-zero
  6266  0065B4                     	endif
  6267  0065B4  0008               	tblrd		*
  6268  0065B6  50F5               	movf	tablat,w,c
  6269  0065B8  0A64               	xorlw	100
  6270  0065BA  B4D8               	btfsc	status,2,c
  6271  0065BC  D018               	goto	l360
  6272                           
  6273                           ;newmain.c: 806: set_led(show4_2[i][j]);
  6274  0065BE  505C               	movf	animation4@i,w,c
  6275  0065C0  0D08               	mullw	8
  6276  0065C2  0E89               	movlw	low _show4_2
  6277  0065C4  6E59               	movwf	??_animation4& (0+255),c
  6278  0065C6  0E7D               	movlw	high _show4_2
  6279  0065C8  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6280  0065CA  50F3               	movf	prodl,w,c
  6281  0065CC  2659               	addwf	??_animation4,f,c
  6282  0065CE  50F4               	movf	prodh,w,c
  6283  0065D0  225A               	addwfc	??_animation4+1,f,c
  6284  0065D2  505D               	movf	animation4@j,w,c
  6285  0065D4  0D01               	mullw	1
  6286  0065D6  50F3               	movf	prodl,w,c
  6287  0065D8  2659               	addwf	??_animation4,f,c
  6288  0065DA  50F4               	movf	prodh,w,c
  6289  0065DC  225A               	addwfc	??_animation4+1,f,c
  6290  0065DE  C059  FFF6         	movff	??_animation4,tblptrl
  6291  0065E2  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6292  0065E6                     	if	0	;tblptru may be non-zero
  6293  0065E6                     	endif
  6294  0065E6                     	if	0	;tblptru may be non-zero
  6295  0065E6                     	endif
  6296  0065E6  0008               	tblrd		*
  6297  0065E8  50F5               	movf	tablat,w,c
  6298  0065EA  EC02  F029         	call	_set_led
  6299  0065EE                     l360:
  6300  0065EE  2A5D               	incf	animation4@j,f,c
  6301  0065F0  D7C9               	goto	l3985
  6302  0065F2                     u4830:
  6303                           
  6304                           ;newmain.c: 807: write_display();
  6305  0065F2  ECB4  F029         	call	_write_display	;wreg free
  6306                           
  6307                           ;newmain.c: 808: _delay((unsigned long)((30)*(4000000/4000.0)));
  6308  0065F6  0E27               	movlw	39
  6309  0065F8  6E59               	movwf	??_animation4& (0+255),c
  6310  0065FA  0EF5               	movlw	245
  6311  0065FC                     u6627:
  6312  0065FC  2EE8               	decfsz	wreg,f,c
  6313  0065FE  D7FE               	bra	u6627
  6314  006600  2E59               	decfsz	??_animation4& (0+255),f,c
  6315  006602  D7FC               	bra	u6627
  6316  006604  F000               	nop	
  6317                           
  6318                           ;newmain.c: 810: for (j = 0; j < 8; j++)
  6319  006606  0E00               	movlw	0
  6320  006608  6E5D               	movwf	animation4@j,c
  6321  00660A                     l4003:
  6322  00660A  0E07               	movlw	7
  6323  00660C  645D               	cpfsgt	animation4@j,c
  6324  00660E  D001               	goto	l361
  6325  006610  D033               	goto	u4860
  6326  006612                     l361:
  6327                           
  6328                           ;newmain.c: 811: if (show4_2[i][j] != 100)
  6329  006612  505C               	movf	animation4@i,w,c
  6330  006614  0D08               	mullw	8
  6331  006616  0E89               	movlw	low _show4_2
  6332  006618  6E59               	movwf	??_animation4& (0+255),c
  6333  00661A  0E7D               	movlw	high _show4_2
  6334  00661C  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6335  00661E  50F3               	movf	prodl,w,c
  6336  006620  2659               	addwf	??_animation4,f,c
  6337  006622  50F4               	movf	prodh,w,c
  6338  006624  225A               	addwfc	??_animation4+1,f,c
  6339  006626  505D               	movf	animation4@j,w,c
  6340  006628  0D01               	mullw	1
  6341  00662A  50F3               	movf	prodl,w,c
  6342  00662C  2659               	addwf	??_animation4,f,c
  6343  00662E  50F4               	movf	prodh,w,c
  6344  006630  225A               	addwfc	??_animation4+1,f,c
  6345  006632  C059  FFF6         	movff	??_animation4,tblptrl
  6346  006636  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6347  00663A                     	if	0	;tblptru may be non-zero
  6348  00663A                     	endif
  6349  00663A                     	if	0	;tblptru may be non-zero
  6350  00663A                     	endif
  6351  00663A  0008               	tblrd		*
  6352  00663C  50F5               	movf	tablat,w,c
  6353  00663E  0A64               	xorlw	100
  6354  006640  B4D8               	btfsc	status,2,c
  6355  006642  D018               	goto	l363
  6356                           
  6357                           ;newmain.c: 812: clr_led(show4_2[i][j]);
  6358  006644  505C               	movf	animation4@i,w,c
  6359  006646  0D08               	mullw	8
  6360  006648  0E89               	movlw	low _show4_2
  6361  00664A  6E59               	movwf	??_animation4& (0+255),c
  6362  00664C  0E7D               	movlw	high _show4_2
  6363  00664E  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6364  006650  50F3               	movf	prodl,w,c
  6365  006652  2659               	addwf	??_animation4,f,c
  6366  006654  50F4               	movf	prodh,w,c
  6367  006656  225A               	addwfc	??_animation4+1,f,c
  6368  006658  505D               	movf	animation4@j,w,c
  6369  00665A  0D01               	mullw	1
  6370  00665C  50F3               	movf	prodl,w,c
  6371  00665E  2659               	addwf	??_animation4,f,c
  6372  006660  50F4               	movf	prodh,w,c
  6373  006662  225A               	addwfc	??_animation4+1,f,c
  6374  006664  C059  FFF6         	movff	??_animation4,tblptrl
  6375  006668  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6376  00666C                     	if	0	;tblptru may be non-zero
  6377  00666C                     	endif
  6378  00666C                     	if	0	;tblptru may be non-zero
  6379  00666C                     	endif
  6380  00666C  0008               	tblrd		*
  6381  00666E  50F5               	movf	tablat,w,c
  6382  006670  EC59  F029         	call	_clr_led
  6383  006674                     l363:
  6384  006674  2A5D               	incf	animation4@j,f,c
  6385  006676  D7C9               	goto	l4003
  6386  006678                     u4860:
  6387                           
  6388                           ;newmain.c: 813: write_display();
  6389  006678  ECB4  F029         	call	_write_display	;wreg free
  6390  00667C  2A5C               	incf	animation4@i,f,c
  6391  00667E  D77C               	goto	l3979
  6392  006680                     l355:
  6393  006680  0E02               	movlw	2
  6394  006682  185B               	xorwf	animation4@m,w,c
  6395  006684  A4D8               	btfss	status,2,c
  6396  006686  D086               	goto	l365
  6397                           
  6398                           ;newmain.c: 816: for (i = 0; i < 12; i++) {
  6399  006688  0E00               	movlw	0
  6400  00668A  6E5C               	movwf	animation4@i,c
  6401  00668C                     l4025:
  6402  00668C  0E0B               	movlw	11
  6403  00668E  645C               	cpfsgt	animation4@i,c
  6404  006690  D001               	goto	l366
  6405  006692  D109               	goto	u5050
  6406  006694                     l366:
  6407                           
  6408                           ;newmain.c: 817: for (j = 0; j < 8; j++)
  6409  006694  0E00               	movlw	0
  6410  006696  6E5D               	movwf	animation4@j,c
  6411  006698                     l4031:
  6412  006698  0E07               	movlw	7
  6413  00669A  645D               	cpfsgt	animation4@j,c
  6414  00669C  D001               	goto	l368
  6415  00669E  D033               	goto	u4920
  6416  0066A0                     l368:
  6417                           
  6418                           ;newmain.c: 818: if (show4_2[i][j] != 100)
  6419  0066A0  505C               	movf	animation4@i,w,c
  6420  0066A2  0D08               	mullw	8
  6421  0066A4  0E89               	movlw	low _show4_2
  6422  0066A6  6E59               	movwf	??_animation4& (0+255),c
  6423  0066A8  0E7D               	movlw	high _show4_2
  6424  0066AA  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6425  0066AC  50F3               	movf	prodl,w,c
  6426  0066AE  2659               	addwf	??_animation4,f,c
  6427  0066B0  50F4               	movf	prodh,w,c
  6428  0066B2  225A               	addwfc	??_animation4+1,f,c
  6429  0066B4  505D               	movf	animation4@j,w,c
  6430  0066B6  0D01               	mullw	1
  6431  0066B8  50F3               	movf	prodl,w,c
  6432  0066BA  2659               	addwf	??_animation4,f,c
  6433  0066BC  50F4               	movf	prodh,w,c
  6434  0066BE  225A               	addwfc	??_animation4+1,f,c
  6435  0066C0  C059  FFF6         	movff	??_animation4,tblptrl
  6436  0066C4  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6437  0066C8                     	if	0	;tblptru may be non-zero
  6438  0066C8                     	endif
  6439  0066C8                     	if	0	;tblptru may be non-zero
  6440  0066C8                     	endif
  6441  0066C8  0008               	tblrd		*
  6442  0066CA  50F5               	movf	tablat,w,c
  6443  0066CC  0A64               	xorlw	100
  6444  0066CE  B4D8               	btfsc	status,2,c
  6445  0066D0  D018               	goto	l370
  6446                           
  6447                           ;newmain.c: 819: set_led(show4_3[i][j]);
  6448  0066D2  505C               	movf	animation4@i,w,c
  6449  0066D4  0D08               	mullw	8
  6450  0066D6  0E29               	movlw	low _show4_3
  6451  0066D8  6E59               	movwf	??_animation4& (0+255),c
  6452  0066DA  0E7D               	movlw	high _show4_3
  6453  0066DC  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6454  0066DE  50F3               	movf	prodl,w,c
  6455  0066E0  2659               	addwf	??_animation4,f,c
  6456  0066E2  50F4               	movf	prodh,w,c
  6457  0066E4  225A               	addwfc	??_animation4+1,f,c
  6458  0066E6  505D               	movf	animation4@j,w,c
  6459  0066E8  0D01               	mullw	1
  6460  0066EA  50F3               	movf	prodl,w,c
  6461  0066EC  2659               	addwf	??_animation4,f,c
  6462  0066EE  50F4               	movf	prodh,w,c
  6463  0066F0  225A               	addwfc	??_animation4+1,f,c
  6464  0066F2  C059  FFF6         	movff	??_animation4,tblptrl
  6465  0066F6  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6466  0066FA                     	if	0	;tblptru may be non-zero
  6467  0066FA                     	endif
  6468  0066FA                     	if	0	;tblptru may be non-zero
  6469  0066FA                     	endif
  6470  0066FA  0008               	tblrd		*
  6471  0066FC  50F5               	movf	tablat,w,c
  6472  0066FE  EC02  F029         	call	_set_led
  6473  006702                     l370:
  6474  006702  2A5D               	incf	animation4@j,f,c
  6475  006704  D7C9               	goto	l4031
  6476  006706                     u4920:
  6477                           
  6478                           ;newmain.c: 820: write_display();
  6479  006706  ECB4  F029         	call	_write_display	;wreg free
  6480                           
  6481                           ;newmain.c: 821: _delay((unsigned long)((30)*(4000000/4000.0)));
  6482  00670A  0E27               	movlw	39
  6483  00670C  6E59               	movwf	??_animation4& (0+255),c
  6484  00670E  0EF5               	movlw	245
  6485  006710                     u6637:
  6486  006710  2EE8               	decfsz	wreg,f,c
  6487  006712  D7FE               	bra	u6637
  6488  006714  2E59               	decfsz	??_animation4& (0+255),f,c
  6489  006716  D7FC               	bra	u6637
  6490  006718  F000               	nop	
  6491                           
  6492                           ;newmain.c: 823: for (j = 0; j < 8; j++)
  6493  00671A  0E00               	movlw	0
  6494  00671C  6E5D               	movwf	animation4@j,c
  6495  00671E                     l4049:
  6496  00671E  0E07               	movlw	7
  6497  006720  645D               	cpfsgt	animation4@j,c
  6498  006722  D001               	goto	l371
  6499  006724  D033               	goto	u4950
  6500  006726                     l371:
  6501                           
  6502                           ;newmain.c: 824: if (show4_2[i][j] != 100)
  6503  006726  505C               	movf	animation4@i,w,c
  6504  006728  0D08               	mullw	8
  6505  00672A  0E89               	movlw	low _show4_2
  6506  00672C  6E59               	movwf	??_animation4& (0+255),c
  6507  00672E  0E7D               	movlw	high _show4_2
  6508  006730  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6509  006732  50F3               	movf	prodl,w,c
  6510  006734  2659               	addwf	??_animation4,f,c
  6511  006736  50F4               	movf	prodh,w,c
  6512  006738  225A               	addwfc	??_animation4+1,f,c
  6513  00673A  505D               	movf	animation4@j,w,c
  6514  00673C  0D01               	mullw	1
  6515  00673E  50F3               	movf	prodl,w,c
  6516  006740  2659               	addwf	??_animation4,f,c
  6517  006742  50F4               	movf	prodh,w,c
  6518  006744  225A               	addwfc	??_animation4+1,f,c
  6519  006746  C059  FFF6         	movff	??_animation4,tblptrl
  6520  00674A  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6521  00674E                     	if	0	;tblptru may be non-zero
  6522  00674E                     	endif
  6523  00674E                     	if	0	;tblptru may be non-zero
  6524  00674E                     	endif
  6525  00674E  0008               	tblrd		*
  6526  006750  50F5               	movf	tablat,w,c
  6527  006752  0A64               	xorlw	100
  6528  006754  B4D8               	btfsc	status,2,c
  6529  006756  D018               	goto	l373
  6530                           
  6531                           ;newmain.c: 825: clr_led(show4_3[i][j]);
  6532  006758  505C               	movf	animation4@i,w,c
  6533  00675A  0D08               	mullw	8
  6534  00675C  0E29               	movlw	low _show4_3
  6535  00675E  6E59               	movwf	??_animation4& (0+255),c
  6536  006760  0E7D               	movlw	high _show4_3
  6537  006762  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6538  006764  50F3               	movf	prodl,w,c
  6539  006766  2659               	addwf	??_animation4,f,c
  6540  006768  50F4               	movf	prodh,w,c
  6541  00676A  225A               	addwfc	??_animation4+1,f,c
  6542  00676C  505D               	movf	animation4@j,w,c
  6543  00676E  0D01               	mullw	1
  6544  006770  50F3               	movf	prodl,w,c
  6545  006772  2659               	addwf	??_animation4,f,c
  6546  006774  50F4               	movf	prodh,w,c
  6547  006776  225A               	addwfc	??_animation4+1,f,c
  6548  006778  C059  FFF6         	movff	??_animation4,tblptrl
  6549  00677C  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6550  006780                     	if	0	;tblptru may be non-zero
  6551  006780                     	endif
  6552  006780                     	if	0	;tblptru may be non-zero
  6553  006780                     	endif
  6554  006780  0008               	tblrd		*
  6555  006782  50F5               	movf	tablat,w,c
  6556  006784  EC59  F029         	call	_clr_led
  6557  006788                     l373:
  6558  006788  2A5D               	incf	animation4@j,f,c
  6559  00678A  D7C9               	goto	l4049
  6560  00678C                     u4950:
  6561                           
  6562                           ;newmain.c: 826: write_display();
  6563  00678C  ECB4  F029         	call	_write_display	;wreg free
  6564  006790  2A5C               	incf	animation4@i,f,c
  6565  006792  D77C               	goto	l4025
  6566  006794                     l365:
  6567  006794  0E03               	movlw	3
  6568  006796  185B               	xorwf	animation4@m,w,c
  6569  006798  A4D8               	btfss	status,2,c
  6570  00679A  D085               	goto	u5050
  6571                           
  6572                           ;newmain.c: 830: for (i = 0; i < 8; i++) {
  6573  00679C  0E00               	movlw	0
  6574  00679E  6E5C               	movwf	animation4@i,c
  6575  0067A0                     l4071:
  6576  0067A0  0E07               	movlw	7
  6577  0067A2  645C               	cpfsgt	animation4@i,c
  6578  0067A4  D001               	goto	l376
  6579  0067A6  D07F               	goto	u5050
  6580  0067A8                     l376:
  6581                           
  6582                           ;newmain.c: 831: for (j = 0; j < 8; j++)
  6583  0067A8  0E00               	movlw	0
  6584  0067AA  6E5D               	movwf	animation4@j,c
  6585  0067AC                     l4077:
  6586  0067AC  0E07               	movlw	7
  6587  0067AE  645D               	cpfsgt	animation4@j,c
  6588  0067B0  D001               	goto	l378
  6589  0067B2  D033               	goto	u5010
  6590  0067B4                     l378:
  6591                           
  6592                           ;newmain.c: 832: if (show4_3[i][j] != 100)
  6593  0067B4  505C               	movf	animation4@i,w,c
  6594  0067B6  0D08               	mullw	8
  6595  0067B8  0E29               	movlw	low _show4_3
  6596  0067BA  6E59               	movwf	??_animation4& (0+255),c
  6597  0067BC  0E7D               	movlw	high _show4_3
  6598  0067BE  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6599  0067C0  50F3               	movf	prodl,w,c
  6600  0067C2  2659               	addwf	??_animation4,f,c
  6601  0067C4  50F4               	movf	prodh,w,c
  6602  0067C6  225A               	addwfc	??_animation4+1,f,c
  6603  0067C8  505D               	movf	animation4@j,w,c
  6604  0067CA  0D01               	mullw	1
  6605  0067CC  50F3               	movf	prodl,w,c
  6606  0067CE  2659               	addwf	??_animation4,f,c
  6607  0067D0  50F4               	movf	prodh,w,c
  6608  0067D2  225A               	addwfc	??_animation4+1,f,c
  6609  0067D4  C059  FFF6         	movff	??_animation4,tblptrl
  6610  0067D8  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6611  0067DC                     	if	0	;tblptru may be non-zero
  6612  0067DC                     	endif
  6613  0067DC                     	if	0	;tblptru may be non-zero
  6614  0067DC                     	endif
  6615  0067DC  0008               	tblrd		*
  6616  0067DE  50F5               	movf	tablat,w,c
  6617  0067E0  0A64               	xorlw	100
  6618  0067E2  B4D8               	btfsc	status,2,c
  6619  0067E4  D018               	goto	l380
  6620                           
  6621                           ;newmain.c: 833: set_led(show4_4[i][j]);
  6622  0067E6  505C               	movf	animation4@i,w,c
  6623  0067E8  0D08               	mullw	8
  6624  0067EA  0E79               	movlw	low _show4_4
  6625  0067EC  6E59               	movwf	??_animation4& (0+255),c
  6626  0067EE  0E7E               	movlw	high _show4_4
  6627  0067F0  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6628  0067F2  50F3               	movf	prodl,w,c
  6629  0067F4  2659               	addwf	??_animation4,f,c
  6630  0067F6  50F4               	movf	prodh,w,c
  6631  0067F8  225A               	addwfc	??_animation4+1,f,c
  6632  0067FA  505D               	movf	animation4@j,w,c
  6633  0067FC  0D01               	mullw	1
  6634  0067FE  50F3               	movf	prodl,w,c
  6635  006800  2659               	addwf	??_animation4,f,c
  6636  006802  50F4               	movf	prodh,w,c
  6637  006804  225A               	addwfc	??_animation4+1,f,c
  6638  006806  C059  FFF6         	movff	??_animation4,tblptrl
  6639  00680A  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6640  00680E                     	if	0	;tblptru may be non-zero
  6641  00680E                     	endif
  6642  00680E                     	if	0	;tblptru may be non-zero
  6643  00680E                     	endif
  6644  00680E  0008               	tblrd		*
  6645  006810  50F5               	movf	tablat,w,c
  6646  006812  EC02  F029         	call	_set_led
  6647  006816                     l380:
  6648  006816  2A5D               	incf	animation4@j,f,c
  6649  006818  D7C9               	goto	l4077
  6650  00681A                     u5010:
  6651                           
  6652                           ;newmain.c: 834: write_display();
  6653  00681A  ECB4  F029         	call	_write_display	;wreg free
  6654                           
  6655                           ;newmain.c: 835: _delay((unsigned long)((40)*(4000000/4000.0)));
  6656  00681E  0E34               	movlw	52
  6657  006820  6E59               	movwf	??_animation4& (0+255),c
  6658  006822  0EF2               	movlw	242
  6659  006824                     u6647:
  6660  006824  2EE8               	decfsz	wreg,f,c
  6661  006826  D7FE               	bra	u6647
  6662  006828  2E59               	decfsz	??_animation4& (0+255),f,c
  6663  00682A  D7FC               	bra	u6647
  6664                           
  6665                           ;newmain.c: 837: for (j = 0; j < 8; j++)
  6666  00682C  0E00               	movlw	0
  6667  00682E  6E5D               	movwf	animation4@j,c
  6668  006830                     l4095:
  6669  006830  0E07               	movlw	7
  6670  006832  645D               	cpfsgt	animation4@j,c
  6671  006834  D001               	goto	l381
  6672  006836  D033               	goto	u5040
  6673  006838                     l381:
  6674                           
  6675                           ;newmain.c: 838: if (show4_3[i][j] != 100)
  6676  006838  505C               	movf	animation4@i,w,c
  6677  00683A  0D08               	mullw	8
  6678  00683C  0E29               	movlw	low _show4_3
  6679  00683E  6E59               	movwf	??_animation4& (0+255),c
  6680  006840  0E7D               	movlw	high _show4_3
  6681  006842  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6682  006844  50F3               	movf	prodl,w,c
  6683  006846  2659               	addwf	??_animation4,f,c
  6684  006848  50F4               	movf	prodh,w,c
  6685  00684A  225A               	addwfc	??_animation4+1,f,c
  6686  00684C  505D               	movf	animation4@j,w,c
  6687  00684E  0D01               	mullw	1
  6688  006850  50F3               	movf	prodl,w,c
  6689  006852  2659               	addwf	??_animation4,f,c
  6690  006854  50F4               	movf	prodh,w,c
  6691  006856  225A               	addwfc	??_animation4+1,f,c
  6692  006858  C059  FFF6         	movff	??_animation4,tblptrl
  6693  00685C  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6694  006860                     	if	0	;tblptru may be non-zero
  6695  006860                     	endif
  6696  006860                     	if	0	;tblptru may be non-zero
  6697  006860                     	endif
  6698  006860  0008               	tblrd		*
  6699  006862  50F5               	movf	tablat,w,c
  6700  006864  0A64               	xorlw	100
  6701  006866  B4D8               	btfsc	status,2,c
  6702  006868  D018               	goto	l383
  6703                           
  6704                           ;newmain.c: 839: clr_led(show4_4[i][j]);
  6705  00686A  505C               	movf	animation4@i,w,c
  6706  00686C  0D08               	mullw	8
  6707  00686E  0E79               	movlw	low _show4_4
  6708  006870  6E59               	movwf	??_animation4& (0+255),c
  6709  006872  0E7E               	movlw	high _show4_4
  6710  006874  6E5A               	movwf	(??_animation4+1)& (0+255),c
  6711  006876  50F3               	movf	prodl,w,c
  6712  006878  2659               	addwf	??_animation4,f,c
  6713  00687A  50F4               	movf	prodh,w,c
  6714  00687C  225A               	addwfc	??_animation4+1,f,c
  6715  00687E  505D               	movf	animation4@j,w,c
  6716  006880  0D01               	mullw	1
  6717  006882  50F3               	movf	prodl,w,c
  6718  006884  2659               	addwf	??_animation4,f,c
  6719  006886  50F4               	movf	prodh,w,c
  6720  006888  225A               	addwfc	??_animation4+1,f,c
  6721  00688A  C059  FFF6         	movff	??_animation4,tblptrl
  6722  00688E  C05A  FFF7         	movff	??_animation4+1,tblptrh
  6723  006892                     	if	0	;tblptru may be non-zero
  6724  006892                     	endif
  6725  006892                     	if	0	;tblptru may be non-zero
  6726  006892                     	endif
  6727  006892  0008               	tblrd		*
  6728  006894  50F5               	movf	tablat,w,c
  6729  006896  EC59  F029         	call	_clr_led
  6730  00689A                     l383:
  6731  00689A  2A5D               	incf	animation4@j,f,c
  6732  00689C  D7C9               	goto	l4095
  6733  00689E                     u5040:
  6734                           
  6735                           ;newmain.c: 840: write_display();
  6736  00689E  ECB4  F029         	call	_write_display	;wreg free
  6737  0068A2  2A5C               	incf	animation4@i,f,c
  6738  0068A4  D77D               	goto	l4071
  6739  0068A6                     u5050:
  6740                           
  6741                           ;newmain.c: 841: }
  6742                           ;newmain.c: 842: }
  6743                           ;newmain.c: 843: clr_led(h);
  6744  0068A6  5058               	movf	animation4@h,w,c
  6745  0068A8  EC59  F029         	call	_clr_led
  6746                           
  6747                           ;newmain.c: 844: write_display();
  6748  0068AC  ECB4  F029         	call	_write_display	;wreg free
  6749  0068B0  0012               	return		;funcret
  6750  0068B2                     __end_of_animation4:
  6751                           	opt stack 0
  6752                           tblptru	equ	0xFF8
  6753                           tblptrh	equ	0xFF7
  6754                           tblptrl	equ	0xFF6
  6755                           tablat	equ	0xFF5
  6756                           prodh	equ	0xFF4
  6757                           prodl	equ	0xFF3
  6758                           postinc0	equ	0xFEE
  6759                           wreg	equ	0xFE8
  6760                           postinc1	equ	0xFE6
  6761                           fsr1h	equ	0xFE2
  6762                           fsr1l	equ	0xFE1
  6763                           indf2	equ	0xFDF
  6764                           postinc2	equ	0xFDE
  6765                           fsr2h	equ	0xFDA
  6766                           fsr2l	equ	0xFD9
  6767                           status	equ	0xFD8
  6768                           
  6769 ;; *************** function _animation3 *****************
  6770 ;; Defined at:
  6771 ;;		line 708 in file "newmain.c"
  6772 ;; Parameters:    Size  Location     Type
  6773 ;;  m               1    wreg     unsigned char 
  6774 ;; Auto vars:     Size  Location     Type
  6775 ;;  m               1   23[COMRAM] unsigned char 
  6776 ;;  j               1   25[COMRAM] unsigned char 
  6777 ;;  i               1   24[COMRAM] unsigned char 
  6778 ;; Return value:  Size  Location     Type
  6779 ;;                  1    wreg      void 
  6780 ;; Registers used:
  6781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6782 ;; Tracked objects:
  6783 ;;		On entry : 0/0
  6784 ;;		On exit  : 0/0
  6785 ;;		Unchanged: 0/0
  6786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6787 ;;      Params:         0       0       0       0       0       0       0
  6788 ;;      Locals:         3       0       0       0       0       0       0
  6789 ;;      Temps:          2       0       0       0       0       0       0
  6790 ;;      Totals:         5       0       0       0       0       0       0
  6791 ;;Total ram usage:        5 bytes
  6792 ;; Hardware stack levels used:    1
  6793 ;; Hardware stack levels required when called:    4
  6794 ;; This function calls:
  6795 ;;		_clr_led
  6796 ;;		_set_led
  6797 ;;		_write_display
  6798 ;; This function is called by:
  6799 ;;		_main
  6800 ;; This function uses a non-reentrant model
  6801 ;;
  6802                           
  6803                           	psect	text12
  6804  006DAC                     __ptext12:
  6805                           	opt stack 0
  6806  006DAC                     _animation3:
  6807                           	opt stack 26
  6808                           
  6809                           ;incstack = 0
  6810                           ;animation3@m stored from wreg
  6811  006DAC  6E5A               	movwf	animation3@m,c
  6812                           
  6813                           ;newmain.c: 709: uint8_t i = 0, j = 0;
  6814  006DAE  0E00               	movlw	0
  6815  006DB0  6E5B               	movwf	animation3@i,c
  6816  006DB2  0E00               	movlw	0
  6817  006DB4  6E5C               	movwf	animation3@j,c
  6818                           
  6819                           ;newmain.c: 710: if (m == 0) {
  6820  006DB6  505A               	movf	animation3@m,w,c
  6821  006DB8  A4D8               	btfss	status,2,c
  6822  006DBA  D086               	goto	l295
  6823                           
  6824                           ;newmain.c: 711: for (i = 0; i < 10; i++) {
  6825  006DBC  0E00               	movlw	0
  6826  006DBE  6E5B               	movwf	animation3@i,c
  6827  006DC0                     l3703:
  6828  006DC0  0E09               	movlw	9
  6829  006DC2  645B               	cpfsgt	animation3@i,c
  6830  006DC4  D001               	goto	l296
  6831  006DC6  0012               	return	
  6832  006DC8                     l296:
  6833                           
  6834                           ;newmain.c: 712: for (j = 0; j < 8; j++) {
  6835  006DC8  0E00               	movlw	0
  6836  006DCA  6E5C               	movwf	animation3@j,c
  6837  006DCC                     l3709:
  6838  006DCC  0E07               	movlw	7
  6839  006DCE  645C               	cpfsgt	animation3@j,c
  6840  006DD0  D001               	goto	l298
  6841  006DD2  D033               	goto	u4320
  6842  006DD4                     l298:
  6843                           
  6844                           ;newmain.c: 713: if (show3_1[i][j] != 100)
  6845  006DD4  505B               	movf	animation3@i,w,c
  6846  006DD6  0D08               	mullw	8
  6847  006DD8  0EE9               	movlw	low _show3_1
  6848  006DDA  6E58               	movwf	??_animation3& (0+255),c
  6849  006DDC  0E7D               	movlw	high _show3_1
  6850  006DDE  6E59               	movwf	(??_animation3+1)& (0+255),c
  6851  006DE0  50F3               	movf	prodl,w,c
  6852  006DE2  2658               	addwf	??_animation3,f,c
  6853  006DE4  50F4               	movf	prodh,w,c
  6854  006DE6  2259               	addwfc	??_animation3+1,f,c
  6855  006DE8  505C               	movf	animation3@j,w,c
  6856  006DEA  0D01               	mullw	1
  6857  006DEC  50F3               	movf	prodl,w,c
  6858  006DEE  2658               	addwf	??_animation3,f,c
  6859  006DF0  50F4               	movf	prodh,w,c
  6860  006DF2  2259               	addwfc	??_animation3+1,f,c
  6861  006DF4  C058  FFF6         	movff	??_animation3,tblptrl
  6862  006DF8  C059  FFF7         	movff	??_animation3+1,tblptrh
  6863  006DFC                     	if	0	;tblptru may be non-zero
  6864  006DFC                     	endif
  6865  006DFC                     	if	0	;tblptru may be non-zero
  6866  006DFC                     	endif
  6867  006DFC  0008               	tblrd		*
  6868  006DFE  50F5               	movf	tablat,w,c
  6869  006E00  0A64               	xorlw	100
  6870  006E02  B4D8               	btfsc	status,2,c
  6871  006E04  D018               	goto	l300
  6872                           
  6873                           ;newmain.c: 714: set_led(show3_1[i][j]);
  6874  006E06  505B               	movf	animation3@i,w,c
  6875  006E08  0D08               	mullw	8
  6876  006E0A  0EE9               	movlw	low _show3_1
  6877  006E0C  6E58               	movwf	??_animation3& (0+255),c
  6878  006E0E  0E7D               	movlw	high _show3_1
  6879  006E10  6E59               	movwf	(??_animation3+1)& (0+255),c
  6880  006E12  50F3               	movf	prodl,w,c
  6881  006E14  2658               	addwf	??_animation3,f,c
  6882  006E16  50F4               	movf	prodh,w,c
  6883  006E18  2259               	addwfc	??_animation3+1,f,c
  6884  006E1A  505C               	movf	animation3@j,w,c
  6885  006E1C  0D01               	mullw	1
  6886  006E1E  50F3               	movf	prodl,w,c
  6887  006E20  2658               	addwf	??_animation3,f,c
  6888  006E22  50F4               	movf	prodh,w,c
  6889  006E24  2259               	addwfc	??_animation3+1,f,c
  6890  006E26  C058  FFF6         	movff	??_animation3,tblptrl
  6891  006E2A  C059  FFF7         	movff	??_animation3+1,tblptrh
  6892  006E2E                     	if	0	;tblptru may be non-zero
  6893  006E2E                     	endif
  6894  006E2E                     	if	0	;tblptru may be non-zero
  6895  006E2E                     	endif
  6896  006E2E  0008               	tblrd		*
  6897  006E30  50F5               	movf	tablat,w,c
  6898  006E32  EC02  F029         	call	_set_led
  6899  006E36                     l300:
  6900  006E36  2A5C               	incf	animation3@j,f,c
  6901  006E38  D7C9               	goto	l3709
  6902  006E3A                     u4320:
  6903                           
  6904                           ;newmain.c: 715: }
  6905                           ;newmain.c: 716: write_display();
  6906  006E3A  ECB4  F029         	call	_write_display	;wreg free
  6907                           
  6908                           ;newmain.c: 718: _delay((unsigned long)((30)*(4000000/4000.0)));
  6909  006E3E  0E27               	movlw	39
  6910  006E40  6E58               	movwf	??_animation3& (0+255),c
  6911  006E42  0EF5               	movlw	245
  6912  006E44                     u6657:
  6913  006E44  2EE8               	decfsz	wreg,f,c
  6914  006E46  D7FE               	bra	u6657
  6915  006E48  2E58               	decfsz	??_animation3& (0+255),f,c
  6916  006E4A  D7FC               	bra	u6657
  6917  006E4C  F000               	nop	
  6918                           
  6919                           ;newmain.c: 719: for (j = 0; j < 8; j++) {
  6920  006E4E  0E00               	movlw	0
  6921  006E50  6E5C               	movwf	animation3@j,c
  6922  006E52                     l3727:
  6923  006E52  0E07               	movlw	7
  6924  006E54  645C               	cpfsgt	animation3@j,c
  6925  006E56  D001               	goto	l301
  6926  006E58  D033               	goto	u4350
  6927  006E5A                     l301:
  6928                           
  6929                           ;newmain.c: 720: if (show3_1[i][j] != 100)
  6930  006E5A  505B               	movf	animation3@i,w,c
  6931  006E5C  0D08               	mullw	8
  6932  006E5E  0EE9               	movlw	low _show3_1
  6933  006E60  6E58               	movwf	??_animation3& (0+255),c
  6934  006E62  0E7D               	movlw	high _show3_1
  6935  006E64  6E59               	movwf	(??_animation3+1)& (0+255),c
  6936  006E66  50F3               	movf	prodl,w,c
  6937  006E68  2658               	addwf	??_animation3,f,c
  6938  006E6A  50F4               	movf	prodh,w,c
  6939  006E6C  2259               	addwfc	??_animation3+1,f,c
  6940  006E6E  505C               	movf	animation3@j,w,c
  6941  006E70  0D01               	mullw	1
  6942  006E72  50F3               	movf	prodl,w,c
  6943  006E74  2658               	addwf	??_animation3,f,c
  6944  006E76  50F4               	movf	prodh,w,c
  6945  006E78  2259               	addwfc	??_animation3+1,f,c
  6946  006E7A  C058  FFF6         	movff	??_animation3,tblptrl
  6947  006E7E  C059  FFF7         	movff	??_animation3+1,tblptrh
  6948  006E82                     	if	0	;tblptru may be non-zero
  6949  006E82                     	endif
  6950  006E82                     	if	0	;tblptru may be non-zero
  6951  006E82                     	endif
  6952  006E82  0008               	tblrd		*
  6953  006E84  50F5               	movf	tablat,w,c
  6954  006E86  0A64               	xorlw	100
  6955  006E88  B4D8               	btfsc	status,2,c
  6956  006E8A  D018               	goto	l303
  6957                           
  6958                           ;newmain.c: 721: clr_led(show3_1[i][j]);
  6959  006E8C  505B               	movf	animation3@i,w,c
  6960  006E8E  0D08               	mullw	8
  6961  006E90  0EE9               	movlw	low _show3_1
  6962  006E92  6E58               	movwf	??_animation3& (0+255),c
  6963  006E94  0E7D               	movlw	high _show3_1
  6964  006E96  6E59               	movwf	(??_animation3+1)& (0+255),c
  6965  006E98  50F3               	movf	prodl,w,c
  6966  006E9A  2658               	addwf	??_animation3,f,c
  6967  006E9C  50F4               	movf	prodh,w,c
  6968  006E9E  2259               	addwfc	??_animation3+1,f,c
  6969  006EA0  505C               	movf	animation3@j,w,c
  6970  006EA2  0D01               	mullw	1
  6971  006EA4  50F3               	movf	prodl,w,c
  6972  006EA6  2658               	addwf	??_animation3,f,c
  6973  006EA8  50F4               	movf	prodh,w,c
  6974  006EAA  2259               	addwfc	??_animation3+1,f,c
  6975  006EAC  C058  FFF6         	movff	??_animation3,tblptrl
  6976  006EB0  C059  FFF7         	movff	??_animation3+1,tblptrh
  6977  006EB4                     	if	0	;tblptru may be non-zero
  6978  006EB4                     	endif
  6979  006EB4                     	if	0	;tblptru may be non-zero
  6980  006EB4                     	endif
  6981  006EB4  0008               	tblrd		*
  6982  006EB6  50F5               	movf	tablat,w,c
  6983  006EB8  EC59  F029         	call	_clr_led
  6984  006EBC                     l303:
  6985  006EBC  2A5C               	incf	animation3@j,f,c
  6986  006EBE  D7C9               	goto	l3727
  6987  006EC0                     u4350:
  6988                           
  6989                           ;newmain.c: 722: }
  6990                           ;newmain.c: 723: write_display();
  6991  006EC0  ECB4  F029         	call	_write_display	;wreg free
  6992  006EC4  2A5B               	incf	animation3@i,f,c
  6993  006EC6  D77C               	goto	l3703
  6994  006EC8                     l295:
  6995  006EC8  045A               	decf	animation3@m,w,c
  6996  006ECA  A4D8               	btfss	status,2,c
  6997  006ECC  D086               	goto	l305
  6998                           
  6999                           ;newmain.c: 726: for (i = 0; i < 7; i++) {
  7000  006ECE  0E00               	movlw	0
  7001  006ED0  6E5B               	movwf	animation3@i,c
  7002  006ED2                     l3749:
  7003  006ED2  0E06               	movlw	6
  7004  006ED4  645B               	cpfsgt	animation3@i,c
  7005  006ED6  D001               	goto	l306
  7006  006ED8  0012               	return	
  7007  006EDA                     l306:
  7008                           
  7009                           ;newmain.c: 727: for (j = 0; j < 6; j++) {
  7010  006EDA  0E00               	movlw	0
  7011  006EDC  6E5C               	movwf	animation3@j,c
  7012  006EDE                     l3755:
  7013  006EDE  0E05               	movlw	5
  7014  006EE0  645C               	cpfsgt	animation3@j,c
  7015  006EE2  D001               	goto	l308
  7016  006EE4  D033               	goto	u4410
  7017  006EE6                     l308:
  7018                           
  7019                           ;newmain.c: 728: if (show3_2[i][j] != 100)
  7020  006EE6  505B               	movf	animation3@i,w,c
  7021  006EE8  0D06               	mullw	6
  7022  006EEA  0E39               	movlw	low _show3_2
  7023  006EEC  6E58               	movwf	??_animation3& (0+255),c
  7024  006EEE  0E7F               	movlw	high _show3_2
  7025  006EF0  6E59               	movwf	(??_animation3+1)& (0+255),c
  7026  006EF2  50F3               	movf	prodl,w,c
  7027  006EF4  2658               	addwf	??_animation3,f,c
  7028  006EF6  50F4               	movf	prodh,w,c
  7029  006EF8  2259               	addwfc	??_animation3+1,f,c
  7030  006EFA  505C               	movf	animation3@j,w,c
  7031  006EFC  0D01               	mullw	1
  7032  006EFE  50F3               	movf	prodl,w,c
  7033  006F00  2658               	addwf	??_animation3,f,c
  7034  006F02  50F4               	movf	prodh,w,c
  7035  006F04  2259               	addwfc	??_animation3+1,f,c
  7036  006F06  C058  FFF6         	movff	??_animation3,tblptrl
  7037  006F0A  C059  FFF7         	movff	??_animation3+1,tblptrh
  7038  006F0E                     	if	0	;tblptru may be non-zero
  7039  006F0E                     	endif
  7040  006F0E                     	if	0	;tblptru may be non-zero
  7041  006F0E                     	endif
  7042  006F0E  0008               	tblrd		*
  7043  006F10  50F5               	movf	tablat,w,c
  7044  006F12  0A64               	xorlw	100
  7045  006F14  B4D8               	btfsc	status,2,c
  7046  006F16  D018               	goto	l310
  7047                           
  7048                           ;newmain.c: 729: set_led(show3_2[i][j]);
  7049  006F18  505B               	movf	animation3@i,w,c
  7050  006F1A  0D06               	mullw	6
  7051  006F1C  0E39               	movlw	low _show3_2
  7052  006F1E  6E58               	movwf	??_animation3& (0+255),c
  7053  006F20  0E7F               	movlw	high _show3_2
  7054  006F22  6E59               	movwf	(??_animation3+1)& (0+255),c
  7055  006F24  50F3               	movf	prodl,w,c
  7056  006F26  2658               	addwf	??_animation3,f,c
  7057  006F28  50F4               	movf	prodh,w,c
  7058  006F2A  2259               	addwfc	??_animation3+1,f,c
  7059  006F2C  505C               	movf	animation3@j,w,c
  7060  006F2E  0D01               	mullw	1
  7061  006F30  50F3               	movf	prodl,w,c
  7062  006F32  2658               	addwf	??_animation3,f,c
  7063  006F34  50F4               	movf	prodh,w,c
  7064  006F36  2259               	addwfc	??_animation3+1,f,c
  7065  006F38  C058  FFF6         	movff	??_animation3,tblptrl
  7066  006F3C  C059  FFF7         	movff	??_animation3+1,tblptrh
  7067  006F40                     	if	0	;tblptru may be non-zero
  7068  006F40                     	endif
  7069  006F40                     	if	0	;tblptru may be non-zero
  7070  006F40                     	endif
  7071  006F40  0008               	tblrd		*
  7072  006F42  50F5               	movf	tablat,w,c
  7073  006F44  EC02  F029         	call	_set_led
  7074  006F48                     l310:
  7075  006F48  2A5C               	incf	animation3@j,f,c
  7076  006F4A  D7C9               	goto	l3755
  7077  006F4C                     u4410:
  7078                           
  7079                           ;newmain.c: 730: }
  7080                           ;newmain.c: 731: write_display();
  7081  006F4C  ECB4  F029         	call	_write_display	;wreg free
  7082                           
  7083                           ;newmain.c: 732: _delay((unsigned long)((30)*(4000000/4000.0)));
  7084  006F50  0E27               	movlw	39
  7085  006F52  6E58               	movwf	??_animation3& (0+255),c
  7086  006F54  0EF5               	movlw	245
  7087  006F56                     u6667:
  7088  006F56  2EE8               	decfsz	wreg,f,c
  7089  006F58  D7FE               	bra	u6667
  7090  006F5A  2E58               	decfsz	??_animation3& (0+255),f,c
  7091  006F5C  D7FC               	bra	u6667
  7092  006F5E  F000               	nop	
  7093                           
  7094                           ;newmain.c: 733: for (j = 0; j < 6; j++) {
  7095  006F60  0E00               	movlw	0
  7096  006F62  6E5C               	movwf	animation3@j,c
  7097  006F64                     l3773:
  7098  006F64  0E05               	movlw	5
  7099  006F66  645C               	cpfsgt	animation3@j,c
  7100  006F68  D001               	goto	l311
  7101  006F6A  D033               	goto	u4440
  7102  006F6C                     l311:
  7103                           
  7104                           ;newmain.c: 734: if (show3_2[i][j] != 100)
  7105  006F6C  505B               	movf	animation3@i,w,c
  7106  006F6E  0D06               	mullw	6
  7107  006F70  0E39               	movlw	low _show3_2
  7108  006F72  6E58               	movwf	??_animation3& (0+255),c
  7109  006F74  0E7F               	movlw	high _show3_2
  7110  006F76  6E59               	movwf	(??_animation3+1)& (0+255),c
  7111  006F78  50F3               	movf	prodl,w,c
  7112  006F7A  2658               	addwf	??_animation3,f,c
  7113  006F7C  50F4               	movf	prodh,w,c
  7114  006F7E  2259               	addwfc	??_animation3+1,f,c
  7115  006F80  505C               	movf	animation3@j,w,c
  7116  006F82  0D01               	mullw	1
  7117  006F84  50F3               	movf	prodl,w,c
  7118  006F86  2658               	addwf	??_animation3,f,c
  7119  006F88  50F4               	movf	prodh,w,c
  7120  006F8A  2259               	addwfc	??_animation3+1,f,c
  7121  006F8C  C058  FFF6         	movff	??_animation3,tblptrl
  7122  006F90  C059  FFF7         	movff	??_animation3+1,tblptrh
  7123  006F94                     	if	0	;tblptru may be non-zero
  7124  006F94                     	endif
  7125  006F94                     	if	0	;tblptru may be non-zero
  7126  006F94                     	endif
  7127  006F94  0008               	tblrd		*
  7128  006F96  50F5               	movf	tablat,w,c
  7129  006F98  0A64               	xorlw	100
  7130  006F9A  B4D8               	btfsc	status,2,c
  7131  006F9C  D018               	goto	l313
  7132                           
  7133                           ;newmain.c: 735: clr_led(show3_2[i][j]);
  7134  006F9E  505B               	movf	animation3@i,w,c
  7135  006FA0  0D06               	mullw	6
  7136  006FA2  0E39               	movlw	low _show3_2
  7137  006FA4  6E58               	movwf	??_animation3& (0+255),c
  7138  006FA6  0E7F               	movlw	high _show3_2
  7139  006FA8  6E59               	movwf	(??_animation3+1)& (0+255),c
  7140  006FAA  50F3               	movf	prodl,w,c
  7141  006FAC  2658               	addwf	??_animation3,f,c
  7142  006FAE  50F4               	movf	prodh,w,c
  7143  006FB0  2259               	addwfc	??_animation3+1,f,c
  7144  006FB2  505C               	movf	animation3@j,w,c
  7145  006FB4  0D01               	mullw	1
  7146  006FB6  50F3               	movf	prodl,w,c
  7147  006FB8  2658               	addwf	??_animation3,f,c
  7148  006FBA  50F4               	movf	prodh,w,c
  7149  006FBC  2259               	addwfc	??_animation3+1,f,c
  7150  006FBE  C058  FFF6         	movff	??_animation3,tblptrl
  7151  006FC2  C059  FFF7         	movff	??_animation3+1,tblptrh
  7152  006FC6                     	if	0	;tblptru may be non-zero
  7153  006FC6                     	endif
  7154  006FC6                     	if	0	;tblptru may be non-zero
  7155  006FC6                     	endif
  7156  006FC6  0008               	tblrd		*
  7157  006FC8  50F5               	movf	tablat,w,c
  7158  006FCA  EC59  F029         	call	_clr_led
  7159  006FCE                     l313:
  7160  006FCE  2A5C               	incf	animation3@j,f,c
  7161  006FD0  D7C9               	goto	l3773
  7162  006FD2                     u4440:
  7163                           
  7164                           ;newmain.c: 736: }
  7165                           ;newmain.c: 737: write_display();
  7166  006FD2  ECB4  F029         	call	_write_display	;wreg free
  7167  006FD6  2A5B               	incf	animation3@i,f,c
  7168  006FD8  D77C               	goto	l3749
  7169  006FDA                     l305:
  7170  006FDA  0E02               	movlw	2
  7171  006FDC  185A               	xorwf	animation3@m,w,c
  7172  006FDE  A4D8               	btfss	status,2,c
  7173  006FE0  D086               	goto	l315
  7174                           
  7175                           ;newmain.c: 740: for (i = 0; i < 5; i++) {
  7176  006FE2  0E00               	movlw	0
  7177  006FE4  6E5B               	movwf	animation3@i,c
  7178  006FE6                     l3795:
  7179  006FE6  0E04               	movlw	4
  7180  006FE8  645B               	cpfsgt	animation3@i,c
  7181  006FEA  D001               	goto	l316
  7182  006FEC  0012               	return	
  7183  006FEE                     l316:
  7184                           
  7185                           ;newmain.c: 741: for (j = 0; j < 4; j++) {
  7186  006FEE  0E00               	movlw	0
  7187  006FF0  6E5C               	movwf	animation3@j,c
  7188  006FF2                     l3801:
  7189  006FF2  0E03               	movlw	3
  7190  006FF4  645C               	cpfsgt	animation3@j,c
  7191  006FF6  D001               	goto	l318
  7192  006FF8  D033               	goto	u4500
  7193  006FFA                     l318:
  7194                           
  7195                           ;newmain.c: 742: if (show3_3[i][j] != 100)
  7196  006FFA  505B               	movf	animation3@i,w,c
  7197  006FFC  0D04               	mullw	4
  7198  006FFE  0ECB               	movlw	low _show3_3
  7199  007000  6E58               	movwf	??_animation3& (0+255),c
  7200  007002  0E7F               	movlw	high _show3_3
  7201  007004  6E59               	movwf	(??_animation3+1)& (0+255),c
  7202  007006  50F3               	movf	prodl,w,c
  7203  007008  2658               	addwf	??_animation3,f,c
  7204  00700A  50F4               	movf	prodh,w,c
  7205  00700C  2259               	addwfc	??_animation3+1,f,c
  7206  00700E  505C               	movf	animation3@j,w,c
  7207  007010  0D01               	mullw	1
  7208  007012  50F3               	movf	prodl,w,c
  7209  007014  2658               	addwf	??_animation3,f,c
  7210  007016  50F4               	movf	prodh,w,c
  7211  007018  2259               	addwfc	??_animation3+1,f,c
  7212  00701A  C058  FFF6         	movff	??_animation3,tblptrl
  7213  00701E  C059  FFF7         	movff	??_animation3+1,tblptrh
  7214  007022                     	if	0	;tblptru may be non-zero
  7215  007022                     	endif
  7216  007022                     	if	0	;tblptru may be non-zero
  7217  007022                     	endif
  7218  007022  0008               	tblrd		*
  7219  007024  50F5               	movf	tablat,w,c
  7220  007026  0A64               	xorlw	100
  7221  007028  B4D8               	btfsc	status,2,c
  7222  00702A  D018               	goto	l320
  7223                           
  7224                           ;newmain.c: 743: set_led(show3_3[i][j]);
  7225  00702C  505B               	movf	animation3@i,w,c
  7226  00702E  0D04               	mullw	4
  7227  007030  0ECB               	movlw	low _show3_3
  7228  007032  6E58               	movwf	??_animation3& (0+255),c
  7229  007034  0E7F               	movlw	high _show3_3
  7230  007036  6E59               	movwf	(??_animation3+1)& (0+255),c
  7231  007038  50F3               	movf	prodl,w,c
  7232  00703A  2658               	addwf	??_animation3,f,c
  7233  00703C  50F4               	movf	prodh,w,c
  7234  00703E  2259               	addwfc	??_animation3+1,f,c
  7235  007040  505C               	movf	animation3@j,w,c
  7236  007042  0D01               	mullw	1
  7237  007044  50F3               	movf	prodl,w,c
  7238  007046  2658               	addwf	??_animation3,f,c
  7239  007048  50F4               	movf	prodh,w,c
  7240  00704A  2259               	addwfc	??_animation3+1,f,c
  7241  00704C  C058  FFF6         	movff	??_animation3,tblptrl
  7242  007050  C059  FFF7         	movff	??_animation3+1,tblptrh
  7243  007054                     	if	0	;tblptru may be non-zero
  7244  007054                     	endif
  7245  007054                     	if	0	;tblptru may be non-zero
  7246  007054                     	endif
  7247  007054  0008               	tblrd		*
  7248  007056  50F5               	movf	tablat,w,c
  7249  007058  EC02  F029         	call	_set_led
  7250  00705C                     l320:
  7251  00705C  2A5C               	incf	animation3@j,f,c
  7252  00705E  D7C9               	goto	l3801
  7253  007060                     u4500:
  7254                           
  7255                           ;newmain.c: 744: }
  7256                           ;newmain.c: 745: write_display();
  7257  007060  ECB4  F029         	call	_write_display	;wreg free
  7258                           
  7259                           ;newmain.c: 746: _delay((unsigned long)((30)*(4000000/4000.0)));
  7260  007064  0E27               	movlw	39
  7261  007066  6E58               	movwf	??_animation3& (0+255),c
  7262  007068  0EF5               	movlw	245
  7263  00706A                     u6677:
  7264  00706A  2EE8               	decfsz	wreg,f,c
  7265  00706C  D7FE               	bra	u6677
  7266  00706E  2E58               	decfsz	??_animation3& (0+255),f,c
  7267  007070  D7FC               	bra	u6677
  7268  007072  F000               	nop	
  7269                           
  7270                           ;newmain.c: 747: for (j = 0; j < 4; j++) {
  7271  007074  0E00               	movlw	0
  7272  007076  6E5C               	movwf	animation3@j,c
  7273  007078                     l3819:
  7274  007078  0E03               	movlw	3
  7275  00707A  645C               	cpfsgt	animation3@j,c
  7276  00707C  D001               	goto	l321
  7277  00707E  D033               	goto	u4530
  7278  007080                     l321:
  7279                           
  7280                           ;newmain.c: 748: if (show3_3[i][j] != 100)
  7281  007080  505B               	movf	animation3@i,w,c
  7282  007082  0D04               	mullw	4
  7283  007084  0ECB               	movlw	low _show3_3
  7284  007086  6E58               	movwf	??_animation3& (0+255),c
  7285  007088  0E7F               	movlw	high _show3_3
  7286  00708A  6E59               	movwf	(??_animation3+1)& (0+255),c
  7287  00708C  50F3               	movf	prodl,w,c
  7288  00708E  2658               	addwf	??_animation3,f,c
  7289  007090  50F4               	movf	prodh,w,c
  7290  007092  2259               	addwfc	??_animation3+1,f,c
  7291  007094  505C               	movf	animation3@j,w,c
  7292  007096  0D01               	mullw	1
  7293  007098  50F3               	movf	prodl,w,c
  7294  00709A  2658               	addwf	??_animation3,f,c
  7295  00709C  50F4               	movf	prodh,w,c
  7296  00709E  2259               	addwfc	??_animation3+1,f,c
  7297  0070A0  C058  FFF6         	movff	??_animation3,tblptrl
  7298  0070A4  C059  FFF7         	movff	??_animation3+1,tblptrh
  7299  0070A8                     	if	0	;tblptru may be non-zero
  7300  0070A8                     	endif
  7301  0070A8                     	if	0	;tblptru may be non-zero
  7302  0070A8                     	endif
  7303  0070A8  0008               	tblrd		*
  7304  0070AA  50F5               	movf	tablat,w,c
  7305  0070AC  0A64               	xorlw	100
  7306  0070AE  B4D8               	btfsc	status,2,c
  7307  0070B0  D018               	goto	l323
  7308                           
  7309                           ;newmain.c: 749: clr_led(show3_3[i][j]);
  7310  0070B2  505B               	movf	animation3@i,w,c
  7311  0070B4  0D04               	mullw	4
  7312  0070B6  0ECB               	movlw	low _show3_3
  7313  0070B8  6E58               	movwf	??_animation3& (0+255),c
  7314  0070BA  0E7F               	movlw	high _show3_3
  7315  0070BC  6E59               	movwf	(??_animation3+1)& (0+255),c
  7316  0070BE  50F3               	movf	prodl,w,c
  7317  0070C0  2658               	addwf	??_animation3,f,c
  7318  0070C2  50F4               	movf	prodh,w,c
  7319  0070C4  2259               	addwfc	??_animation3+1,f,c
  7320  0070C6  505C               	movf	animation3@j,w,c
  7321  0070C8  0D01               	mullw	1
  7322  0070CA  50F3               	movf	prodl,w,c
  7323  0070CC  2658               	addwf	??_animation3,f,c
  7324  0070CE  50F4               	movf	prodh,w,c
  7325  0070D0  2259               	addwfc	??_animation3+1,f,c
  7326  0070D2  C058  FFF6         	movff	??_animation3,tblptrl
  7327  0070D6  C059  FFF7         	movff	??_animation3+1,tblptrh
  7328  0070DA                     	if	0	;tblptru may be non-zero
  7329  0070DA                     	endif
  7330  0070DA                     	if	0	;tblptru may be non-zero
  7331  0070DA                     	endif
  7332  0070DA  0008               	tblrd		*
  7333  0070DC  50F5               	movf	tablat,w,c
  7334  0070DE  EC59  F029         	call	_clr_led
  7335  0070E2                     l323:
  7336  0070E2  2A5C               	incf	animation3@j,f,c
  7337  0070E4  D7C9               	goto	l3819
  7338  0070E6                     u4530:
  7339                           
  7340                           ;newmain.c: 750: }
  7341                           ;newmain.c: 751: write_display();
  7342  0070E6  ECB4  F029         	call	_write_display	;wreg free
  7343  0070EA  2A5B               	incf	animation3@i,f,c
  7344  0070EC  D77C               	goto	l3795
  7345  0070EE                     l315:
  7346  0070EE  0E03               	movlw	3
  7347  0070F0  185A               	xorwf	animation3@m,w,c
  7348  0070F2  A4D8               	btfss	status,2,c
  7349  0070F4  0012               	return	
  7350                           
  7351                           ;newmain.c: 755: for (i = 3; i >= 0; i--) {
  7352  0070F6  0E03               	movlw	3
  7353  0070F8  6E5B               	movwf	animation3@i,c
  7354  0070FA                     
  7355                           ;newmain.c: 756: for (j = 0; j < 26; j++) {
  7356  0070FA  0E00               	movlw	0
  7357  0070FC  6E5C               	movwf	animation3@j,c
  7358  0070FE                     l3845:
  7359  0070FE  0E19               	movlw	25
  7360  007100  645C               	cpfsgt	animation3@j,c
  7361  007102  D001               	goto	l328
  7362  007104  D033               	goto	u4580
  7363  007106                     l328:
  7364                           
  7365                           ;newmain.c: 757: if (circle[i][j] != 100)
  7366  007106  505B               	movf	animation3@i,w,c
  7367  007108  0D1A               	mullw	26
  7368  00710A  0EC1               	movlw	low _circle
  7369  00710C  6E58               	movwf	??_animation3& (0+255),c
  7370  00710E  0E7C               	movlw	high _circle
  7371  007110  6E59               	movwf	(??_animation3+1)& (0+255),c
  7372  007112  50F3               	movf	prodl,w,c
  7373  007114  2658               	addwf	??_animation3,f,c
  7374  007116  50F4               	movf	prodh,w,c
  7375  007118  2259               	addwfc	??_animation3+1,f,c
  7376  00711A  505C               	movf	animation3@j,w,c
  7377  00711C  0D01               	mullw	1
  7378  00711E  50F3               	movf	prodl,w,c
  7379  007120  2658               	addwf	??_animation3,f,c
  7380  007122  50F4               	movf	prodh,w,c
  7381  007124  2259               	addwfc	??_animation3+1,f,c
  7382  007126  C058  FFF6         	movff	??_animation3,tblptrl
  7383  00712A  C059  FFF7         	movff	??_animation3+1,tblptrh
  7384  00712E                     	if	0	;tblptru may be non-zero
  7385  00712E                     	endif
  7386  00712E                     	if	0	;tblptru may be non-zero
  7387  00712E                     	endif
  7388  00712E  0008               	tblrd		*
  7389  007130  50F5               	movf	tablat,w,c
  7390  007132  0A64               	xorlw	100
  7391  007134  B4D8               	btfsc	status,2,c
  7392  007136  D018               	goto	l330
  7393                           
  7394                           ;newmain.c: 758: set_led(circle[i][j]);
  7395  007138  505B               	movf	animation3@i,w,c
  7396  00713A  0D1A               	mullw	26
  7397  00713C  0EC1               	movlw	low _circle
  7398  00713E  6E58               	movwf	??_animation3& (0+255),c
  7399  007140  0E7C               	movlw	high _circle
  7400  007142  6E59               	movwf	(??_animation3+1)& (0+255),c
  7401  007144  50F3               	movf	prodl,w,c
  7402  007146  2658               	addwf	??_animation3,f,c
  7403  007148  50F4               	movf	prodh,w,c
  7404  00714A  2259               	addwfc	??_animation3+1,f,c
  7405  00714C  505C               	movf	animation3@j,w,c
  7406  00714E  0D01               	mullw	1
  7407  007150  50F3               	movf	prodl,w,c
  7408  007152  2658               	addwf	??_animation3,f,c
  7409  007154  50F4               	movf	prodh,w,c
  7410  007156  2259               	addwfc	??_animation3+1,f,c
  7411  007158  C058  FFF6         	movff	??_animation3,tblptrl
  7412  00715C  C059  FFF7         	movff	??_animation3+1,tblptrh
  7413  007160                     	if	0	;tblptru may be non-zero
  7414  007160                     	endif
  7415  007160                     	if	0	;tblptru may be non-zero
  7416  007160                     	endif
  7417  007160  0008               	tblrd		*
  7418  007162  50F5               	movf	tablat,w,c
  7419  007164  EC02  F029         	call	_set_led
  7420  007168                     l330:
  7421  007168  2A5C               	incf	animation3@j,f,c
  7422  00716A  D7C9               	goto	l3845
  7423  00716C                     u4580:
  7424                           
  7425                           ;newmain.c: 759: }
  7426                           ;newmain.c: 760: write_display();
  7427  00716C  ECB4  F029         	call	_write_display	;wreg free
  7428                           
  7429                           ;newmain.c: 761: _delay((unsigned long)((30)*(4000000/4000.0)));
  7430  007170  0E27               	movlw	39
  7431  007172  6E58               	movwf	??_animation3& (0+255),c
  7432  007174  0EF5               	movlw	245
  7433  007176                     u6687:
  7434  007176  2EE8               	decfsz	wreg,f,c
  7435  007178  D7FE               	bra	u6687
  7436  00717A  2E58               	decfsz	??_animation3& (0+255),f,c
  7437  00717C  D7FC               	bra	u6687
  7438  00717E  F000               	nop	
  7439                           
  7440                           ;newmain.c: 762: for (j = 0; j < 26; j++) {
  7441  007180  0E00               	movlw	0
  7442  007182  6E5C               	movwf	animation3@j,c
  7443  007184                     l3863:
  7444  007184  0E19               	movlw	25
  7445  007186  645C               	cpfsgt	animation3@j,c
  7446  007188  D001               	goto	l331
  7447  00718A  D033               	goto	u4610
  7448  00718C                     l331:
  7449                           
  7450                           ;newmain.c: 763: if (circle[i][j] != 100)
  7451  00718C  505B               	movf	animation3@i,w,c
  7452  00718E  0D1A               	mullw	26
  7453  007190  0EC1               	movlw	low _circle
  7454  007192  6E58               	movwf	??_animation3& (0+255),c
  7455  007194  0E7C               	movlw	high _circle
  7456  007196  6E59               	movwf	(??_animation3+1)& (0+255),c
  7457  007198  50F3               	movf	prodl,w,c
  7458  00719A  2658               	addwf	??_animation3,f,c
  7459  00719C  50F4               	movf	prodh,w,c
  7460  00719E  2259               	addwfc	??_animation3+1,f,c
  7461  0071A0  505C               	movf	animation3@j,w,c
  7462  0071A2  0D01               	mullw	1
  7463  0071A4  50F3               	movf	prodl,w,c
  7464  0071A6  2658               	addwf	??_animation3,f,c
  7465  0071A8  50F4               	movf	prodh,w,c
  7466  0071AA  2259               	addwfc	??_animation3+1,f,c
  7467  0071AC  C058  FFF6         	movff	??_animation3,tblptrl
  7468  0071B0  C059  FFF7         	movff	??_animation3+1,tblptrh
  7469  0071B4                     	if	0	;tblptru may be non-zero
  7470  0071B4                     	endif
  7471  0071B4                     	if	0	;tblptru may be non-zero
  7472  0071B4                     	endif
  7473  0071B4  0008               	tblrd		*
  7474  0071B6  50F5               	movf	tablat,w,c
  7475  0071B8  0A64               	xorlw	100
  7476  0071BA  B4D8               	btfsc	status,2,c
  7477  0071BC  D018               	goto	l333
  7478                           
  7479                           ;newmain.c: 764: clr_led(circle[i][j]);
  7480  0071BE  505B               	movf	animation3@i,w,c
  7481  0071C0  0D1A               	mullw	26
  7482  0071C2  0EC1               	movlw	low _circle
  7483  0071C4  6E58               	movwf	??_animation3& (0+255),c
  7484  0071C6  0E7C               	movlw	high _circle
  7485  0071C8  6E59               	movwf	(??_animation3+1)& (0+255),c
  7486  0071CA  50F3               	movf	prodl,w,c
  7487  0071CC  2658               	addwf	??_animation3,f,c
  7488  0071CE  50F4               	movf	prodh,w,c
  7489  0071D0  2259               	addwfc	??_animation3+1,f,c
  7490  0071D2  505C               	movf	animation3@j,w,c
  7491  0071D4  0D01               	mullw	1
  7492  0071D6  50F3               	movf	prodl,w,c
  7493  0071D8  2658               	addwf	??_animation3,f,c
  7494  0071DA  50F4               	movf	prodh,w,c
  7495  0071DC  2259               	addwfc	??_animation3+1,f,c
  7496  0071DE  C058  FFF6         	movff	??_animation3,tblptrl
  7497  0071E2  C059  FFF7         	movff	??_animation3+1,tblptrh
  7498  0071E6                     	if	0	;tblptru may be non-zero
  7499  0071E6                     	endif
  7500  0071E6                     	if	0	;tblptru may be non-zero
  7501  0071E6                     	endif
  7502  0071E6  0008               	tblrd		*
  7503  0071E8  50F5               	movf	tablat,w,c
  7504  0071EA  EC59  F029         	call	_clr_led
  7505  0071EE                     l333:
  7506  0071EE  2A5C               	incf	animation3@j,f,c
  7507  0071F0  D7C9               	goto	l3863
  7508  0071F2                     u4610:
  7509                           
  7510                           ;newmain.c: 765: }
  7511                           ;newmain.c: 766: write_display();
  7512  0071F2  ECB4  F029         	call	_write_display	;wreg free
  7513  0071F6  065B               	decf	animation3@i,f,c
  7514  0071F8  D780               	goto	l326
  7515  0071FA                     l3881:
  7516  0071FA  0E02               	movlw	2
  7517  0071FC  645B               	cpfsgt	animation3@i,c
  7518  0071FE  D001               	goto	l334
  7519  007200  0012               	return	
  7520  007202                     l334:
  7521                           
  7522                           ;newmain.c: 770: for (j = 0; j < 26; j++) {
  7523  007202  0E00               	movlw	0
  7524  007204  6E5C               	movwf	animation3@j,c
  7525  007206                     l3887:
  7526  007206  0E19               	movlw	25
  7527  007208  645C               	cpfsgt	animation3@j,c
  7528  00720A  D001               	goto	l336
  7529  00720C  D033               	goto	u4650
  7530  00720E                     l336:
  7531                           
  7532                           ;newmain.c: 771: if (circle[i][j] != 100)
  7533  00720E  505B               	movf	animation3@i,w,c
  7534  007210  0D1A               	mullw	26
  7535  007212  0EC1               	movlw	low _circle
  7536  007214  6E58               	movwf	??_animation3& (0+255),c
  7537  007216  0E7C               	movlw	high _circle
  7538  007218  6E59               	movwf	(??_animation3+1)& (0+255),c
  7539  00721A  50F3               	movf	prodl,w,c
  7540  00721C  2658               	addwf	??_animation3,f,c
  7541  00721E  50F4               	movf	prodh,w,c
  7542  007220  2259               	addwfc	??_animation3+1,f,c
  7543  007222  505C               	movf	animation3@j,w,c
  7544  007224  0D01               	mullw	1
  7545  007226  50F3               	movf	prodl,w,c
  7546  007228  2658               	addwf	??_animation3,f,c
  7547  00722A  50F4               	movf	prodh,w,c
  7548  00722C  2259               	addwfc	??_animation3+1,f,c
  7549  00722E  C058  FFF6         	movff	??_animation3,tblptrl
  7550  007232  C059  FFF7         	movff	??_animation3+1,tblptrh
  7551  007236                     	if	0	;tblptru may be non-zero
  7552  007236                     	endif
  7553  007236                     	if	0	;tblptru may be non-zero
  7554  007236                     	endif
  7555  007236  0008               	tblrd		*
  7556  007238  50F5               	movf	tablat,w,c
  7557  00723A  0A64               	xorlw	100
  7558  00723C  B4D8               	btfsc	status,2,c
  7559  00723E  D018               	goto	l338
  7560                           
  7561                           ;newmain.c: 772: set_led(circle[i][j]);
  7562  007240  505B               	movf	animation3@i,w,c
  7563  007242  0D1A               	mullw	26
  7564  007244  0EC1               	movlw	low _circle
  7565  007246  6E58               	movwf	??_animation3& (0+255),c
  7566  007248  0E7C               	movlw	high _circle
  7567  00724A  6E59               	movwf	(??_animation3+1)& (0+255),c
  7568  00724C  50F3               	movf	prodl,w,c
  7569  00724E  2658               	addwf	??_animation3,f,c
  7570  007250  50F4               	movf	prodh,w,c
  7571  007252  2259               	addwfc	??_animation3+1,f,c
  7572  007254  505C               	movf	animation3@j,w,c
  7573  007256  0D01               	mullw	1
  7574  007258  50F3               	movf	prodl,w,c
  7575  00725A  2658               	addwf	??_animation3,f,c
  7576  00725C  50F4               	movf	prodh,w,c
  7577  00725E  2259               	addwfc	??_animation3+1,f,c
  7578  007260  C058  FFF6         	movff	??_animation3,tblptrl
  7579  007264  C059  FFF7         	movff	??_animation3+1,tblptrh
  7580  007268                     	if	0	;tblptru may be non-zero
  7581  007268                     	endif
  7582  007268                     	if	0	;tblptru may be non-zero
  7583  007268                     	endif
  7584  007268  0008               	tblrd		*
  7585  00726A  50F5               	movf	tablat,w,c
  7586  00726C  EC02  F029         	call	_set_led
  7587  007270                     l338:
  7588  007270  2A5C               	incf	animation3@j,f,c
  7589  007272  D7C9               	goto	l3887
  7590  007274                     u4650:
  7591                           
  7592                           ;newmain.c: 773: }
  7593                           ;newmain.c: 774: write_display();
  7594  007274  ECB4  F029         	call	_write_display	;wreg free
  7595                           
  7596                           ;newmain.c: 775: _delay((unsigned long)((40)*(4000000/4000.0)));
  7597  007278  0E34               	movlw	52
  7598  00727A  6E58               	movwf	??_animation3& (0+255),c
  7599  00727C  0EF2               	movlw	242
  7600  00727E                     u6697:
  7601  00727E  2EE8               	decfsz	wreg,f,c
  7602  007280  D7FE               	bra	u6697
  7603  007282  2E58               	decfsz	??_animation3& (0+255),f,c
  7604  007284  D7FC               	bra	u6697
  7605                           
  7606                           ;newmain.c: 776: for (j = 0; j < 26; j++) {
  7607  007286  0E00               	movlw	0
  7608  007288  6E5C               	movwf	animation3@j,c
  7609  00728A                     l3905:
  7610  00728A  0E19               	movlw	25
  7611  00728C  645C               	cpfsgt	animation3@j,c
  7612  00728E  D001               	goto	l339
  7613  007290  D033               	goto	u4680
  7614  007292                     l339:
  7615                           
  7616                           ;newmain.c: 777: if (circle[i][j] != 100)
  7617  007292  505B               	movf	animation3@i,w,c
  7618  007294  0D1A               	mullw	26
  7619  007296  0EC1               	movlw	low _circle
  7620  007298  6E58               	movwf	??_animation3& (0+255),c
  7621  00729A  0E7C               	movlw	high _circle
  7622  00729C  6E59               	movwf	(??_animation3+1)& (0+255),c
  7623  00729E  50F3               	movf	prodl,w,c
  7624  0072A0  2658               	addwf	??_animation3,f,c
  7625  0072A2  50F4               	movf	prodh,w,c
  7626  0072A4  2259               	addwfc	??_animation3+1,f,c
  7627  0072A6  505C               	movf	animation3@j,w,c
  7628  0072A8  0D01               	mullw	1
  7629  0072AA  50F3               	movf	prodl,w,c
  7630  0072AC  2658               	addwf	??_animation3,f,c
  7631  0072AE  50F4               	movf	prodh,w,c
  7632  0072B0  2259               	addwfc	??_animation3+1,f,c
  7633  0072B2  C058  FFF6         	movff	??_animation3,tblptrl
  7634  0072B6  C059  FFF7         	movff	??_animation3+1,tblptrh
  7635  0072BA                     	if	0	;tblptru may be non-zero
  7636  0072BA                     	endif
  7637  0072BA                     	if	0	;tblptru may be non-zero
  7638  0072BA                     	endif
  7639  0072BA  0008               	tblrd		*
  7640  0072BC  50F5               	movf	tablat,w,c
  7641  0072BE  0A64               	xorlw	100
  7642  0072C0  B4D8               	btfsc	status,2,c
  7643  0072C2  D018               	goto	l341
  7644                           
  7645                           ;newmain.c: 778: clr_led(circle[i][j]);
  7646  0072C4  505B               	movf	animation3@i,w,c
  7647  0072C6  0D1A               	mullw	26
  7648  0072C8  0EC1               	movlw	low _circle
  7649  0072CA  6E58               	movwf	??_animation3& (0+255),c
  7650  0072CC  0E7C               	movlw	high _circle
  7651  0072CE  6E59               	movwf	(??_animation3+1)& (0+255),c
  7652  0072D0  50F3               	movf	prodl,w,c
  7653  0072D2  2658               	addwf	??_animation3,f,c
  7654  0072D4  50F4               	movf	prodh,w,c
  7655  0072D6  2259               	addwfc	??_animation3+1,f,c
  7656  0072D8  505C               	movf	animation3@j,w,c
  7657  0072DA  0D01               	mullw	1
  7658  0072DC  50F3               	movf	prodl,w,c
  7659  0072DE  2658               	addwf	??_animation3,f,c
  7660  0072E0  50F4               	movf	prodh,w,c
  7661  0072E2  2259               	addwfc	??_animation3+1,f,c
  7662  0072E4  C058  FFF6         	movff	??_animation3,tblptrl
  7663  0072E8  C059  FFF7         	movff	??_animation3+1,tblptrh
  7664  0072EC                     	if	0	;tblptru may be non-zero
  7665  0072EC                     	endif
  7666  0072EC                     	if	0	;tblptru may be non-zero
  7667  0072EC                     	endif
  7668  0072EC  0008               	tblrd		*
  7669  0072EE  50F5               	movf	tablat,w,c
  7670  0072F0  EC59  F029         	call	_clr_led
  7671  0072F4                     l341:
  7672  0072F4  2A5C               	incf	animation3@j,f,c
  7673  0072F6  D7C9               	goto	l3905
  7674  0072F8                     u4680:
  7675                           
  7676                           ;newmain.c: 779: }
  7677                           ;newmain.c: 780: write_display();
  7678  0072F8  ECB4  F029         	call	_write_display	;wreg free
  7679  0072FC  2A5B               	incf	animation3@i,f,c
  7680  0072FE  D77D               	goto	l3881
  7681  007300                     __end_of_animation3:
  7682                           	opt stack 0
  7683                           tblptru	equ	0xFF8
  7684                           tblptrh	equ	0xFF7
  7685                           tblptrl	equ	0xFF6
  7686                           tablat	equ	0xFF5
  7687                           prodh	equ	0xFF4
  7688                           prodl	equ	0xFF3
  7689                           postinc0	equ	0xFEE
  7690                           wreg	equ	0xFE8
  7691                           postinc1	equ	0xFE6
  7692                           fsr1h	equ	0xFE2
  7693                           fsr1l	equ	0xFE1
  7694                           indf2	equ	0xFDF
  7695                           postinc2	equ	0xFDE
  7696                           fsr2h	equ	0xFDA
  7697                           fsr2l	equ	0xFD9
  7698                           status	equ	0xFD8
  7699                           
  7700 ;; *************** function _animation2 *****************
  7701 ;; Defined at:
  7702 ;;		line 628 in file "newmain.c"
  7703 ;; Parameters:    Size  Location     Type
  7704 ;;  m               1    wreg     unsigned char 
  7705 ;;  n               1   21[COMRAM] unsigned char 
  7706 ;;  h               1   22[COMRAM] unsigned char 
  7707 ;; Auto vars:     Size  Location     Type
  7708 ;;  m               1   27[COMRAM] unsigned char 
  7709 ;;  row             2   28[COMRAM] int 
  7710 ;;  col             2   25[COMRAM] int 
  7711 ;;  j               1   32[COMRAM] unsigned char 
  7712 ;;  i               1   31[COMRAM] unsigned char 
  7713 ;;  x               1   30[COMRAM] unsigned char 
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  1    wreg      void 
  7716 ;; Registers used:
  7717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7723 ;;      Params:         2       0       0       0       0       0       0
  7724 ;;      Locals:         8       0       0       0       0       0       0
  7725 ;;      Temps:          2       0       0       0       0       0       0
  7726 ;;      Totals:        12       0       0       0       0       0       0
  7727 ;;Total ram usage:       12 bytes
  7728 ;; Hardware stack levels used:    1
  7729 ;; Hardware stack levels required when called:    4
  7730 ;; This function calls:
  7731 ;;		_clr_led
  7732 ;;		_set_led
  7733 ;;		_write_display
  7734 ;; This function is called by:
  7735 ;;		_main
  7736 ;; This function uses a non-reentrant model
  7737 ;;
  7738                           
  7739                           	psect	text13
  7740  0068B2                     __ptext13:
  7741                           	opt stack 0
  7742  0068B2                     _animation2:
  7743                           	opt stack 26
  7744                           
  7745                           ;incstack = 0
  7746                           ;animation2@m stored from wreg
  7747  0068B2  6E5E               	movwf	animation2@m,c
  7748                           
  7749                           ;newmain.c: 629: uint8_t i = 0, j = 0, x = 0;
  7750  0068B4  0E00               	movlw	0
  7751  0068B6  6E62               	movwf	animation2@i,c
  7752  0068B8  0E00               	movlw	0
  7753  0068BA  6E63               	movwf	animation2@j,c
  7754  0068BC  0E00               	movlw	0
  7755  0068BE  6E61               	movwf	animation2@x,c
  7756                           
  7757                           ;newmain.c: 630: int row = 0, col = n % 4;
  7758  0068C0  0E00               	movlw	0
  7759  0068C2  6E60               	movwf	animation2@row+1,c
  7760  0068C4  0E00               	movlw	0
  7761  0068C6  6E5F               	movwf	animation2@row,c
  7762  0068C8  C058  F05A         	movff	animation2@n,??_animation2
  7763  0068CC  0E03               	movlw	3
  7764  0068CE  165A               	andwf	??_animation2,f,c
  7765  0068D0  505A               	movf	??_animation2,w,c
  7766  0068D2  6E5C               	movwf	animation2@col,c
  7767  0068D4  6A5D               	clrf	animation2@col+1,c
  7768                           
  7769                           ;newmain.c: 631: for (i = 0; i < 8; i++) {
  7770  0068D6  0E00               	movlw	0
  7771  0068D8  6E62               	movwf	animation2@i,c
  7772  0068DA                     l3483:
  7773  0068DA  0E07               	movlw	7
  7774  0068DC  6462               	cpfsgt	animation2@i,c
  7775  0068DE  D001               	goto	l248
  7776  0068E0  D030               	goto	u3950
  7777  0068E2                     l248:
  7778                           
  7779                           ;newmain.c: 632: for (j = 0; j < 8; j++) {
  7780  0068E2  0E00               	movlw	0
  7781  0068E4  6E63               	movwf	animation2@j,c
  7782  0068E6                     l3489:
  7783  0068E6  0E07               	movlw	7
  7784  0068E8  6463               	cpfsgt	animation2@j,c
  7785  0068EA  D001               	goto	l250
  7786  0068EC  D028               	goto	u3940
  7787  0068EE                     l250:
  7788                           
  7789                           ;newmain.c: 633: if (h == Buttons[i][j]) {
  7790  0068EE  5062               	movf	animation2@i,w,c
  7791  0068F0  0D08               	mullw	8
  7792  0068F2  0EF9               	movlw	low _Buttons
  7793  0068F4  6E5A               	movwf	??_animation2& (0+255),c
  7794  0068F6  0E7E               	movlw	high _Buttons
  7795  0068F8  6E5B               	movwf	(??_animation2+1)& (0+255),c
  7796  0068FA  50F3               	movf	prodl,w,c
  7797  0068FC  265A               	addwf	??_animation2,f,c
  7798  0068FE  50F4               	movf	prodh,w,c
  7799  006900  225B               	addwfc	??_animation2+1,f,c
  7800  006902  5063               	movf	animation2@j,w,c
  7801  006904  0D01               	mullw	1
  7802  006906  50F3               	movf	prodl,w,c
  7803  006908  265A               	addwf	??_animation2,f,c
  7804  00690A  50F4               	movf	prodh,w,c
  7805  00690C  225B               	addwfc	??_animation2+1,f,c
  7806  00690E  C05A  FFF6         	movff	??_animation2,tblptrl
  7807  006912  C05B  FFF7         	movff	??_animation2+1,tblptrh
  7808  006916                     	if	0	;tblptru may be non-zero
  7809  006916                     	endif
  7810  006916                     	if	0	;tblptru may be non-zero
  7811  006916                     	endif
  7812  006916  0008               	tblrd		*
  7813  006918  50F5               	movf	tablat,w,c
  7814  00691A  1859               	xorwf	animation2@h,w,c
  7815  00691C  A4D8               	btfss	status,2,c
  7816  00691E  D00D               	goto	l252
  7817                           
  7818                           ;newmain.c: 634: row = Buttons[i][0];
  7819  006920  5062               	movf	animation2@i,w,c
  7820  006922  0D08               	mullw	8
  7821  006924  0EF9               	movlw	low _Buttons
  7822  006926  24F3               	addwf	prodl,w,c
  7823  006928  6EF6               	movwf	tblptrl,c
  7824  00692A  0E7E               	movlw	high _Buttons
  7825  00692C  20F4               	addwfc	prodh,w,c
  7826  00692E  6EF7               	movwf	tblptrh,c
  7827  006930                     	if	0	;There are less than 3 active tblptr bytes
  7828  006930                     	endif
  7829  006930  0008               	tblrd		*
  7830  006932  50F5               	movf	tablat,w,c
  7831  006934  6E5F               	movwf	animation2@row,c
  7832  006936  6A60               	clrf	animation2@row+1,c
  7833                           
  7834                           ;newmain.c: 635: break;
  7835  006938  D002               	goto	u3940
  7836  00693A                     l252:
  7837  00693A  2A63               	incf	animation2@j,f,c
  7838  00693C  D7D4               	goto	l3489
  7839  00693E                     u3940:
  7840  00693E  2A62               	incf	animation2@i,f,c
  7841  006940  D7CC               	goto	l3483
  7842  006942                     u3950:
  7843                           
  7844                           ;newmain.c: 636: }
  7845                           ;newmain.c: 637: }
  7846                           ;newmain.c: 638: }
  7847                           ;newmain.c: 640: if (m == 0) {
  7848  006942  505E               	movf	animation2@m,w,c
  7849  006944  A4D8               	btfss	status,2,c
  7850  006946  D08C               	goto	l253
  7851                           
  7852                           ;newmain.c: 641: for (i = col; i < 8; i++) {
  7853  006948  C05C  F062         	movff	animation2@col,animation2@i
  7854  00694C                     l3509:
  7855  00694C  0E07               	movlw	7
  7856  00694E  6462               	cpfsgt	animation2@i,c
  7857  006950  D001               	goto	l254
  7858  006952  0012               	return	
  7859  006954                     l254:
  7860                           
  7861                           ;newmain.c: 642: for (j = 0; j < 3; j++)
  7862  006954  0E00               	movlw	0
  7863  006956  6E63               	movwf	animation2@j,c
  7864  006958                     l3515:
  7865  006958  0E02               	movlw	2
  7866  00695A  6463               	cpfsgt	animation2@j,c
  7867  00695C  D001               	goto	l256
  7868  00695E  D036               	goto	u4000
  7869  006960                     l256:
  7870                           
  7871                           ;newmain.c: 643: if (horizental_flash[i][j] != 100) {
  7872  006960  5062               	movf	animation2@i,w,c
  7873  006962  0D03               	mullw	3
  7874  006964  0EB3               	movlw	low _horizental_flash
  7875  006966  6E5A               	movwf	??_animation2& (0+255),c
  7876  006968  0E7F               	movlw	high _horizental_flash
  7877  00696A  6E5B               	movwf	(??_animation2+1)& (0+255),c
  7878  00696C  50F3               	movf	prodl,w,c
  7879  00696E  265A               	addwf	??_animation2,f,c
  7880  006970  50F4               	movf	prodh,w,c
  7881  006972  225B               	addwfc	??_animation2+1,f,c
  7882  006974  5063               	movf	animation2@j,w,c
  7883  006976  0D01               	mullw	1
  7884  006978  50F3               	movf	prodl,w,c
  7885  00697A  265A               	addwf	??_animation2,f,c
  7886  00697C  50F4               	movf	prodh,w,c
  7887  00697E  225B               	addwfc	??_animation2+1,f,c
  7888  006980  C05A  FFF6         	movff	??_animation2,tblptrl
  7889  006984  C05B  FFF7         	movff	??_animation2+1,tblptrh
  7890  006988                     	if	0	;tblptru may be non-zero
  7891  006988                     	endif
  7892  006988                     	if	0	;tblptru may be non-zero
  7893  006988                     	endif
  7894  006988  0008               	tblrd		*
  7895  00698A  50F5               	movf	tablat,w,c
  7896  00698C  0A64               	xorlw	100
  7897  00698E  B4D8               	btfsc	status,2,c
  7898  006990  D01B               	goto	l258
  7899                           
  7900                           ;newmain.c: 644: x = horizental_flash[i][j] + row;
  7901  006992  5062               	movf	animation2@i,w,c
  7902  006994  0D03               	mullw	3
  7903  006996  0EB3               	movlw	low _horizental_flash
  7904  006998  6E5A               	movwf	??_animation2& (0+255),c
  7905  00699A  0E7F               	movlw	high _horizental_flash
  7906  00699C  6E5B               	movwf	(??_animation2+1)& (0+255),c
  7907  00699E  50F3               	movf	prodl,w,c
  7908  0069A0  265A               	addwf	??_animation2,f,c
  7909  0069A2  50F4               	movf	prodh,w,c
  7910  0069A4  225B               	addwfc	??_animation2+1,f,c
  7911  0069A6  5063               	movf	animation2@j,w,c
  7912  0069A8  0D01               	mullw	1
  7913  0069AA  50F3               	movf	prodl,w,c
  7914  0069AC  265A               	addwf	??_animation2,f,c
  7915  0069AE  50F4               	movf	prodh,w,c
  7916  0069B0  225B               	addwfc	??_animation2+1,f,c
  7917  0069B2  C05A  FFF6         	movff	??_animation2,tblptrl
  7918  0069B6  C05B  FFF7         	movff	??_animation2+1,tblptrh
  7919  0069BA                     	if	0	;tblptru may be non-zero
  7920  0069BA                     	endif
  7921  0069BA                     	if	0	;tblptru may be non-zero
  7922  0069BA                     	endif
  7923  0069BA  0008               	tblrd		*
  7924  0069BC  50F5               	movf	tablat,w,c
  7925  0069BE  245F               	addwf	animation2@row,w,c
  7926  0069C0  6E61               	movwf	animation2@x,c
  7927                           
  7928                           ;newmain.c: 645: set_led(x);
  7929  0069C2  5061               	movf	animation2@x,w,c
  7930  0069C4  EC02  F029         	call	_set_led
  7931  0069C8                     l258:
  7932  0069C8  2A63               	incf	animation2@j,f,c
  7933  0069CA  D7C6               	goto	l3515
  7934  0069CC                     u4000:
  7935                           
  7936                           ;newmain.c: 646: }
  7937                           ;newmain.c: 647: write_display();
  7938  0069CC  ECB4  F029         	call	_write_display	;wreg free
  7939                           
  7940                           ;newmain.c: 648: _delay((unsigned long)((30)*(4000000/4000.0)));
  7941  0069D0  0E27               	movlw	39
  7942  0069D2  6E5A               	movwf	??_animation2& (0+255),c
  7943  0069D4  0EF5               	movlw	245
  7944  0069D6                     u6707:
  7945  0069D6  2EE8               	decfsz	wreg,f,c
  7946  0069D8  D7FE               	bra	u6707
  7947  0069DA  2E5A               	decfsz	??_animation2& (0+255),f,c
  7948  0069DC  D7FC               	bra	u6707
  7949  0069DE  F000               	nop	
  7950                           
  7951                           ;newmain.c: 649: for (j = 0; j < 3; j++)
  7952  0069E0  0E00               	movlw	0
  7953  0069E2  6E63               	movwf	animation2@j,c
  7954  0069E4                     l3535:
  7955  0069E4  0E02               	movlw	2
  7956  0069E6  6463               	cpfsgt	animation2@j,c
  7957  0069E8  D001               	goto	l259
  7958  0069EA  D036               	goto	u4030
  7959  0069EC                     l259:
  7960                           
  7961                           ;newmain.c: 650: if (horizental_flash[i][j] != 100) {
  7962  0069EC  5062               	movf	animation2@i,w,c
  7963  0069EE  0D03               	mullw	3
  7964  0069F0  0EB3               	movlw	low _horizental_flash
  7965  0069F2  6E5A               	movwf	??_animation2& (0+255),c
  7966  0069F4  0E7F               	movlw	high _horizental_flash
  7967  0069F6  6E5B               	movwf	(??_animation2+1)& (0+255),c
  7968  0069F8  50F3               	movf	prodl,w,c
  7969  0069FA  265A               	addwf	??_animation2,f,c
  7970  0069FC  50F4               	movf	prodh,w,c
  7971  0069FE  225B               	addwfc	??_animation2+1,f,c
  7972  006A00  5063               	movf	animation2@j,w,c
  7973  006A02  0D01               	mullw	1
  7974  006A04  50F3               	movf	prodl,w,c
  7975  006A06  265A               	addwf	??_animation2,f,c
  7976  006A08  50F4               	movf	prodh,w,c
  7977  006A0A  225B               	addwfc	??_animation2+1,f,c
  7978  006A0C  C05A  FFF6         	movff	??_animation2,tblptrl
  7979  006A10  C05B  FFF7         	movff	??_animation2+1,tblptrh
  7980  006A14                     	if	0	;tblptru may be non-zero
  7981  006A14                     	endif
  7982  006A14                     	if	0	;tblptru may be non-zero
  7983  006A14                     	endif
  7984  006A14  0008               	tblrd		*
  7985  006A16  50F5               	movf	tablat,w,c
  7986  006A18  0A64               	xorlw	100
  7987  006A1A  B4D8               	btfsc	status,2,c
  7988  006A1C  D01B               	goto	l261
  7989                           
  7990                           ;newmain.c: 651: x = horizental_flash[i][j] + row;
  7991  006A1E  5062               	movf	animation2@i,w,c
  7992  006A20  0D03               	mullw	3
  7993  006A22  0EB3               	movlw	low _horizental_flash
  7994  006A24  6E5A               	movwf	??_animation2& (0+255),c
  7995  006A26  0E7F               	movlw	high _horizental_flash
  7996  006A28  6E5B               	movwf	(??_animation2+1)& (0+255),c
  7997  006A2A  50F3               	movf	prodl,w,c
  7998  006A2C  265A               	addwf	??_animation2,f,c
  7999  006A2E  50F4               	movf	prodh,w,c
  8000  006A30  225B               	addwfc	??_animation2+1,f,c
  8001  006A32  5063               	movf	animation2@j,w,c
  8002  006A34  0D01               	mullw	1
  8003  006A36  50F3               	movf	prodl,w,c
  8004  006A38  265A               	addwf	??_animation2,f,c
  8005  006A3A  50F4               	movf	prodh,w,c
  8006  006A3C  225B               	addwfc	??_animation2+1,f,c
  8007  006A3E  C05A  FFF6         	movff	??_animation2,tblptrl
  8008  006A42  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8009  006A46                     	if	0	;tblptru may be non-zero
  8010  006A46                     	endif
  8011  006A46                     	if	0	;tblptru may be non-zero
  8012  006A46                     	endif
  8013  006A46  0008               	tblrd		*
  8014  006A48  50F5               	movf	tablat,w,c
  8015  006A4A  245F               	addwf	animation2@row,w,c
  8016  006A4C  6E61               	movwf	animation2@x,c
  8017                           
  8018                           ;newmain.c: 652: clr_led(x);
  8019  006A4E  5061               	movf	animation2@x,w,c
  8020  006A50  EC59  F029         	call	_clr_led
  8021  006A54                     l261:
  8022  006A54  2A63               	incf	animation2@j,f,c
  8023  006A56  D7C6               	goto	l3535
  8024  006A58                     u4030:
  8025                           
  8026                           ;newmain.c: 653: }
  8027                           ;newmain.c: 654: write_display();
  8028  006A58  ECB4  F029         	call	_write_display	;wreg free
  8029  006A5C  2A62               	incf	animation2@i,f,c
  8030  006A5E  D776               	goto	l3509
  8031  006A60                     l253:
  8032  006A60  045E               	decf	animation2@m,w,c
  8033  006A62  A4D8               	btfss	status,2,c
  8034  006A64  D088               	goto	l263
  8035                           
  8036                           ;newmain.c: 657: for (i = col + 2; i >= 0; i--) {
  8037  006A66  505C               	movf	animation2@col,w,c
  8038  006A68  0F02               	addlw	2
  8039  006A6A  6E62               	movwf	animation2@i,c
  8040  006A6C                     
  8041                           ;newmain.c: 658: for (j = 0; j < 3; j++) {
  8042  006A6C  0E00               	movlw	0
  8043  006A6E  6E63               	movwf	animation2@j,c
  8044  006A70                     l3563:
  8045  006A70  0E02               	movlw	2
  8046  006A72  6463               	cpfsgt	animation2@j,c
  8047  006A74  D001               	goto	l266
  8048  006A76  D036               	goto	u4080
  8049  006A78                     l266:
  8050                           
  8051                           ;newmain.c: 659: if (horizental_flash[i][j] != 100) {
  8052  006A78  5062               	movf	animation2@i,w,c
  8053  006A7A  0D03               	mullw	3
  8054  006A7C  0EB3               	movlw	low _horizental_flash
  8055  006A7E  6E5A               	movwf	??_animation2& (0+255),c
  8056  006A80  0E7F               	movlw	high _horizental_flash
  8057  006A82  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8058  006A84  50F3               	movf	prodl,w,c
  8059  006A86  265A               	addwf	??_animation2,f,c
  8060  006A88  50F4               	movf	prodh,w,c
  8061  006A8A  225B               	addwfc	??_animation2+1,f,c
  8062  006A8C  5063               	movf	animation2@j,w,c
  8063  006A8E  0D01               	mullw	1
  8064  006A90  50F3               	movf	prodl,w,c
  8065  006A92  265A               	addwf	??_animation2,f,c
  8066  006A94  50F4               	movf	prodh,w,c
  8067  006A96  225B               	addwfc	??_animation2+1,f,c
  8068  006A98  C05A  FFF6         	movff	??_animation2,tblptrl
  8069  006A9C  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8070  006AA0                     	if	0	;tblptru may be non-zero
  8071  006AA0                     	endif
  8072  006AA0                     	if	0	;tblptru may be non-zero
  8073  006AA0                     	endif
  8074  006AA0  0008               	tblrd		*
  8075  006AA2  50F5               	movf	tablat,w,c
  8076  006AA4  0A64               	xorlw	100
  8077  006AA6  B4D8               	btfsc	status,2,c
  8078  006AA8  D01B               	goto	l268
  8079                           
  8080                           ;newmain.c: 660: x = horizental_flash[i][j] + row;
  8081  006AAA  5062               	movf	animation2@i,w,c
  8082  006AAC  0D03               	mullw	3
  8083  006AAE  0EB3               	movlw	low _horizental_flash
  8084  006AB0  6E5A               	movwf	??_animation2& (0+255),c
  8085  006AB2  0E7F               	movlw	high _horizental_flash
  8086  006AB4  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8087  006AB6  50F3               	movf	prodl,w,c
  8088  006AB8  265A               	addwf	??_animation2,f,c
  8089  006ABA  50F4               	movf	prodh,w,c
  8090  006ABC  225B               	addwfc	??_animation2+1,f,c
  8091  006ABE  5063               	movf	animation2@j,w,c
  8092  006AC0  0D01               	mullw	1
  8093  006AC2  50F3               	movf	prodl,w,c
  8094  006AC4  265A               	addwf	??_animation2,f,c
  8095  006AC6  50F4               	movf	prodh,w,c
  8096  006AC8  225B               	addwfc	??_animation2+1,f,c
  8097  006ACA  C05A  FFF6         	movff	??_animation2,tblptrl
  8098  006ACE  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8099  006AD2                     	if	0	;tblptru may be non-zero
  8100  006AD2                     	endif
  8101  006AD2                     	if	0	;tblptru may be non-zero
  8102  006AD2                     	endif
  8103  006AD2  0008               	tblrd		*
  8104  006AD4  50F5               	movf	tablat,w,c
  8105  006AD6  245F               	addwf	animation2@row,w,c
  8106  006AD8  6E61               	movwf	animation2@x,c
  8107                           
  8108                           ;newmain.c: 661: set_led(x);
  8109  006ADA  5061               	movf	animation2@x,w,c
  8110  006ADC  EC02  F029         	call	_set_led
  8111  006AE0                     l268:
  8112  006AE0  2A63               	incf	animation2@j,f,c
  8113  006AE2  D7C6               	goto	l3563
  8114  006AE4                     u4080:
  8115                           
  8116                           ;newmain.c: 662: }
  8117                           ;newmain.c: 663: }
  8118                           ;newmain.c: 664: write_display();
  8119  006AE4  ECB4  F029         	call	_write_display	;wreg free
  8120                           
  8121                           ;newmain.c: 665: _delay((unsigned long)((40)*(4000000/4000.0)));
  8122  006AE8  0E34               	movlw	52
  8123  006AEA  6E5A               	movwf	??_animation2& (0+255),c
  8124  006AEC  0EF2               	movlw	242
  8125  006AEE                     u6717:
  8126  006AEE  2EE8               	decfsz	wreg,f,c
  8127  006AF0  D7FE               	bra	u6717
  8128  006AF2  2E5A               	decfsz	??_animation2& (0+255),f,c
  8129  006AF4  D7FC               	bra	u6717
  8130                           
  8131                           ;newmain.c: 666: for (j = 0; j < 3; j++)
  8132  006AF6  0E00               	movlw	0
  8133  006AF8  6E63               	movwf	animation2@j,c
  8134  006AFA                     l3583:
  8135  006AFA  0E02               	movlw	2
  8136  006AFC  6463               	cpfsgt	animation2@j,c
  8137  006AFE  D001               	goto	l269
  8138  006B00  D036               	goto	u4110
  8139  006B02                     l269:
  8140                           
  8141                           ;newmain.c: 667: if (horizental_flash[i][j] != 100) {
  8142  006B02  5062               	movf	animation2@i,w,c
  8143  006B04  0D03               	mullw	3
  8144  006B06  0EB3               	movlw	low _horizental_flash
  8145  006B08  6E5A               	movwf	??_animation2& (0+255),c
  8146  006B0A  0E7F               	movlw	high _horizental_flash
  8147  006B0C  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8148  006B0E  50F3               	movf	prodl,w,c
  8149  006B10  265A               	addwf	??_animation2,f,c
  8150  006B12  50F4               	movf	prodh,w,c
  8151  006B14  225B               	addwfc	??_animation2+1,f,c
  8152  006B16  5063               	movf	animation2@j,w,c
  8153  006B18  0D01               	mullw	1
  8154  006B1A  50F3               	movf	prodl,w,c
  8155  006B1C  265A               	addwf	??_animation2,f,c
  8156  006B1E  50F4               	movf	prodh,w,c
  8157  006B20  225B               	addwfc	??_animation2+1,f,c
  8158  006B22  C05A  FFF6         	movff	??_animation2,tblptrl
  8159  006B26  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8160  006B2A                     	if	0	;tblptru may be non-zero
  8161  006B2A                     	endif
  8162  006B2A                     	if	0	;tblptru may be non-zero
  8163  006B2A                     	endif
  8164  006B2A  0008               	tblrd		*
  8165  006B2C  50F5               	movf	tablat,w,c
  8166  006B2E  0A64               	xorlw	100
  8167  006B30  B4D8               	btfsc	status,2,c
  8168  006B32  D01B               	goto	l271
  8169                           
  8170                           ;newmain.c: 668: x = horizental_flash[i][j] + row;
  8171  006B34  5062               	movf	animation2@i,w,c
  8172  006B36  0D03               	mullw	3
  8173  006B38  0EB3               	movlw	low _horizental_flash
  8174  006B3A  6E5A               	movwf	??_animation2& (0+255),c
  8175  006B3C  0E7F               	movlw	high _horizental_flash
  8176  006B3E  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8177  006B40  50F3               	movf	prodl,w,c
  8178  006B42  265A               	addwf	??_animation2,f,c
  8179  006B44  50F4               	movf	prodh,w,c
  8180  006B46  225B               	addwfc	??_animation2+1,f,c
  8181  006B48  5063               	movf	animation2@j,w,c
  8182  006B4A  0D01               	mullw	1
  8183  006B4C  50F3               	movf	prodl,w,c
  8184  006B4E  265A               	addwf	??_animation2,f,c
  8185  006B50  50F4               	movf	prodh,w,c
  8186  006B52  225B               	addwfc	??_animation2+1,f,c
  8187  006B54  C05A  FFF6         	movff	??_animation2,tblptrl
  8188  006B58  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8189  006B5C                     	if	0	;tblptru may be non-zero
  8190  006B5C                     	endif
  8191  006B5C                     	if	0	;tblptru may be non-zero
  8192  006B5C                     	endif
  8193  006B5C  0008               	tblrd		*
  8194  006B5E  50F5               	movf	tablat,w,c
  8195  006B60  245F               	addwf	animation2@row,w,c
  8196  006B62  6E61               	movwf	animation2@x,c
  8197                           
  8198                           ;newmain.c: 669: clr_led(x);
  8199  006B64  5061               	movf	animation2@x,w,c
  8200  006B66  EC59  F029         	call	_clr_led
  8201  006B6A                     l271:
  8202  006B6A  2A63               	incf	animation2@j,f,c
  8203  006B6C  D7C6               	goto	l3583
  8204  006B6E                     u4110:
  8205                           
  8206                           ;newmain.c: 670: }
  8207                           ;newmain.c: 671: write_display();
  8208  006B6E  ECB4  F029         	call	_write_display	;wreg free
  8209  006B72  0662               	decf	animation2@i,f,c
  8210  006B74  D77B               	goto	l264
  8211  006B76                     l263:
  8212  006B76  0E02               	movlw	2
  8213  006B78  185E               	xorwf	animation2@m,w,c
  8214  006B7A  A4D8               	btfss	status,2,c
  8215  006B7C  D08B               	goto	l273
  8216                           
  8217                           ;newmain.c: 674: for (i = col; i < 7; i++) {
  8218  006B7E  C05C  F062         	movff	animation2@col,animation2@i
  8219  006B82                     l3605:
  8220  006B82  0E06               	movlw	6
  8221  006B84  6462               	cpfsgt	animation2@i,c
  8222  006B86  D001               	goto	l274
  8223  006B88  0012               	return	
  8224  006B8A                     l274:
  8225                           
  8226                           ;newmain.c: 675: for (j = 0; j < 3; j++)
  8227  006B8A  0E00               	movlw	0
  8228  006B8C  6E63               	movwf	animation2@j,c
  8229  006B8E                     l3611:
  8230  006B8E  0E02               	movlw	2
  8231  006B90  6463               	cpfsgt	animation2@j,c
  8232  006B92  D001               	goto	l276
  8233  006B94  D036               	goto	u4160
  8234  006B96                     l276:
  8235                           
  8236                           ;newmain.c: 676: if (horizental_flash[i][j] != 100) {
  8237  006B96  5062               	movf	animation2@i,w,c
  8238  006B98  0D03               	mullw	3
  8239  006B9A  0EB3               	movlw	low _horizental_flash
  8240  006B9C  6E5A               	movwf	??_animation2& (0+255),c
  8241  006B9E  0E7F               	movlw	high _horizental_flash
  8242  006BA0  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8243  006BA2  50F3               	movf	prodl,w,c
  8244  006BA4  265A               	addwf	??_animation2,f,c
  8245  006BA6  50F4               	movf	prodh,w,c
  8246  006BA8  225B               	addwfc	??_animation2+1,f,c
  8247  006BAA  5063               	movf	animation2@j,w,c
  8248  006BAC  0D01               	mullw	1
  8249  006BAE  50F3               	movf	prodl,w,c
  8250  006BB0  265A               	addwf	??_animation2,f,c
  8251  006BB2  50F4               	movf	prodh,w,c
  8252  006BB4  225B               	addwfc	??_animation2+1,f,c
  8253  006BB6  C05A  FFF6         	movff	??_animation2,tblptrl
  8254  006BBA  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8255  006BBE                     	if	0	;tblptru may be non-zero
  8256  006BBE                     	endif
  8257  006BBE                     	if	0	;tblptru may be non-zero
  8258  006BBE                     	endif
  8259  006BBE  0008               	tblrd		*
  8260  006BC0  50F5               	movf	tablat,w,c
  8261  006BC2  0A64               	xorlw	100
  8262  006BC4  B4D8               	btfsc	status,2,c
  8263  006BC6  D01B               	goto	l278
  8264                           
  8265                           ;newmain.c: 677: x = horizental_flash[i][j] + row;
  8266  006BC8  5062               	movf	animation2@i,w,c
  8267  006BCA  0D03               	mullw	3
  8268  006BCC  0EB3               	movlw	low _horizental_flash
  8269  006BCE  6E5A               	movwf	??_animation2& (0+255),c
  8270  006BD0  0E7F               	movlw	high _horizental_flash
  8271  006BD2  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8272  006BD4  50F3               	movf	prodl,w,c
  8273  006BD6  265A               	addwf	??_animation2,f,c
  8274  006BD8  50F4               	movf	prodh,w,c
  8275  006BDA  225B               	addwfc	??_animation2+1,f,c
  8276  006BDC  5063               	movf	animation2@j,w,c
  8277  006BDE  0D01               	mullw	1
  8278  006BE0  50F3               	movf	prodl,w,c
  8279  006BE2  265A               	addwf	??_animation2,f,c
  8280  006BE4  50F4               	movf	prodh,w,c
  8281  006BE6  225B               	addwfc	??_animation2+1,f,c
  8282  006BE8  C05A  FFF6         	movff	??_animation2,tblptrl
  8283  006BEC  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8284  006BF0                     	if	0	;tblptru may be non-zero
  8285  006BF0                     	endif
  8286  006BF0                     	if	0	;tblptru may be non-zero
  8287  006BF0                     	endif
  8288  006BF0  0008               	tblrd		*
  8289  006BF2  50F5               	movf	tablat,w,c
  8290  006BF4  245F               	addwf	animation2@row,w,c
  8291  006BF6  6E61               	movwf	animation2@x,c
  8292                           
  8293                           ;newmain.c: 678: set_led(x);
  8294  006BF8  5061               	movf	animation2@x,w,c
  8295  006BFA  EC02  F029         	call	_set_led
  8296  006BFE                     l278:
  8297  006BFE  2A63               	incf	animation2@j,f,c
  8298  006C00  D7C6               	goto	l3611
  8299  006C02                     u4160:
  8300                           
  8301                           ;newmain.c: 679: }
  8302                           ;newmain.c: 680: write_display();
  8303  006C02  ECB4  F029         	call	_write_display	;wreg free
  8304                           
  8305                           ;newmain.c: 681: _delay((unsigned long)((40)*(4000000/4000.0)));
  8306  006C06  0E34               	movlw	52
  8307  006C08  6E5A               	movwf	??_animation2& (0+255),c
  8308  006C0A  0EF2               	movlw	242
  8309  006C0C                     u6727:
  8310  006C0C  2EE8               	decfsz	wreg,f,c
  8311  006C0E  D7FE               	bra	u6727
  8312  006C10  2E5A               	decfsz	??_animation2& (0+255),f,c
  8313  006C12  D7FC               	bra	u6727
  8314                           
  8315                           ;newmain.c: 682: for (j = 0; j < 3; j++)
  8316  006C14  0E00               	movlw	0
  8317  006C16  6E63               	movwf	animation2@j,c
  8318  006C18                     l3631:
  8319  006C18  0E02               	movlw	2
  8320  006C1A  6463               	cpfsgt	animation2@j,c
  8321  006C1C  D001               	goto	l279
  8322  006C1E  D036               	goto	u4190
  8323  006C20                     l279:
  8324                           
  8325                           ;newmain.c: 683: if (horizental_flash[i][j] != 100) {
  8326  006C20  5062               	movf	animation2@i,w,c
  8327  006C22  0D03               	mullw	3
  8328  006C24  0EB3               	movlw	low _horizental_flash
  8329  006C26  6E5A               	movwf	??_animation2& (0+255),c
  8330  006C28  0E7F               	movlw	high _horizental_flash
  8331  006C2A  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8332  006C2C  50F3               	movf	prodl,w,c
  8333  006C2E  265A               	addwf	??_animation2,f,c
  8334  006C30  50F4               	movf	prodh,w,c
  8335  006C32  225B               	addwfc	??_animation2+1,f,c
  8336  006C34  5063               	movf	animation2@j,w,c
  8337  006C36  0D01               	mullw	1
  8338  006C38  50F3               	movf	prodl,w,c
  8339  006C3A  265A               	addwf	??_animation2,f,c
  8340  006C3C  50F4               	movf	prodh,w,c
  8341  006C3E  225B               	addwfc	??_animation2+1,f,c
  8342  006C40  C05A  FFF6         	movff	??_animation2,tblptrl
  8343  006C44  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8344  006C48                     	if	0	;tblptru may be non-zero
  8345  006C48                     	endif
  8346  006C48                     	if	0	;tblptru may be non-zero
  8347  006C48                     	endif
  8348  006C48  0008               	tblrd		*
  8349  006C4A  50F5               	movf	tablat,w,c
  8350  006C4C  0A64               	xorlw	100
  8351  006C4E  B4D8               	btfsc	status,2,c
  8352  006C50  D01B               	goto	l281
  8353                           
  8354                           ;newmain.c: 684: x = horizental_flash[i][j] + row;
  8355  006C52  5062               	movf	animation2@i,w,c
  8356  006C54  0D03               	mullw	3
  8357  006C56  0EB3               	movlw	low _horizental_flash
  8358  006C58  6E5A               	movwf	??_animation2& (0+255),c
  8359  006C5A  0E7F               	movlw	high _horizental_flash
  8360  006C5C  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8361  006C5E  50F3               	movf	prodl,w,c
  8362  006C60  265A               	addwf	??_animation2,f,c
  8363  006C62  50F4               	movf	prodh,w,c
  8364  006C64  225B               	addwfc	??_animation2+1,f,c
  8365  006C66  5063               	movf	animation2@j,w,c
  8366  006C68  0D01               	mullw	1
  8367  006C6A  50F3               	movf	prodl,w,c
  8368  006C6C  265A               	addwf	??_animation2,f,c
  8369  006C6E  50F4               	movf	prodh,w,c
  8370  006C70  225B               	addwfc	??_animation2+1,f,c
  8371  006C72  C05A  FFF6         	movff	??_animation2,tblptrl
  8372  006C76  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8373  006C7A                     	if	0	;tblptru may be non-zero
  8374  006C7A                     	endif
  8375  006C7A                     	if	0	;tblptru may be non-zero
  8376  006C7A                     	endif
  8377  006C7A  0008               	tblrd		*
  8378  006C7C  50F5               	movf	tablat,w,c
  8379  006C7E  245F               	addwf	animation2@row,w,c
  8380  006C80  6E61               	movwf	animation2@x,c
  8381                           
  8382                           ;newmain.c: 685: clr_led(x);
  8383  006C82  5061               	movf	animation2@x,w,c
  8384  006C84  EC59  F029         	call	_clr_led
  8385  006C88                     l281:
  8386  006C88  2A63               	incf	animation2@j,f,c
  8387  006C8A  D7C6               	goto	l3631
  8388  006C8C                     u4190:
  8389                           
  8390                           ;newmain.c: 686: }
  8391                           ;newmain.c: 687: write_display();
  8392  006C8C  ECB4  F029         	call	_write_display	;wreg free
  8393  006C90  2A62               	incf	animation2@i,f,c
  8394  006C92  D777               	goto	l3605
  8395  006C94                     l273:
  8396  006C94  0E03               	movlw	3
  8397  006C96  185E               	xorwf	animation2@m,w,c
  8398  006C98  A4D8               	btfss	status,2,c
  8399  006C9A  0012               	return	
  8400                           
  8401                           ;newmain.c: 690: for (i = col + 2; i >= 0; i--) {
  8402  006C9C  505C               	movf	animation2@col,w,c
  8403  006C9E  0F02               	addlw	2
  8404  006CA0  6E62               	movwf	animation2@i,c
  8405  006CA2                     
  8406                           ;newmain.c: 691: for (j = 0; j < 3; j++)
  8407  006CA2  0E00               	movlw	0
  8408  006CA4  6E63               	movwf	animation2@j,c
  8409  006CA6                     l3659:
  8410  006CA6  0E02               	movlw	2
  8411  006CA8  6463               	cpfsgt	animation2@j,c
  8412  006CAA  D001               	goto	l286
  8413  006CAC  D036               	goto	u4240
  8414  006CAE                     l286:
  8415                           
  8416                           ;newmain.c: 692: if (horizental_flash[i][j] != 100) {
  8417  006CAE  5062               	movf	animation2@i,w,c
  8418  006CB0  0D03               	mullw	3
  8419  006CB2  0EB3               	movlw	low _horizental_flash
  8420  006CB4  6E5A               	movwf	??_animation2& (0+255),c
  8421  006CB6  0E7F               	movlw	high _horizental_flash
  8422  006CB8  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8423  006CBA  50F3               	movf	prodl,w,c
  8424  006CBC  265A               	addwf	??_animation2,f,c
  8425  006CBE  50F4               	movf	prodh,w,c
  8426  006CC0  225B               	addwfc	??_animation2+1,f,c
  8427  006CC2  5063               	movf	animation2@j,w,c
  8428  006CC4  0D01               	mullw	1
  8429  006CC6  50F3               	movf	prodl,w,c
  8430  006CC8  265A               	addwf	??_animation2,f,c
  8431  006CCA  50F4               	movf	prodh,w,c
  8432  006CCC  225B               	addwfc	??_animation2+1,f,c
  8433  006CCE  C05A  FFF6         	movff	??_animation2,tblptrl
  8434  006CD2  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8435  006CD6                     	if	0	;tblptru may be non-zero
  8436  006CD6                     	endif
  8437  006CD6                     	if	0	;tblptru may be non-zero
  8438  006CD6                     	endif
  8439  006CD6  0008               	tblrd		*
  8440  006CD8  50F5               	movf	tablat,w,c
  8441  006CDA  0A64               	xorlw	100
  8442  006CDC  B4D8               	btfsc	status,2,c
  8443  006CDE  D01B               	goto	l288
  8444                           
  8445                           ;newmain.c: 693: x = horizental_flash[i][j] + row;
  8446  006CE0  5062               	movf	animation2@i,w,c
  8447  006CE2  0D03               	mullw	3
  8448  006CE4  0EB3               	movlw	low _horizental_flash
  8449  006CE6  6E5A               	movwf	??_animation2& (0+255),c
  8450  006CE8  0E7F               	movlw	high _horizental_flash
  8451  006CEA  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8452  006CEC  50F3               	movf	prodl,w,c
  8453  006CEE  265A               	addwf	??_animation2,f,c
  8454  006CF0  50F4               	movf	prodh,w,c
  8455  006CF2  225B               	addwfc	??_animation2+1,f,c
  8456  006CF4  5063               	movf	animation2@j,w,c
  8457  006CF6  0D01               	mullw	1
  8458  006CF8  50F3               	movf	prodl,w,c
  8459  006CFA  265A               	addwf	??_animation2,f,c
  8460  006CFC  50F4               	movf	prodh,w,c
  8461  006CFE  225B               	addwfc	??_animation2+1,f,c
  8462  006D00  C05A  FFF6         	movff	??_animation2,tblptrl
  8463  006D04  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8464  006D08                     	if	0	;tblptru may be non-zero
  8465  006D08                     	endif
  8466  006D08                     	if	0	;tblptru may be non-zero
  8467  006D08                     	endif
  8468  006D08  0008               	tblrd		*
  8469  006D0A  50F5               	movf	tablat,w,c
  8470  006D0C  245F               	addwf	animation2@row,w,c
  8471  006D0E  6E61               	movwf	animation2@x,c
  8472                           
  8473                           ;newmain.c: 694: set_led(x);
  8474  006D10  5061               	movf	animation2@x,w,c
  8475  006D12  EC02  F029         	call	_set_led
  8476  006D16                     l288:
  8477  006D16  2A63               	incf	animation2@j,f,c
  8478  006D18  D7C6               	goto	l3659
  8479  006D1A                     u4240:
  8480                           
  8481                           ;newmain.c: 695: }
  8482                           ;newmain.c: 696: write_display();
  8483  006D1A  ECB4  F029         	call	_write_display	;wreg free
  8484                           
  8485                           ;newmain.c: 697: _delay((unsigned long)((40)*(4000000/4000.0)));
  8486  006D1E  0E34               	movlw	52
  8487  006D20  6E5A               	movwf	??_animation2& (0+255),c
  8488  006D22  0EF2               	movlw	242
  8489  006D24                     u6737:
  8490  006D24  2EE8               	decfsz	wreg,f,c
  8491  006D26  D7FE               	bra	u6737
  8492  006D28  2E5A               	decfsz	??_animation2& (0+255),f,c
  8493  006D2A  D7FC               	bra	u6737
  8494                           
  8495                           ;newmain.c: 698: for (j = 0; j < 3; j++)
  8496  006D2C  0E00               	movlw	0
  8497  006D2E  6E63               	movwf	animation2@j,c
  8498  006D30                     l3679:
  8499  006D30  0E02               	movlw	2
  8500  006D32  6463               	cpfsgt	animation2@j,c
  8501  006D34  D001               	goto	l289
  8502  006D36  D036               	goto	u4270
  8503  006D38                     l289:
  8504                           
  8505                           ;newmain.c: 699: if (horizental_flash[i][j] != 100) {
  8506  006D38  5062               	movf	animation2@i,w,c
  8507  006D3A  0D03               	mullw	3
  8508  006D3C  0EB3               	movlw	low _horizental_flash
  8509  006D3E  6E5A               	movwf	??_animation2& (0+255),c
  8510  006D40  0E7F               	movlw	high _horizental_flash
  8511  006D42  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8512  006D44  50F3               	movf	prodl,w,c
  8513  006D46  265A               	addwf	??_animation2,f,c
  8514  006D48  50F4               	movf	prodh,w,c
  8515  006D4A  225B               	addwfc	??_animation2+1,f,c
  8516  006D4C  5063               	movf	animation2@j,w,c
  8517  006D4E  0D01               	mullw	1
  8518  006D50  50F3               	movf	prodl,w,c
  8519  006D52  265A               	addwf	??_animation2,f,c
  8520  006D54  50F4               	movf	prodh,w,c
  8521  006D56  225B               	addwfc	??_animation2+1,f,c
  8522  006D58  C05A  FFF6         	movff	??_animation2,tblptrl
  8523  006D5C  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8524  006D60                     	if	0	;tblptru may be non-zero
  8525  006D60                     	endif
  8526  006D60                     	if	0	;tblptru may be non-zero
  8527  006D60                     	endif
  8528  006D60  0008               	tblrd		*
  8529  006D62  50F5               	movf	tablat,w,c
  8530  006D64  0A64               	xorlw	100
  8531  006D66  B4D8               	btfsc	status,2,c
  8532  006D68  D01B               	goto	l291
  8533                           
  8534                           ;newmain.c: 700: x = horizental_flash[i][j] + row;
  8535  006D6A  5062               	movf	animation2@i,w,c
  8536  006D6C  0D03               	mullw	3
  8537  006D6E  0EB3               	movlw	low _horizental_flash
  8538  006D70  6E5A               	movwf	??_animation2& (0+255),c
  8539  006D72  0E7F               	movlw	high _horizental_flash
  8540  006D74  6E5B               	movwf	(??_animation2+1)& (0+255),c
  8541  006D76  50F3               	movf	prodl,w,c
  8542  006D78  265A               	addwf	??_animation2,f,c
  8543  006D7A  50F4               	movf	prodh,w,c
  8544  006D7C  225B               	addwfc	??_animation2+1,f,c
  8545  006D7E  5063               	movf	animation2@j,w,c
  8546  006D80  0D01               	mullw	1
  8547  006D82  50F3               	movf	prodl,w,c
  8548  006D84  265A               	addwf	??_animation2,f,c
  8549  006D86  50F4               	movf	prodh,w,c
  8550  006D88  225B               	addwfc	??_animation2+1,f,c
  8551  006D8A  C05A  FFF6         	movff	??_animation2,tblptrl
  8552  006D8E  C05B  FFF7         	movff	??_animation2+1,tblptrh
  8553  006D92                     	if	0	;tblptru may be non-zero
  8554  006D92                     	endif
  8555  006D92                     	if	0	;tblptru may be non-zero
  8556  006D92                     	endif
  8557  006D92  0008               	tblrd		*
  8558  006D94  50F5               	movf	tablat,w,c
  8559  006D96  245F               	addwf	animation2@row,w,c
  8560  006D98  6E61               	movwf	animation2@x,c
  8561                           
  8562                           ;newmain.c: 701: clr_led(x);
  8563  006D9A  5061               	movf	animation2@x,w,c
  8564  006D9C  EC59  F029         	call	_clr_led
  8565  006DA0                     l291:
  8566  006DA0  2A63               	incf	animation2@j,f,c
  8567  006DA2  D7C6               	goto	l3679
  8568  006DA4                     u4270:
  8569                           
  8570                           ;newmain.c: 702: }
  8571                           ;newmain.c: 703: write_display();
  8572  006DA4  ECB4  F029         	call	_write_display	;wreg free
  8573  006DA8  0662               	decf	animation2@i,f,c
  8574  006DAA  D77B               	goto	l284
  8575  006DAC                     __end_of_animation2:
  8576                           	opt stack 0
  8577                           tblptru	equ	0xFF8
  8578                           tblptrh	equ	0xFF7
  8579                           tblptrl	equ	0xFF6
  8580                           tablat	equ	0xFF5
  8581                           prodh	equ	0xFF4
  8582                           prodl	equ	0xFF3
  8583                           postinc0	equ	0xFEE
  8584                           wreg	equ	0xFE8
  8585                           postinc1	equ	0xFE6
  8586                           fsr1h	equ	0xFE2
  8587                           fsr1l	equ	0xFE1
  8588                           indf2	equ	0xFDF
  8589                           postinc2	equ	0xFDE
  8590                           fsr2h	equ	0xFDA
  8591                           fsr2l	equ	0xFD9
  8592                           status	equ	0xFD8
  8593                           
  8594 ;; *************** function _animation1 *****************
  8595 ;; Defined at:
  8596 ;;		line 607 in file "newmain.c"
  8597 ;; Parameters:    Size  Location     Type
  8598 ;;  m               1    wreg     unsigned char 
  8599 ;;  n               1   21[COMRAM] unsigned char 
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;  m               1   25[COMRAM] unsigned char 
  8602 ;;  j               1   28[COMRAM] unsigned char 
  8603 ;;  i               1   27[COMRAM] unsigned char 
  8604 ;;  x               1   26[COMRAM] unsigned char 
  8605 ;; Return value:  Size  Location     Type
  8606 ;;                  1    wreg      void 
  8607 ;; Registers used:
  8608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8609 ;; Tracked objects:
  8610 ;;		On entry : 0/0
  8611 ;;		On exit  : 0/0
  8612 ;;		Unchanged: 0/0
  8613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8614 ;;      Params:         1       0       0       0       0       0       0
  8615 ;;      Locals:         4       0       0       0       0       0       0
  8616 ;;      Temps:          3       0       0       0       0       0       0
  8617 ;;      Totals:         8       0       0       0       0       0       0
  8618 ;;Total ram usage:        8 bytes
  8619 ;; Hardware stack levels used:    1
  8620 ;; Hardware stack levels required when called:    4
  8621 ;; This function calls:
  8622 ;;		_clr_led
  8623 ;;		_set_led
  8624 ;;		_write_display
  8625 ;; This function is called by:
  8626 ;;		_main
  8627 ;; This function uses a non-reentrant model
  8628 ;;
  8629                           
  8630                           	psect	text14
  8631  00549C                     __ptext14:
  8632                           	opt stack 0
  8633  00549C                     _animation1:
  8634                           	opt stack 26
  8635                           
  8636                           ;incstack = 0
  8637                           ;animation1@m stored from wreg
  8638  00549C  6E5C               	movwf	animation1@m,c
  8639                           
  8640                           ;newmain.c: 608: uint8_t i = 0, j = 0, x = 0;
  8641  00549E  0E00               	movlw	0
  8642  0054A0  6E5E               	movwf	animation1@i,c
  8643  0054A2  0E00               	movlw	0
  8644  0054A4  6E5F               	movwf	animation1@j,c
  8645  0054A6  0E00               	movlw	0
  8646  0054A8  6E5D               	movwf	animation1@x,c
  8647                           
  8648                           ;newmain.c: 609: for (i = 0; i < 4; i++) {
  8649  0054AA  0E00               	movlw	0
  8650  0054AC  6E5E               	movwf	animation1@i,c
  8651  0054AE                     l3431:
  8652  0054AE  0E03               	movlw	3
  8653  0054B0  645E               	cpfsgt	animation1@i,c
  8654  0054B2  D001               	goto	l237
  8655  0054B4  0012               	return	
  8656  0054B6                     l237:
  8657                           
  8658                           ;newmain.c: 610: for (j = 0; j < 4; j++) {
  8659  0054B6  0E00               	movlw	0
  8660  0054B8  6E5F               	movwf	animation1@j,c
  8661  0054BA                     l3437:
  8662  0054BA  0E03               	movlw	3
  8663  0054BC  645F               	cpfsgt	animation1@j,c
  8664  0054BE  D001               	goto	l239
  8665  0054C0  D046               	goto	u3860
  8666  0054C2                     l239:
  8667                           
  8668                           ;newmain.c: 611: if (arrow[n][i][j] != 100) {
  8669  0054C2  5058               	movf	animation1@n,w,c
  8670  0054C4  0D10               	mullw	16
  8671  0054C6  0EFD               	movlw	low _arrow
  8672  0054C8  6E59               	movwf	??_animation1& (0+255),c
  8673  0054CA  0E79               	movlw	high _arrow
  8674  0054CC  6E5A               	movwf	(??_animation1+1)& (0+255),c
  8675  0054CE  50F3               	movf	prodl,w,c
  8676  0054D0  2659               	addwf	??_animation1,f,c
  8677  0054D2  50F4               	movf	prodh,w,c
  8678  0054D4  225A               	addwfc	??_animation1+1,f,c
  8679  0054D6  505E               	movf	animation1@i,w,c
  8680  0054D8  0D04               	mullw	4
  8681  0054DA  50F3               	movf	prodl,w,c
  8682  0054DC  2659               	addwf	??_animation1,f,c
  8683  0054DE  50F4               	movf	prodh,w,c
  8684  0054E0  225A               	addwfc	??_animation1+1,f,c
  8685  0054E2  505F               	movf	animation1@j,w,c
  8686  0054E4  0D01               	mullw	1
  8687  0054E6  50F3               	movf	prodl,w,c
  8688  0054E8  2659               	addwf	??_animation1,f,c
  8689  0054EA  50F4               	movf	prodh,w,c
  8690  0054EC  225A               	addwfc	??_animation1+1,f,c
  8691  0054EE  C059  FFF6         	movff	??_animation1,tblptrl
  8692  0054F2  C05A  FFF7         	movff	??_animation1+1,tblptrh
  8693  0054F6                     	if	0	;tblptru may be non-zero
  8694  0054F6                     	endif
  8695  0054F6                     	if	0	;tblptru may be non-zero
  8696  0054F6                     	endif
  8697  0054F6  0008               	tblrd		*
  8698  0054F8  50F5               	movf	tablat,w,c
  8699  0054FA  0A64               	xorlw	100
  8700  0054FC  B4D8               	btfsc	status,2,c
  8701  0054FE  D025               	goto	l241
  8702                           
  8703                           ;newmain.c: 612: x = arrow[n][i][j] + 16 * m;
  8704  005500  5058               	movf	animation1@n,w,c
  8705  005502  0D10               	mullw	16
  8706  005504  0EFD               	movlw	low _arrow
  8707  005506  6E59               	movwf	??_animation1& (0+255),c
  8708  005508  0E79               	movlw	high _arrow
  8709  00550A  6E5A               	movwf	(??_animation1+1)& (0+255),c
  8710  00550C  50F3               	movf	prodl,w,c
  8711  00550E  2659               	addwf	??_animation1,f,c
  8712  005510  50F4               	movf	prodh,w,c
  8713  005512  225A               	addwfc	??_animation1+1,f,c
  8714  005514  505E               	movf	animation1@i,w,c
  8715  005516  0D04               	mullw	4
  8716  005518  50F3               	movf	prodl,w,c
  8717  00551A  2659               	addwf	??_animation1,f,c
  8718  00551C  50F4               	movf	prodh,w,c
  8719  00551E  225A               	addwfc	??_animation1+1,f,c
  8720  005520  505F               	movf	animation1@j,w,c
  8721  005522  0D01               	mullw	1
  8722  005524  50F3               	movf	prodl,w,c
  8723  005526  2659               	addwf	??_animation1,f,c
  8724  005528  50F4               	movf	prodh,w,c
  8725  00552A  225A               	addwfc	??_animation1+1,f,c
  8726  00552C  C059  FFF6         	movff	??_animation1,tblptrl
  8727  005530  C05A  FFF7         	movff	??_animation1+1,tblptrh
  8728  005534                     	if	0	;tblptru may be non-zero
  8729  005534                     	endif
  8730  005534                     	if	0	;tblptru may be non-zero
  8731  005534                     	endif
  8732  005534  0008               	tblrd		*
  8733  005536  CFF5 F05B          	movff	tablat,??_animation1+2
  8734  00553A  505C               	movf	animation1@m,w,c
  8735  00553C  0D10               	mullw	16
  8736  00553E  50F3               	movf	prodl,w,c
  8737  005540  245B               	addwf	??_animation1+2,w,c
  8738  005542  6E5D               	movwf	animation1@x,c
  8739                           
  8740                           ;newmain.c: 613: set_led(x);
  8741  005544  505D               	movf	animation1@x,w,c
  8742  005546  EC02  F029         	call	_set_led
  8743  00554A                     l241:
  8744  00554A  2A5F               	incf	animation1@j,f,c
  8745  00554C  D7B6               	goto	l3437
  8746  00554E                     u3860:
  8747                           
  8748                           ;newmain.c: 614: }
  8749                           ;newmain.c: 615: }
  8750                           ;newmain.c: 616: write_display();
  8751  00554E  ECB4  F029         	call	_write_display	;wreg free
  8752                           
  8753                           ;newmain.c: 617: _delay((unsigned long)((50)*(4000000/4000.0)));
  8754  005552  0E41               	movlw	65
  8755  005554  6E59               	movwf	??_animation1& (0+255),c
  8756  005556  0EEE               	movlw	238
  8757  005558                     u6747:
  8758  005558  2EE8               	decfsz	wreg,f,c
  8759  00555A  D7FE               	bra	u6747
  8760  00555C  2E59               	decfsz	??_animation1& (0+255),f,c
  8761  00555E  D7FC               	bra	u6747
  8762  005560  D000               	nop2	
  8763                           
  8764                           ;newmain.c: 618: for (j = 0; j < 4; j++) {
  8765  005562  0E00               	movlw	0
  8766  005564  6E5F               	movwf	animation1@j,c
  8767  005566                     l3457:
  8768  005566  0E03               	movlw	3
  8769  005568  645F               	cpfsgt	animation1@j,c
  8770  00556A  D001               	goto	l242
  8771  00556C  D046               	goto	u3890
  8772  00556E                     l242:
  8773                           
  8774                           ;newmain.c: 619: if (arrow[n][i][j] != 100) {
  8775  00556E  5058               	movf	animation1@n,w,c
  8776  005570  0D10               	mullw	16
  8777  005572  0EFD               	movlw	low _arrow
  8778  005574  6E59               	movwf	??_animation1& (0+255),c
  8779  005576  0E79               	movlw	high _arrow
  8780  005578  6E5A               	movwf	(??_animation1+1)& (0+255),c
  8781  00557A  50F3               	movf	prodl,w,c
  8782  00557C  2659               	addwf	??_animation1,f,c
  8783  00557E  50F4               	movf	prodh,w,c
  8784  005580  225A               	addwfc	??_animation1+1,f,c
  8785  005582  505E               	movf	animation1@i,w,c
  8786  005584  0D04               	mullw	4
  8787  005586  50F3               	movf	prodl,w,c
  8788  005588  2659               	addwf	??_animation1,f,c
  8789  00558A  50F4               	movf	prodh,w,c
  8790  00558C  225A               	addwfc	??_animation1+1,f,c
  8791  00558E  505F               	movf	animation1@j,w,c
  8792  005590  0D01               	mullw	1
  8793  005592  50F3               	movf	prodl,w,c
  8794  005594  2659               	addwf	??_animation1,f,c
  8795  005596  50F4               	movf	prodh,w,c
  8796  005598  225A               	addwfc	??_animation1+1,f,c
  8797  00559A  C059  FFF6         	movff	??_animation1,tblptrl
  8798  00559E  C05A  FFF7         	movff	??_animation1+1,tblptrh
  8799  0055A2                     	if	0	;tblptru may be non-zero
  8800  0055A2                     	endif
  8801  0055A2                     	if	0	;tblptru may be non-zero
  8802  0055A2                     	endif
  8803  0055A2  0008               	tblrd		*
  8804  0055A4  50F5               	movf	tablat,w,c
  8805  0055A6  0A64               	xorlw	100
  8806  0055A8  B4D8               	btfsc	status,2,c
  8807  0055AA  D025               	goto	l244
  8808                           
  8809                           ;newmain.c: 620: x = arrow[n][i][j] + 16 * m;
  8810  0055AC  5058               	movf	animation1@n,w,c
  8811  0055AE  0D10               	mullw	16
  8812  0055B0  0EFD               	movlw	low _arrow
  8813  0055B2  6E59               	movwf	??_animation1& (0+255),c
  8814  0055B4  0E79               	movlw	high _arrow
  8815  0055B6  6E5A               	movwf	(??_animation1+1)& (0+255),c
  8816  0055B8  50F3               	movf	prodl,w,c
  8817  0055BA  2659               	addwf	??_animation1,f,c
  8818  0055BC  50F4               	movf	prodh,w,c
  8819  0055BE  225A               	addwfc	??_animation1+1,f,c
  8820  0055C0  505E               	movf	animation1@i,w,c
  8821  0055C2  0D04               	mullw	4
  8822  0055C4  50F3               	movf	prodl,w,c
  8823  0055C6  2659               	addwf	??_animation1,f,c
  8824  0055C8  50F4               	movf	prodh,w,c
  8825  0055CA  225A               	addwfc	??_animation1+1,f,c
  8826  0055CC  505F               	movf	animation1@j,w,c
  8827  0055CE  0D01               	mullw	1
  8828  0055D0  50F3               	movf	prodl,w,c
  8829  0055D2  2659               	addwf	??_animation1,f,c
  8830  0055D4  50F4               	movf	prodh,w,c
  8831  0055D6  225A               	addwfc	??_animation1+1,f,c
  8832  0055D8  C059  FFF6         	movff	??_animation1,tblptrl
  8833  0055DC  C05A  FFF7         	movff	??_animation1+1,tblptrh
  8834  0055E0                     	if	0	;tblptru may be non-zero
  8835  0055E0                     	endif
  8836  0055E0                     	if	0	;tblptru may be non-zero
  8837  0055E0                     	endif
  8838  0055E0  0008               	tblrd		*
  8839  0055E2  CFF5 F05B          	movff	tablat,??_animation1+2
  8840  0055E6  505C               	movf	animation1@m,w,c
  8841  0055E8  0D10               	mullw	16
  8842  0055EA  50F3               	movf	prodl,w,c
  8843  0055EC  245B               	addwf	??_animation1+2,w,c
  8844  0055EE  6E5D               	movwf	animation1@x,c
  8845                           
  8846                           ;newmain.c: 621: clr_led(x);
  8847  0055F0  505D               	movf	animation1@x,w,c
  8848  0055F2  EC59  F029         	call	_clr_led
  8849  0055F6                     l244:
  8850  0055F6  2A5F               	incf	animation1@j,f,c
  8851  0055F8  D7B6               	goto	l3457
  8852  0055FA                     u3890:
  8853                           
  8854                           ;newmain.c: 622: }
  8855                           ;newmain.c: 623: }
  8856                           ;newmain.c: 624: write_display();
  8857  0055FA  ECB4  F029         	call	_write_display	;wreg free
  8858  0055FE  2A5E               	incf	animation1@i,f,c
  8859  005600  D756               	goto	l3431
  8860  005602                     __end_of_animation1:
  8861                           	opt stack 0
  8862                           tblptru	equ	0xFF8
  8863                           tblptrh	equ	0xFF7
  8864                           tblptrl	equ	0xFF6
  8865                           tablat	equ	0xFF5
  8866                           prodh	equ	0xFF4
  8867                           prodl	equ	0xFF3
  8868                           postinc0	equ	0xFEE
  8869                           wreg	equ	0xFE8
  8870                           postinc1	equ	0xFE6
  8871                           fsr1h	equ	0xFE2
  8872                           fsr1l	equ	0xFE1
  8873                           indf2	equ	0xFDF
  8874                           postinc2	equ	0xFDE
  8875                           fsr2h	equ	0xFDA
  8876                           fsr2l	equ	0xFD9
  8877                           status	equ	0xFD8
  8878                           
  8879 ;; *************** function _animation0 *****************
  8880 ;; Defined at:
  8881 ;;		line 556 in file "newmain.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;  m               1    wreg     unsigned char 
  8884 ;;  n               1   21[COMRAM] unsigned char 
  8885 ;; Auto vars:     Size  Location     Type
  8886 ;;  m               1   27[COMRAM] unsigned char 
  8887 ;;  i               1   29[COMRAM] unsigned char 
  8888 ;;  j               1   28[COMRAM] unsigned char 
  8889 ;; Return value:  Size  Location     Type
  8890 ;;                  1    wreg      void 
  8891 ;; Registers used:
  8892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8893 ;; Tracked objects:
  8894 ;;		On entry : 0/0
  8895 ;;		On exit  : 0/0
  8896 ;;		Unchanged: 0/0
  8897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8898 ;;      Params:         1       0       0       0       0       0       0
  8899 ;;      Locals:         3       0       0       0       0       0       0
  8900 ;;      Temps:          5       0       0       0       0       0       0
  8901 ;;      Totals:         9       0       0       0       0       0       0
  8902 ;;Total ram usage:        9 bytes
  8903 ;; Hardware stack levels used:    1
  8904 ;; Hardware stack levels required when called:    4
  8905 ;; This function calls:
  8906 ;;		_clr_led
  8907 ;;		_set_led
  8908 ;;		_write_display
  8909 ;; This function is called by:
  8910 ;;		_main
  8911 ;; This function uses a non-reentrant model
  8912 ;;
  8913                           
  8914                           	psect	text15
  8915  005ABA                     __ptext15:
  8916                           	opt stack 0
  8917  005ABA                     _animation0:
  8918                           	opt stack 26
  8919                           
  8920                           ;incstack = 0
  8921                           ;animation0@m stored from wreg
  8922  005ABA  6E5E               	movwf	animation0@m,c
  8923                           
  8924                           ;newmain.c: 557: uint8_t i = 0, j = 0;
  8925  005ABC  0E00               	movlw	0
  8926  005ABE  6E60               	movwf	animation0@i,c
  8927  005AC0  0E00               	movlw	0
  8928  005AC2  6E5F               	movwf	animation0@j,c
  8929                           
  8930                           ;newmain.c: 558: if (m == 1) {
  8931  005AC4  045E               	decf	animation0@m,w,c
  8932  005AC6  A4D8               	btfss	status,2,c
  8933  005AC8  D040               	goto	l205
  8934                           
  8935                           ;newmain.c: 559: for (i = n; i < 40 - n; i++) {
  8936  005ACA  C058  F060         	movff	animation0@n,animation0@i
  8937  005ACE  D024               	goto	l206
  8938  005AD0                     
  8939                           ;newmain.c: 560: set_led(show0_1[i]);
  8940  005AD0  5060               	movf	animation0@i,w,c
  8941  005AD2  0D01               	mullw	1
  8942  005AD4  0E8B               	movlw	low _show0_1
  8943  005AD6  24F3               	addwf	prodl,w,c
  8944  005AD8  6EF6               	movwf	tblptrl,c
  8945  005ADA  0E7F               	movlw	high _show0_1
  8946  005ADC  20F4               	addwfc	prodh,w,c
  8947  005ADE  6EF7               	movwf	tblptrh,c
  8948  005AE0                     	if	0	;There are less than 3 active tblptr bytes
  8949  005AE0                     	endif
  8950  005AE0  0008               	tblrd		*
  8951  005AE2  50F5               	movf	tablat,w,c
  8952  005AE4  EC02  F029         	call	_set_led
  8953                           
  8954                           ;newmain.c: 561: write_display();
  8955  005AE8  ECB4  F029         	call	_write_display	;wreg free
  8956                           
  8957                           ;newmain.c: 562: _delay((unsigned long)((40)*(4000000/4000.0)));
  8958  005AEC  0E34               	movlw	52
  8959  005AEE  6E59               	movwf	??_animation0& (0+255),c
  8960  005AF0  0EF2               	movlw	242
  8961  005AF2                     u6757:
  8962  005AF2  2EE8               	decfsz	wreg,f,c
  8963  005AF4  D7FE               	bra	u6757
  8964  005AF6  2E59               	decfsz	??_animation0& (0+255),f,c
  8965  005AF8  D7FC               	bra	u6757
  8966                           
  8967                           ;newmain.c: 563: clr_led(show0_1[i]);
  8968  005AFA  5060               	movf	animation0@i,w,c
  8969  005AFC  0D01               	mullw	1
  8970  005AFE  0E8B               	movlw	low _show0_1
  8971  005B00  24F3               	addwf	prodl,w,c
  8972  005B02  6EF6               	movwf	tblptrl,c
  8973  005B04  0E7F               	movlw	high _show0_1
  8974  005B06  20F4               	addwfc	prodh,w,c
  8975  005B08  6EF7               	movwf	tblptrh,c
  8976  005B0A                     	if	0	;There are less than 3 active tblptr bytes
  8977  005B0A                     	endif
  8978  005B0A  0008               	tblrd		*
  8979  005B0C  50F5               	movf	tablat,w,c
  8980  005B0E  EC59  F029         	call	_clr_led
  8981                           
  8982                           ;newmain.c: 564: write_display();
  8983  005B12  ECB4  F029         	call	_write_display	;wreg free
  8984  005B16  2A60               	incf	animation0@i,f,c
  8985  005B18                     l206:
  8986  005B18  5058               	movf	animation0@n,w,c
  8987  005B1A  6E59               	movwf	??_animation0& (0+255),c
  8988  005B1C  6A5A               	clrf	(??_animation0+1)& (0+255),c
  8989  005B1E  1E59               	comf	??_animation0,f,c
  8990  005B20  1E5A               	comf	??_animation0+1,f,c
  8991  005B22  4A59               	infsnz	??_animation0,f,c
  8992  005B24  2A5A               	incf	??_animation0+1,f,c
  8993  005B26  0E28               	movlw	40
  8994  005B28  2659               	addwf	??_animation0,f,c
  8995  005B2A  0E00               	movlw	0
  8996  005B2C  225A               	addwfc	??_animation0+1,f,c
  8997  005B2E  5060               	movf	animation0@i,w,c
  8998  005B30  6E5B               	movwf	(??_animation0+2)& (0+255),c
  8999  005B32  6A5C               	clrf	(??_animation0+3)& (0+255),c
  9000  005B34  5059               	movf	??_animation0,w,c
  9001  005B36  5C5B               	subwf	??_animation0+2,w,c
  9002  005B38  505C               	movf	??_animation0+3,w,c
  9003  005B3A  0A80               	xorlw	128
  9004  005B3C  6E5D               	movwf	(??_animation0+4)& (0+255),c
  9005  005B3E  505A               	movf	??_animation0+1,w,c
  9006  005B40  0A80               	xorlw	128
  9007  005B42  585D               	subwfb	(??_animation0+4)& (0+255),w,c
  9008  005B44  B0D8               	btfsc	status,0,c
  9009  005B46  0012               	return	
  9010  005B48  D7C3               	goto	l207
  9011  005B4A                     l205:
  9012  005B4A  0E02               	movlw	2
  9013  005B4C  185E               	xorwf	animation0@m,w,c
  9014  005B4E  A4D8               	btfss	status,2,c
  9015  005B50  D02E               	goto	l210
  9016                           
  9017                           ;newmain.c: 567: for (i = 39 - n; i >= n; i--) {
  9018  005B52  5058               	movf	animation0@n,w,c
  9019  005B54  0800               	sublw	0
  9020  005B56  0F27               	addlw	39
  9021  005B58  6E60               	movwf	animation0@i,c
  9022  005B5A  D024               	goto	l211
  9023  005B5C                     
  9024                           ;newmain.c: 568: set_led(show0_1[i]);
  9025  005B5C  5060               	movf	animation0@i,w,c
  9026  005B5E  0D01               	mullw	1
  9027  005B60  0E8B               	movlw	low _show0_1
  9028  005B62  24F3               	addwf	prodl,w,c
  9029  005B64  6EF6               	movwf	tblptrl,c
  9030  005B66  0E7F               	movlw	high _show0_1
  9031  005B68  20F4               	addwfc	prodh,w,c
  9032  005B6A  6EF7               	movwf	tblptrh,c
  9033  005B6C                     	if	0	;There are less than 3 active tblptr bytes
  9034  005B6C                     	endif
  9035  005B6C  0008               	tblrd		*
  9036  005B6E  50F5               	movf	tablat,w,c
  9037  005B70  EC02  F029         	call	_set_led
  9038                           
  9039                           ;newmain.c: 569: write_display();
  9040  005B74  ECB4  F029         	call	_write_display	;wreg free
  9041                           
  9042                           ;newmain.c: 570: _delay((unsigned long)((40)*(4000000/4000.0)));
  9043  005B78  0E34               	movlw	52
  9044  005B7A  6E59               	movwf	??_animation0& (0+255),c
  9045  005B7C  0EF2               	movlw	242
  9046  005B7E                     u6767:
  9047  005B7E  2EE8               	decfsz	wreg,f,c
  9048  005B80  D7FE               	bra	u6767
  9049  005B82  2E59               	decfsz	??_animation0& (0+255),f,c
  9050  005B84  D7FC               	bra	u6767
  9051                           
  9052                           ;newmain.c: 571: clr_led(show0_1[i]);
  9053  005B86  5060               	movf	animation0@i,w,c
  9054  005B88  0D01               	mullw	1
  9055  005B8A  0E8B               	movlw	low _show0_1
  9056  005B8C  24F3               	addwf	prodl,w,c
  9057  005B8E  6EF6               	movwf	tblptrl,c
  9058  005B90  0E7F               	movlw	high _show0_1
  9059  005B92  20F4               	addwfc	prodh,w,c
  9060  005B94  6EF7               	movwf	tblptrh,c
  9061  005B96                     	if	0	;There are less than 3 active tblptr bytes
  9062  005B96                     	endif
  9063  005B96  0008               	tblrd		*
  9064  005B98  50F5               	movf	tablat,w,c
  9065  005B9A  EC59  F029         	call	_clr_led
  9066                           
  9067                           ;newmain.c: 572: write_display();
  9068  005B9E  ECB4  F029         	call	_write_display	;wreg free
  9069  005BA2  0660               	decf	animation0@i,f,c
  9070  005BA4                     l211:
  9071  005BA4  5058               	movf	animation0@n,w,c
  9072  005BA6  5C60               	subwf	animation0@i,w,c
  9073  005BA8  A0D8               	btfss	status,0,c
  9074  005BAA  0012               	return	
  9075  005BAC  D7D7               	goto	l212
  9076  005BAE                     l210:
  9077  005BAE  0E03               	movlw	3
  9078  005BB0  185E               	xorwf	animation0@m,w,c
  9079  005BB2  A4D8               	btfss	status,2,c
  9080  005BB4  D040               	goto	l215
  9081                           
  9082                           ;newmain.c: 575: for (i = n; i < 40 - n; i++) {
  9083  005BB6  C058  F060         	movff	animation0@n,animation0@i
  9084  005BBA  D024               	goto	l216
  9085  005BBC                     
  9086                           ;newmain.c: 576: set_led(show0_2[i]);
  9087  005BBC  5060               	movf	animation0@i,w,c
  9088  005BBE  0D01               	mullw	1
  9089  005BC0  0E63               	movlw	low _show0_2
  9090  005BC2  24F3               	addwf	prodl,w,c
  9091  005BC4  6EF6               	movwf	tblptrl,c
  9092  005BC6  0E7F               	movlw	high _show0_2
  9093  005BC8  20F4               	addwfc	prodh,w,c
  9094  005BCA  6EF7               	movwf	tblptrh,c
  9095  005BCC                     	if	0	;There are less than 3 active tblptr bytes
  9096  005BCC                     	endif
  9097  005BCC  0008               	tblrd		*
  9098  005BCE  50F5               	movf	tablat,w,c
  9099  005BD0  EC02  F029         	call	_set_led
  9100                           
  9101                           ;newmain.c: 577: write_display();
  9102  005BD4  ECB4  F029         	call	_write_display	;wreg free
  9103                           
  9104                           ;newmain.c: 578: _delay((unsigned long)((40)*(4000000/4000.0)));
  9105  005BD8  0E34               	movlw	52
  9106  005BDA  6E59               	movwf	??_animation0& (0+255),c
  9107  005BDC  0EF2               	movlw	242
  9108  005BDE                     u6777:
  9109  005BDE  2EE8               	decfsz	wreg,f,c
  9110  005BE0  D7FE               	bra	u6777
  9111  005BE2  2E59               	decfsz	??_animation0& (0+255),f,c
  9112  005BE4  D7FC               	bra	u6777
  9113                           
  9114                           ;newmain.c: 579: clr_led(show0_2[i]);
  9115  005BE6  5060               	movf	animation0@i,w,c
  9116  005BE8  0D01               	mullw	1
  9117  005BEA  0E63               	movlw	low _show0_2
  9118  005BEC  24F3               	addwf	prodl,w,c
  9119  005BEE  6EF6               	movwf	tblptrl,c
  9120  005BF0  0E7F               	movlw	high _show0_2
  9121  005BF2  20F4               	addwfc	prodh,w,c
  9122  005BF4  6EF7               	movwf	tblptrh,c
  9123  005BF6                     	if	0	;There are less than 3 active tblptr bytes
  9124  005BF6                     	endif
  9125  005BF6  0008               	tblrd		*
  9126  005BF8  50F5               	movf	tablat,w,c
  9127  005BFA  EC59  F029         	call	_clr_led
  9128                           
  9129                           ;newmain.c: 580: write_display();
  9130  005BFE  ECB4  F029         	call	_write_display	;wreg free
  9131  005C02  2A60               	incf	animation0@i,f,c
  9132  005C04                     l216:
  9133  005C04  5058               	movf	animation0@n,w,c
  9134  005C06  6E59               	movwf	??_animation0& (0+255),c
  9135  005C08  6A5A               	clrf	(??_animation0+1)& (0+255),c
  9136  005C0A  1E59               	comf	??_animation0,f,c
  9137  005C0C  1E5A               	comf	??_animation0+1,f,c
  9138  005C0E  4A59               	infsnz	??_animation0,f,c
  9139  005C10  2A5A               	incf	??_animation0+1,f,c
  9140  005C12  0E28               	movlw	40
  9141  005C14  2659               	addwf	??_animation0,f,c
  9142  005C16  0E00               	movlw	0
  9143  005C18  225A               	addwfc	??_animation0+1,f,c
  9144  005C1A  5060               	movf	animation0@i,w,c
  9145  005C1C  6E5B               	movwf	(??_animation0+2)& (0+255),c
  9146  005C1E  6A5C               	clrf	(??_animation0+3)& (0+255),c
  9147  005C20  5059               	movf	??_animation0,w,c
  9148  005C22  5C5B               	subwf	??_animation0+2,w,c
  9149  005C24  505C               	movf	??_animation0+3,w,c
  9150  005C26  0A80               	xorlw	128
  9151  005C28  6E5D               	movwf	(??_animation0+4)& (0+255),c
  9152  005C2A  505A               	movf	??_animation0+1,w,c
  9153  005C2C  0A80               	xorlw	128
  9154  005C2E  585D               	subwfb	(??_animation0+4)& (0+255),w,c
  9155  005C30  B0D8               	btfsc	status,0,c
  9156  005C32  0012               	return	
  9157  005C34  D7C3               	goto	l217
  9158  005C36                     l215:
  9159  005C36  0E04               	movlw	4
  9160  005C38  185E               	xorwf	animation0@m,w,c
  9161  005C3A  A4D8               	btfss	status,2,c
  9162  005C3C  D02E               	goto	l220
  9163                           
  9164                           ;newmain.c: 583: for (i = 39 - n; i >= n; i--) {
  9165  005C3E  5058               	movf	animation0@n,w,c
  9166  005C40  0800               	sublw	0
  9167  005C42  0F27               	addlw	39
  9168  005C44  6E60               	movwf	animation0@i,c
  9169  005C46  D024               	goto	l221
  9170  005C48                     
  9171                           ;newmain.c: 584: set_led(show0_2[i]);
  9172  005C48  5060               	movf	animation0@i,w,c
  9173  005C4A  0D01               	mullw	1
  9174  005C4C  0E63               	movlw	low _show0_2
  9175  005C4E  24F3               	addwf	prodl,w,c
  9176  005C50  6EF6               	movwf	tblptrl,c
  9177  005C52  0E7F               	movlw	high _show0_2
  9178  005C54  20F4               	addwfc	prodh,w,c
  9179  005C56  6EF7               	movwf	tblptrh,c
  9180  005C58                     	if	0	;There are less than 3 active tblptr bytes
  9181  005C58                     	endif
  9182  005C58  0008               	tblrd		*
  9183  005C5A  50F5               	movf	tablat,w,c
  9184  005C5C  EC02  F029         	call	_set_led
  9185                           
  9186                           ;newmain.c: 585: write_display();
  9187  005C60  ECB4  F029         	call	_write_display	;wreg free
  9188                           
  9189                           ;newmain.c: 586: _delay((unsigned long)((40)*(4000000/4000.0)));
  9190  005C64  0E34               	movlw	52
  9191  005C66  6E59               	movwf	??_animation0& (0+255),c
  9192  005C68  0EF2               	movlw	242
  9193  005C6A                     u6787:
  9194  005C6A  2EE8               	decfsz	wreg,f,c
  9195  005C6C  D7FE               	bra	u6787
  9196  005C6E  2E59               	decfsz	??_animation0& (0+255),f,c
  9197  005C70  D7FC               	bra	u6787
  9198                           
  9199                           ;newmain.c: 587: clr_led(show0_2[i]);
  9200  005C72  5060               	movf	animation0@i,w,c
  9201  005C74  0D01               	mullw	1
  9202  005C76  0E63               	movlw	low _show0_2
  9203  005C78  24F3               	addwf	prodl,w,c
  9204  005C7A  6EF6               	movwf	tblptrl,c
  9205  005C7C  0E7F               	movlw	high _show0_2
  9206  005C7E  20F4               	addwfc	prodh,w,c
  9207  005C80  6EF7               	movwf	tblptrh,c
  9208  005C82                     	if	0	;There are less than 3 active tblptr bytes
  9209  005C82                     	endif
  9210  005C82  0008               	tblrd		*
  9211  005C84  50F5               	movf	tablat,w,c
  9212  005C86  EC59  F029         	call	_clr_led
  9213                           
  9214                           ;newmain.c: 588: write_display();
  9215  005C8A  ECB4  F029         	call	_write_display	;wreg free
  9216  005C8E  0660               	decf	animation0@i,f,c
  9217  005C90                     l221:
  9218  005C90  5058               	movf	animation0@n,w,c
  9219  005C92  5C60               	subwf	animation0@i,w,c
  9220  005C94  A0D8               	btfss	status,0,c
  9221  005C96  0012               	return	
  9222  005C98  D7D7               	goto	l222
  9223  005C9A                     l220:
  9224  005C9A  0E05               	movlw	5
  9225  005C9C  185E               	xorwf	animation0@m,w,c
  9226  005C9E  A4D8               	btfss	status,2,c
  9227  005CA0  0012               	return	
  9228                           
  9229                           ;newmain.c: 591: for (i = n; i < 6; i++) {
  9230  005CA2  C058  F060         	movff	animation0@n,animation0@i
  9231  005CA6                     l3387:
  9232  005CA6  0E05               	movlw	5
  9233  005CA8  6460               	cpfsgt	animation0@i,c
  9234  005CAA  D001               	goto	l226
  9235  005CAC  0012               	return	
  9236  005CAE                     l226:
  9237                           
  9238                           ;newmain.c: 592: for (j = 0; j < 20; j++) {
  9239  005CAE  0E00               	movlw	0
  9240  005CB0  6E5F               	movwf	animation0@j,c
  9241  005CB2                     l3393:
  9242  005CB2  0E13               	movlw	19
  9243  005CB4  645F               	cpfsgt	animation0@j,c
  9244  005CB6  D001               	goto	l228
  9245  005CB8  D033               	goto	u3780
  9246  005CBA                     l228:
  9247                           
  9248                           ;newmain.c: 593: if (show0_3[i][j] != 100)
  9249  005CBA  5060               	movf	animation0@i,w,c
  9250  005CBC  0D14               	mullw	20
  9251  005CBE  0ED5               	movlw	low _show0_3
  9252  005CC0  6E59               	movwf	??_animation0& (0+255),c
  9253  005CC2  0E7B               	movlw	high _show0_3
  9254  005CC4  6E5A               	movwf	(??_animation0+1)& (0+255),c
  9255  005CC6  50F3               	movf	prodl,w,c
  9256  005CC8  2659               	addwf	??_animation0,f,c
  9257  005CCA  50F4               	movf	prodh,w,c
  9258  005CCC  225A               	addwfc	??_animation0+1,f,c
  9259  005CCE  505F               	movf	animation0@j,w,c
  9260  005CD0  0D01               	mullw	1
  9261  005CD2  50F3               	movf	prodl,w,c
  9262  005CD4  2659               	addwf	??_animation0,f,c
  9263  005CD6  50F4               	movf	prodh,w,c
  9264  005CD8  225A               	addwfc	??_animation0+1,f,c
  9265  005CDA  C059  FFF6         	movff	??_animation0,tblptrl
  9266  005CDE  C05A  FFF7         	movff	??_animation0+1,tblptrh
  9267  005CE2                     	if	0	;tblptru may be non-zero
  9268  005CE2                     	endif
  9269  005CE2                     	if	0	;tblptru may be non-zero
  9270  005CE2                     	endif
  9271  005CE2  0008               	tblrd		*
  9272  005CE4  50F5               	movf	tablat,w,c
  9273  005CE6  0A64               	xorlw	100
  9274  005CE8  B4D8               	btfsc	status,2,c
  9275  005CEA  D018               	goto	l230
  9276                           
  9277                           ;newmain.c: 594: set_led(show0_3[i][j]);
  9278  005CEC  5060               	movf	animation0@i,w,c
  9279  005CEE  0D14               	mullw	20
  9280  005CF0  0ED5               	movlw	low _show0_3
  9281  005CF2  6E59               	movwf	??_animation0& (0+255),c
  9282  005CF4  0E7B               	movlw	high _show0_3
  9283  005CF6  6E5A               	movwf	(??_animation0+1)& (0+255),c
  9284  005CF8  50F3               	movf	prodl,w,c
  9285  005CFA  2659               	addwf	??_animation0,f,c
  9286  005CFC  50F4               	movf	prodh,w,c
  9287  005CFE  225A               	addwfc	??_animation0+1,f,c
  9288  005D00  505F               	movf	animation0@j,w,c
  9289  005D02  0D01               	mullw	1
  9290  005D04  50F3               	movf	prodl,w,c
  9291  005D06  2659               	addwf	??_animation0,f,c
  9292  005D08  50F4               	movf	prodh,w,c
  9293  005D0A  225A               	addwfc	??_animation0+1,f,c
  9294  005D0C  C059  FFF6         	movff	??_animation0,tblptrl
  9295  005D10  C05A  FFF7         	movff	??_animation0+1,tblptrh
  9296  005D14                     	if	0	;tblptru may be non-zero
  9297  005D14                     	endif
  9298  005D14                     	if	0	;tblptru may be non-zero
  9299  005D14                     	endif
  9300  005D14  0008               	tblrd		*
  9301  005D16  50F5               	movf	tablat,w,c
  9302  005D18  EC02  F029         	call	_set_led
  9303  005D1C                     l230:
  9304  005D1C  2A5F               	incf	animation0@j,f,c
  9305  005D1E  D7C9               	goto	l3393
  9306  005D20                     u3780:
  9307                           
  9308                           ;newmain.c: 595: }
  9309                           ;newmain.c: 596: write_display();
  9310  005D20  ECB4  F029         	call	_write_display	;wreg free
  9311                           
  9312                           ;newmain.c: 597: _delay((unsigned long)((50)*(4000000/4000.0)));
  9313  005D24  0E41               	movlw	65
  9314  005D26  6E59               	movwf	??_animation0& (0+255),c
  9315  005D28  0EEE               	movlw	238
  9316  005D2A                     u6797:
  9317  005D2A  2EE8               	decfsz	wreg,f,c
  9318  005D2C  D7FE               	bra	u6797
  9319  005D2E  2E59               	decfsz	??_animation0& (0+255),f,c
  9320  005D30  D7FC               	bra	u6797
  9321  005D32  D000               	nop2	
  9322                           
  9323                           ;newmain.c: 598: for (j = 0; j < 20; j++) {
  9324  005D34  0E00               	movlw	0
  9325  005D36  6E5F               	movwf	animation0@j,c
  9326  005D38                     l3411:
  9327  005D38  0E13               	movlw	19
  9328  005D3A  645F               	cpfsgt	animation0@j,c
  9329  005D3C  D001               	goto	l231
  9330  005D3E  D033               	goto	u3810
  9331  005D40                     l231:
  9332                           
  9333                           ;newmain.c: 599: if (show0_3[i][j] != 100)
  9334  005D40  5060               	movf	animation0@i,w,c
  9335  005D42  0D14               	mullw	20
  9336  005D44  0ED5               	movlw	low _show0_3
  9337  005D46  6E59               	movwf	??_animation0& (0+255),c
  9338  005D48  0E7B               	movlw	high _show0_3
  9339  005D4A  6E5A               	movwf	(??_animation0+1)& (0+255),c
  9340  005D4C  50F3               	movf	prodl,w,c
  9341  005D4E  2659               	addwf	??_animation0,f,c
  9342  005D50  50F4               	movf	prodh,w,c
  9343  005D52  225A               	addwfc	??_animation0+1,f,c
  9344  005D54  505F               	movf	animation0@j,w,c
  9345  005D56  0D01               	mullw	1
  9346  005D58  50F3               	movf	prodl,w,c
  9347  005D5A  2659               	addwf	??_animation0,f,c
  9348  005D5C  50F4               	movf	prodh,w,c
  9349  005D5E  225A               	addwfc	??_animation0+1,f,c
  9350  005D60  C059  FFF6         	movff	??_animation0,tblptrl
  9351  005D64  C05A  FFF7         	movff	??_animation0+1,tblptrh
  9352  005D68                     	if	0	;tblptru may be non-zero
  9353  005D68                     	endif
  9354  005D68                     	if	0	;tblptru may be non-zero
  9355  005D68                     	endif
  9356  005D68  0008               	tblrd		*
  9357  005D6A  50F5               	movf	tablat,w,c
  9358  005D6C  0A64               	xorlw	100
  9359  005D6E  B4D8               	btfsc	status,2,c
  9360  005D70  D018               	goto	l233
  9361                           
  9362                           ;newmain.c: 600: clr_led(show0_3[i][j]);
  9363  005D72  5060               	movf	animation0@i,w,c
  9364  005D74  0D14               	mullw	20
  9365  005D76  0ED5               	movlw	low _show0_3
  9366  005D78  6E59               	movwf	??_animation0& (0+255),c
  9367  005D7A  0E7B               	movlw	high _show0_3
  9368  005D7C  6E5A               	movwf	(??_animation0+1)& (0+255),c
  9369  005D7E  50F3               	movf	prodl,w,c
  9370  005D80  2659               	addwf	??_animation0,f,c
  9371  005D82  50F4               	movf	prodh,w,c
  9372  005D84  225A               	addwfc	??_animation0+1,f,c
  9373  005D86  505F               	movf	animation0@j,w,c
  9374  005D88  0D01               	mullw	1
  9375  005D8A  50F3               	movf	prodl,w,c
  9376  005D8C  2659               	addwf	??_animation0,f,c
  9377  005D8E  50F4               	movf	prodh,w,c
  9378  005D90  225A               	addwfc	??_animation0+1,f,c
  9379  005D92  C059  FFF6         	movff	??_animation0,tblptrl
  9380  005D96  C05A  FFF7         	movff	??_animation0+1,tblptrh
  9381  005D9A                     	if	0	;tblptru may be non-zero
  9382  005D9A                     	endif
  9383  005D9A                     	if	0	;tblptru may be non-zero
  9384  005D9A                     	endif
  9385  005D9A  0008               	tblrd		*
  9386  005D9C  50F5               	movf	tablat,w,c
  9387  005D9E  EC59  F029         	call	_clr_led
  9388  005DA2                     l233:
  9389  005DA2  2A5F               	incf	animation0@j,f,c
  9390  005DA4  D7C9               	goto	l3411
  9391  005DA6                     u3810:
  9392                           
  9393                           ;newmain.c: 601: }
  9394                           ;newmain.c: 602: write_display();
  9395  005DA6  ECB4  F029         	call	_write_display	;wreg free
  9396  005DAA  2A60               	incf	animation0@i,f,c
  9397  005DAC  D77C               	goto	l3387
  9398  005DAE                     __end_of_animation0:
  9399                           	opt stack 0
  9400                           tblptru	equ	0xFF8
  9401                           tblptrh	equ	0xFF7
  9402                           tblptrl	equ	0xFF6
  9403                           tablat	equ	0xFF5
  9404                           prodh	equ	0xFF4
  9405                           prodl	equ	0xFF3
  9406                           postinc0	equ	0xFEE
  9407                           wreg	equ	0xFE8
  9408                           postinc1	equ	0xFE6
  9409                           fsr1h	equ	0xFE2
  9410                           fsr1l	equ	0xFE1
  9411                           indf2	equ	0xFDF
  9412                           postinc2	equ	0xFDE
  9413                           fsr2h	equ	0xFDA
  9414                           fsr2l	equ	0xFD9
  9415                           status	equ	0xFD8
  9416                           
  9417 ;; *************** function _write_display *****************
  9418 ;; Defined at:
  9419 ;;		line 1006 in file "newmain.c"
  9420 ;; Parameters:    Size  Location     Type
  9421 ;;		None
  9422 ;; Auto vars:     Size  Location     Type
  9423 ;;  i               2   14[COMRAM] int 
  9424 ;;  j               2   12[COMRAM] int 
  9425 ;; Return value:  Size  Location     Type
  9426 ;;                  1    wreg      void 
  9427 ;; Registers used:
  9428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9429 ;; Tracked objects:
  9430 ;;		On entry : 0/0
  9431 ;;		On exit  : 0/0
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9434 ;;      Params:         0       0       0       0       0       0       0
  9435 ;;      Locals:         4       0       0       0       0       0       0
  9436 ;;      Temps:          6       0       0       0       0       0       0
  9437 ;;      Totals:        10       0       0       0       0       0       0
  9438 ;;Total ram usage:       10 bytes
  9439 ;; Hardware stack levels used:    1
  9440 ;; Hardware stack levels required when called:    3
  9441 ;; This function calls:
  9442 ;;		_MyIdleI2C
  9443 ;;		_MyStartI2C
  9444 ;;		_MyStopI2C
  9445 ;;		___wmul
  9446 ;;		_write
  9447 ;; This function is called by:
  9448 ;;		_main
  9449 ;;		_animation0
  9450 ;;		_animation1
  9451 ;;		_animation2
  9452 ;;		_animation3
  9453 ;;		_animation4
  9454 ;;		_animation5
  9455 ;;		_animation6
  9456 ;;		_animation7
  9457 ;; This function uses a non-reentrant model
  9458 ;;
  9459                           
  9460                           	psect	text16
  9461  005368                     __ptext16:
  9462                           	opt stack 0
  9463  005368                     _write_display:
  9464                           	opt stack 27
  9465                           
  9466                           ;newmain.c: 1008: int i,j;
  9467                           ;newmain.c: 1009: for(i=0;i<4;i++)
  9468                           
  9469                           ;incstack = 0
  9470  005368  0E00               	movlw	0
  9471  00536A  6E52               	movwf	write_display@i+1,c
  9472  00536C  0E00               	movlw	0
  9473  00536E  6E51               	movwf	write_display@i,c
  9474  005370  BE52               	btfsc	write_display@i+1,7,c
  9475  005372  D008               	goto	l471
  9476  005374  5052               	movf	write_display@i+1,w,c
  9477  005376  E105               	bnz	u3450
  9478  005378  0E04               	movlw	4
  9479  00537A  5C51               	subwf	write_display@i,w,c
  9480  00537C  B0D8               	btfsc	status,0,c
  9481  00537E  0012               	return	
  9482  005380  D001               	goto	l471
  9483  005382                     u3450:
  9484  005382  0012               	return	
  9485  005384                     l471:
  9486                           
  9487                           ;newmain.c: 1010: {
  9488                           ;newmain.c: 1011: MyIdleI2C();
  9489  005384  EC45  F027         	call	_MyIdleI2C	;wreg free
  9490                           
  9491                           ;newmain.c: 1012: MyStartI2C();
  9492  005388  EC3E  F027         	call	_MyStartI2C	;wreg free
  9493                           
  9494                           ;newmain.c: 1013: MyIdleI2C();
  9495  00538C  EC45  F027         	call	_MyIdleI2C	;wreg free
  9496                           
  9497                           ;newmain.c: 1014: write(matrices[i].address | 0x00);
  9498  005390  C051  F043         	movff	write_display@i,___wmul@multiplier
  9499  005394  C052  F044         	movff	write_display@i+1,___wmul@multiplier+1
  9500  005398  0E00               	movlw	0
  9501  00539A  6E46               	movwf	___wmul@multiplicand+1,c
  9502  00539C  0E1D               	movlw	29
  9503  00539E  6E45               	movwf	___wmul@multiplicand,c
  9504  0053A0  EC7C  F027         	call	___wmul	;wreg free
  9505  0053A4  0E80               	movlw	low _matrices
  9506  0053A6  2443               	addwf	?___wmul,w,c
  9507  0053A8  6ED9               	movwf	fsr2l,c
  9508  0053AA  0E00               	movlw	high _matrices
  9509  0053AC  2044               	addwfc	?___wmul+1,w,c
  9510  0053AE  6EDA               	movwf	fsr2h,c
  9511  0053B0  50DF               	movf	indf2,w,c
  9512  0053B2  EC8F  F027         	call	_write
  9513                           
  9514                           ;newmain.c: 1015: MyIdleI2C();
  9515  0053B6  EC45  F027         	call	_MyIdleI2C	;wreg free
  9516                           
  9517                           ;newmain.c: 1016: write(0x00);
  9518  0053BA  0E00               	movlw	0
  9519  0053BC  EC8F  F027         	call	_write
  9520                           
  9521                           ;newmain.c: 1017: MyIdleI2C();
  9522  0053C0  EC45  F027         	call	_MyIdleI2C	;wreg free
  9523                           
  9524                           ;newmain.c: 1019: for(j=0;j<8;j++)
  9525  0053C4  0E00               	movlw	0
  9526  0053C6  6E50               	movwf	write_display@j+1,c
  9527  0053C8  0E00               	movlw	0
  9528  0053CA  6E4F               	movwf	write_display@j,c
  9529  0053CC                     l3173:
  9530  0053CC  BE50               	btfsc	write_display@j+1,7,c
  9531  0053CE  D006               	goto	l473
  9532  0053D0  5050               	movf	write_display@j+1,w,c
  9533  0053D2  E15A               	bnz	l3183
  9534  0053D4  0E08               	movlw	8
  9535  0053D6  5C4F               	subwf	write_display@j,w,c
  9536  0053D8  B0D8               	btfsc	status,0,c
  9537  0053DA  D056               	goto	u3470
  9538  0053DC                     l473:
  9539                           
  9540                           ;newmain.c: 1020: {
  9541                           ;newmain.c: 1021: write(matrices[i].display_buffer[j]&0xff);
  9542  0053DC  C051  F043         	movff	write_display@i,___wmul@multiplier
  9543  0053E0  C052  F044         	movff	write_display@i+1,___wmul@multiplier+1
  9544  0053E4  0E00               	movlw	0
  9545  0053E6  6E46               	movwf	___wmul@multiplicand+1,c
  9546  0053E8  0E1D               	movlw	29
  9547  0053EA  6E45               	movwf	___wmul@multiplicand,c
  9548  0053EC  EC7C  F027         	call	___wmul	;wreg free
  9549  0053F0  C04F  F049         	movff	write_display@j,??_write_display
  9550  0053F4  C050  F04A         	movff	write_display@j+1,??_write_display+1
  9551  0053F8  90D8               	bcf	status,0,c
  9552  0053FA  3649               	rlcf	??_write_display,f,c
  9553  0053FC  364A               	rlcf	??_write_display+1,f,c
  9554  0053FE  0E0D               	movlw	13
  9555  005400  2649               	addwf	??_write_display,f,c
  9556  005402  0E00               	movlw	0
  9557  005404  224A               	addwfc	??_write_display+1,f,c
  9558  005406  0E80               	movlw	low _matrices
  9559  005408  6E4B               	movwf	(??_write_display+2)& (0+255),c
  9560  00540A  0E00               	movlw	high _matrices
  9561  00540C  6E4C               	movwf	(??_write_display+3)& (0+255),c
  9562  00540E  5049               	movf	??_write_display,w,c
  9563  005410  264B               	addwf	??_write_display+2,f,c
  9564  005412  504A               	movf	??_write_display+1,w,c
  9565  005414  224C               	addwfc	??_write_display+3,f,c
  9566  005416  5043               	movf	?___wmul,w,c
  9567  005418  244B               	addwf	??_write_display+2,w,c
  9568  00541A  6ED9               	movwf	fsr2l,c
  9569  00541C  5044               	movf	?___wmul+1,w,c
  9570  00541E  204C               	addwfc	??_write_display+3,w,c
  9571  005420  6EDA               	movwf	fsr2h,c
  9572  005422  50DF               	movf	indf2,w,c
  9573  005424  EC8F  F027         	call	_write
  9574                           
  9575                           ;newmain.c: 1022: write(matrices[i].display_buffer[j]>>8);
  9576  005428  C051  F043         	movff	write_display@i,___wmul@multiplier
  9577  00542C  C052  F044         	movff	write_display@i+1,___wmul@multiplier+1
  9578  005430  0E00               	movlw	0
  9579  005432  6E46               	movwf	___wmul@multiplicand+1,c
  9580  005434  0E1D               	movlw	29
  9581  005436  6E45               	movwf	___wmul@multiplicand,c
  9582  005438  EC7C  F027         	call	___wmul	;wreg free
  9583  00543C  C04F  F049         	movff	write_display@j,??_write_display
  9584  005440  C050  F04A         	movff	write_display@j+1,??_write_display+1
  9585  005444  90D8               	bcf	status,0,c
  9586  005446  3649               	rlcf	??_write_display,f,c
  9587  005448  364A               	rlcf	??_write_display+1,f,c
  9588  00544A  0E0D               	movlw	13
  9589  00544C  2649               	addwf	??_write_display,f,c
  9590  00544E  0E00               	movlw	0
  9591  005450  224A               	addwfc	??_write_display+1,f,c
  9592  005452  0E80               	movlw	low _matrices
  9593  005454  6E4B               	movwf	(??_write_display+2)& (0+255),c
  9594  005456  0E00               	movlw	high _matrices
  9595  005458  6E4C               	movwf	(??_write_display+3)& (0+255),c
  9596  00545A  5049               	movf	??_write_display,w,c
  9597  00545C  264B               	addwf	??_write_display+2,f,c
  9598  00545E  504A               	movf	??_write_display+1,w,c
  9599  005460  224C               	addwfc	??_write_display+3,f,c
  9600  005462  5043               	movf	?___wmul,w,c
  9601  005464  244B               	addwf	??_write_display+2,w,c
  9602  005466  6ED9               	movwf	fsr2l,c
  9603  005468  5044               	movf	?___wmul+1,w,c
  9604  00546A  204C               	addwfc	??_write_display+3,w,c
  9605  00546C  6EDA               	movwf	fsr2h,c
  9606  00546E  CFDE F04D          	movff	postinc2,??_write_display+4
  9607  005472  CFDD F04E          	movff	postdec2,??_write_display+5
  9608  005476  C04E  F04D         	movff	??_write_display+5,??_write_display+4
  9609  00547A  6A4E               	clrf	??_write_display+5,c
  9610  00547C  504D               	movf	??_write_display+4,w,c
  9611  00547E  EC8F  F027         	call	_write
  9612  005482  4A4F               	infsnz	write_display@j,f,c
  9613  005484  2A50               	incf	write_display@j+1,f,c
  9614  005486  D7A2               	goto	l3173
  9615  005488                     u3470:
  9616  005488                     l3183:
  9617                           
  9618                           ;newmain.c: 1023: }
  9619                           ;newmain.c: 1024: MyStopI2C();
  9620  005488  EC40  F027         	call	_MyStopI2C	;wreg free
  9621  00548C  4A51               	infsnz	write_display@i,f,c
  9622  00548E  2A52               	incf	write_display@i+1,f,c
  9623  005490  BE52               	btfsc	write_display@i+1,7,c
  9624  005492  D778               	goto	l471
  9625  005494  5052               	movf	write_display@i+1,w,c
  9626  005496  E101               	bnz	l475
  9627  005498  D76F               	goto	L9
  9628  00549A                     l475:
  9629  00549A  0012               	return		;funcret
  9630  00549C                     __end_of_write_display:
  9631                           	opt stack 0
  9632                           tblptru	equ	0xFF8
  9633                           tblptrh	equ	0xFF7
  9634                           tblptrl	equ	0xFF6
  9635                           tablat	equ	0xFF5
  9636                           prodh	equ	0xFF4
  9637                           prodl	equ	0xFF3
  9638                           postinc0	equ	0xFEE
  9639                           wreg	equ	0xFE8
  9640                           postinc1	equ	0xFE6
  9641                           fsr1h	equ	0xFE2
  9642                           fsr1l	equ	0xFE1
  9643                           indf2	equ	0xFDF
  9644                           postinc2	equ	0xFDE
  9645                           postdec2	equ	0xFDD
  9646                           fsr2h	equ	0xFDA
  9647                           fsr2l	equ	0xFD9
  9648                           status	equ	0xFD8
  9649                           
  9650 ;; *************** function _write *****************
  9651 ;; Defined at:
  9652 ;;		line 364 in file "newmain.c"
  9653 ;; Parameters:    Size  Location     Type
  9654 ;;  data_out        1    wreg     unsigned char 
  9655 ;; Auto vars:     Size  Location     Type
  9656 ;;  data_out        1    3[COMRAM] unsigned char 
  9657 ;;  status          2    4[COMRAM] int 
  9658 ;;  data            1    2[COMRAM] char 
  9659 ;; Return value:  Size  Location     Type
  9660 ;;                  1    wreg      void 
  9661 ;; Registers used:
  9662 ;;		wreg, status,2, status,0, cstack
  9663 ;; Tracked objects:
  9664 ;;		On entry : 0/0
  9665 ;;		On exit  : 0/0
  9666 ;;		Unchanged: 0/0
  9667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9668 ;;      Params:         0       0       0       0       0       0       0
  9669 ;;      Locals:         4       0       0       0       0       0       0
  9670 ;;      Temps:          0       0       0       0       0       0       0
  9671 ;;      Totals:         4       0       0       0       0       0       0
  9672 ;;Total ram usage:        4 bytes
  9673 ;; Hardware stack levels used:    1
  9674 ;; Hardware stack levels required when called:    2
  9675 ;; This function calls:
  9676 ;;		_MyWriteI2C
  9677 ;; This function is called by:
  9678 ;;		_main
  9679 ;;		_write_display
  9680 ;;		_read_switch
  9681 ;; This function uses a non-reentrant model
  9682 ;;
  9683                           
  9684                           	psect	text17
  9685  004F1E                     __ptext17:
  9686                           	opt stack 0
  9687  004F1E                     _write:
  9688                           	opt stack 27
  9689                           
  9690                           ;incstack = 0
  9691                           ;write@data_out stored from wreg
  9692  004F1E  6E46               	movwf	write@data_out,c
  9693                           
  9694                           ;newmain.c: 366: signed char data;
  9695                           ;newmain.c: 367: int status;
  9696                           ;newmain.c: 368: data=SSPBUF;
  9697  004F20  CFC9 F045          	movff	4041,write@data	;volatile
  9698  004F24                     
  9699                           ;newmain.c: 370: status=MyWriteI2C(data_out);
  9700  004F24  5046               	movf	write@data_out,w,c
  9701  004F26  ECEF  F027         	call	_MyWriteI2C
  9702  004F2A  6E47               	movwf	write@status,c
  9703  004F2C  6A48               	clrf	write@status+1,c
  9704  004F2E  BE47               	btfsc	write@status,7,c
  9705  004F30  0648               	decf	write@status+1,f,c
  9706                           
  9707                           ;newmain.c: 371: if(status == -1){
  9708  004F32  2847               	incf	write@status,w,c
  9709  004F34  E106               	bnz	l3127
  9710  004F36  2848               	incf	write@status+1,w,c
  9711  004F38  A4D8               	btfss	status,2,c
  9712  004F3A  D003               	goto	l126
  9713                           
  9714                           ;newmain.c: 372: data=SSPBUF;
  9715  004F3C  CFC9 F045          	movff	4041,write@data	;volatile
  9716                           
  9717                           ;newmain.c: 373: SSPCON1bits.WCOL = 0;
  9718  004F40  9EC6               	bcf	4038,7,c	;volatile
  9719  004F42                     l126:
  9720  004F42                     l3127:
  9721                           
  9722                           ;newmain.c: 374: }
  9723                           ;newmain.c: 375: }while(status!=0);
  9724  004F42  5047               	movf	write@status,w,c
  9725  004F44  1048               	iorwf	write@status+1,w,c
  9726  004F46  B4D8               	btfsc	status,2,c
  9727  004F48  0012               	return	
  9728  004F4A  D7EC               	goto	l125
  9729  004F4C                     __end_of_write:
  9730                           	opt stack 0
  9731                           tblptru	equ	0xFF8
  9732                           tblptrh	equ	0xFF7
  9733                           tblptrl	equ	0xFF6
  9734                           tablat	equ	0xFF5
  9735                           prodh	equ	0xFF4
  9736                           prodl	equ	0xFF3
  9737                           postinc0	equ	0xFEE
  9738                           wreg	equ	0xFE8
  9739                           postinc1	equ	0xFE6
  9740                           fsr1h	equ	0xFE2
  9741                           fsr1l	equ	0xFE1
  9742                           indf2	equ	0xFDF
  9743                           postinc2	equ	0xFDE
  9744                           postdec2	equ	0xFDD
  9745                           fsr2h	equ	0xFDA
  9746                           fsr2l	equ	0xFD9
  9747                           status	equ	0xFD8
  9748                           
  9749 ;; *************** function _MyWriteI2C *****************
  9750 ;; Defined at:
  9751 ;;		line 1112 in file "newmain.c"
  9752 ;; Parameters:    Size  Location     Type
  9753 ;;  data_out        1    wreg     unsigned char 
  9754 ;; Auto vars:     Size  Location     Type
  9755 ;;  data_out        1    1[COMRAM] unsigned char 
  9756 ;; Return value:  Size  Location     Type
  9757 ;;                  1    wreg      char 
  9758 ;; Registers used:
  9759 ;;		wreg, status,2, status,0, cstack
  9760 ;; Tracked objects:
  9761 ;;		On entry : 0/0
  9762 ;;		On exit  : 0/0
  9763 ;;		Unchanged: 0/0
  9764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9765 ;;      Params:         0       0       0       0       0       0       0
  9766 ;;      Locals:         1       0       0       0       0       0       0
  9767 ;;      Temps:          0       0       0       0       0       0       0
  9768 ;;      Totals:         1       0       0       0       0       0       0
  9769 ;;Total ram usage:        1 bytes
  9770 ;; Hardware stack levels used:    1
  9771 ;; Hardware stack levels required when called:    1
  9772 ;; This function calls:
  9773 ;;		_MyIdleI2C
  9774 ;; This function is called by:
  9775 ;;		_write
  9776 ;;		_MyputsI2C
  9777 ;; This function uses a non-reentrant model
  9778 ;;
  9779                           
  9780                           	psect	text18
  9781  004FDE                     __ptext18:
  9782                           	opt stack 0
  9783  004FDE                     _MyWriteI2C:
  9784                           	opt stack 27
  9785                           
  9786                           ;incstack = 0
  9787                           ;MyWriteI2C@data_out stored from wreg
  9788  004FDE  6E44               	movwf	MyWriteI2C@data_out,c
  9789                           
  9790                           ;newmain.c: 1114: SSPBUF = data_out;
  9791  004FE0  C044  FFC9         	movff	MyWriteI2C@data_out,4041	;volatile
  9792                           
  9793                           ;newmain.c: 1115: if ( SSPCON1bits.WCOL )
  9794  004FE4  AEC6               	btfss	4038,7,c	;volatile
  9795  004FE6  D002               	goto	l519
  9796                           
  9797                           ;newmain.c: 1116: return ( -1 );
  9798  004FE8  0EFF               	movlw	255
  9799  004FEA  0012               	return	
  9800  004FEC                     l519:
  9801                           
  9802                           ;newmain.c: 1117: else
  9803                           ;newmain.c: 1118: {
  9804                           ;newmain.c: 1119: if( ((SSPCON1&0x0F)!=0x08) && ((SSPCON1&0x0F)!=0x0B) )
  9805  004FEC  50C6               	movf	4038,w,c	;volatile
  9806  004FEE  0B0F               	andlw	15
  9807  004FF0  0A08               	xorlw	8
  9808  004FF2  B4D8               	btfsc	status,2,c
  9809  004FF4  D00F               	goto	l522
  9810  004FF6  50C6               	movf	4038,w,c	;volatile
  9811  004FF8  0B0F               	andlw	15
  9812  004FFA  0A0B               	xorlw	11
  9813  004FFC  B4D8               	btfsc	status,2,c
  9814  004FFE  D00A               	goto	l522
  9815                           
  9816                           ;newmain.c: 1120: {
  9817                           ;newmain.c: 1121: SSPCON1bits.CKP = 1;
  9818  005000  88C6               	bsf	4038,4,c	;volatile
  9819  005002  A69E               	btfss	3998,3,c	;volatile
  9820  005004  D7FE               	goto	l524
  9821                           
  9822                           ;newmain.c: 1124: if ( ( !SSPSTATbits.R_W ) && ( !SSPSTATbits.BF ) )
  9823  005006  A4C7               	btfss	4039,2,c	;volatile
  9824  005008  B0C7               	btfsc	4039,0,c	;volatile
  9825  00500A  D002               	goto	l526
  9826                           
  9827                           ;newmain.c: 1125: {
  9828                           ;newmain.c: 1126: return ( -2 );
  9829  00500C  0EFE               	movlw	254
  9830                           
  9831                           ;newmain.c: 1127: }
  9832  00500E  0012               	return	
  9833  005010                     l526:
  9834                           
  9835                           ;newmain.c: 1128: else
  9836                           ;newmain.c: 1129: {
  9837                           ;newmain.c: 1130: return ( 0 );
  9838  005010  0E00               	movlw	0
  9839                           
  9840                           ;newmain.c: 1131: }
  9841                           ;newmain.c: 1132: }
  9842  005012  0012               	return	
  9843  005014                     l522:
  9844                           
  9845                           ;newmain.c: 1133: else if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
  9846  005014  50C6               	movf	4038,w,c	;volatile
  9847  005016  0B0F               	andlw	15
  9848  005018  0A08               	xorlw	8
  9849  00501A  B4D8               	btfsc	status,2,c
  9850  00501C  D005               	goto	u3360
  9851  00501E  50C6               	movf	4038,w,c	;volatile
  9852  005020  0B0F               	andlw	15
  9853  005022  0A0B               	xorlw	11
  9854  005024  A4D8               	btfss	status,2,c
  9855  005026  0012               	return	
  9856  005028                     u3360:
  9857                           
  9858                           ;newmain.c: 1134: {
  9859                           ;newmain.c: 1135: while( SSPSTATbits.BF );
  9860  005028  B0C7               	btfsc	4039,0,c	;volatile
  9861  00502A  D7FE               	goto	u3360
  9862                           
  9863                           ;newmain.c: 1136: MyIdleI2C();
  9864  00502C  EC45  F027         	call	_MyIdleI2C	;wreg free
  9865                           
  9866                           ;newmain.c: 1137: if ( SSPCON2bits.ACKSTAT )
  9867  005030  ACC5               	btfss	4037,6,c	;volatile
  9868  005032  D002               	goto	l535
  9869                           
  9870                           ;newmain.c: 1138: return ( -2 );
  9871  005034  0EFE               	movlw	254
  9872  005036  0012               	return	
  9873  005038                     l535:
  9874                           
  9875                           ;newmain.c: 1139: else return ( 0 );
  9876  005038  0E00               	movlw	0
  9877  00503A  0012               	return	
  9878  00503C                     __end_of_MyWriteI2C:
  9879                           	opt stack 0
  9880                           tblptru	equ	0xFF8
  9881                           tblptrh	equ	0xFF7
  9882                           tblptrl	equ	0xFF6
  9883                           tablat	equ	0xFF5
  9884                           prodh	equ	0xFF4
  9885                           prodl	equ	0xFF3
  9886                           postinc0	equ	0xFEE
  9887                           wreg	equ	0xFE8
  9888                           postinc1	equ	0xFE6
  9889                           fsr1h	equ	0xFE2
  9890                           fsr1l	equ	0xFE1
  9891                           indf2	equ	0xFDF
  9892                           postinc2	equ	0xFDE
  9893                           postdec2	equ	0xFDD
  9894                           fsr2h	equ	0xFDA
  9895                           fsr2l	equ	0xFD9
  9896                           status	equ	0xFD8
  9897                           
  9898 ;; *************** function _MyIdleI2C *****************
  9899 ;; Defined at:
  9900 ;;		line 1107 in file "newmain.c"
  9901 ;; Parameters:    Size  Location     Type
  9902 ;;		None
  9903 ;; Auto vars:     Size  Location     Type
  9904 ;;		None
  9905 ;; Return value:  Size  Location     Type
  9906 ;;                  1    wreg      void 
  9907 ;; Registers used:
  9908 ;;		wreg, status,2, status,0
  9909 ;; Tracked objects:
  9910 ;;		On entry : 0/0
  9911 ;;		On exit  : 0/0
  9912 ;;		Unchanged: 0/0
  9913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9914 ;;      Params:         0       0       0       0       0       0       0
  9915 ;;      Locals:         0       0       0       0       0       0       0
  9916 ;;      Temps:          1       0       0       0       0       0       0
  9917 ;;      Totals:         1       0       0       0       0       0       0
  9918 ;;Total ram usage:        1 bytes
  9919 ;; Hardware stack levels used:    1
  9920 ;; This function calls:
  9921 ;;		Nothing
  9922 ;; This function is called by:
  9923 ;;		_main
  9924 ;;		_write_display
  9925 ;;		_read_switch
  9926 ;;		_MyWriteI2C
  9927 ;; This function uses a non-reentrant model
  9928 ;;
  9929                           
  9930                           	psect	text19
  9931  004E8A                     __ptext19:
  9932                           	opt stack 0
  9933  004E8A                     _MyIdleI2C:
  9934                           	opt stack 27
  9935                           
  9936                           ;newmain.c: 1110: continue;
  9937                           
  9938                           ;newmain.c: 1109: while ( ( SSPCON2 & 0x1F ) || ( SSPSTATbits.R_W ) )
  9939                           
  9940                           ;incstack = 0
  9941  004E8A  CFC5 F043          	movff	4037,??_MyIdleI2C	;volatile
  9942  004E8E  0E1F               	movlw	31
  9943  004E90  1643               	andwf	??_MyIdleI2C,f,c
  9944  004E92  A4D8               	btfss	status,2,c
  9945  004E94  D7FA               	goto	_MyIdleI2C
  9946  004E96  A4C7               	btfss	4039,2,c	;volatile
  9947  004E98  0012               	return	
  9948  004E9A  D7F7               	goto	_MyIdleI2C
  9949  004E9C                     __end_of_MyIdleI2C:
  9950                           	opt stack 0
  9951                           tblptru	equ	0xFF8
  9952                           tblptrh	equ	0xFF7
  9953                           tblptrl	equ	0xFF6
  9954                           tablat	equ	0xFF5
  9955                           prodh	equ	0xFF4
  9956                           prodl	equ	0xFF3
  9957                           postinc0	equ	0xFEE
  9958                           wreg	equ	0xFE8
  9959                           postinc1	equ	0xFE6
  9960                           fsr1h	equ	0xFE2
  9961                           fsr1l	equ	0xFE1
  9962                           indf2	equ	0xFDF
  9963                           postinc2	equ	0xFDE
  9964                           postdec2	equ	0xFDD
  9965                           fsr2h	equ	0xFDA
  9966                           fsr2l	equ	0xFD9
  9967                           status	equ	0xFD8
  9968                           
  9969 ;; *************** function _MyStopI2C *****************
  9970 ;; Defined at:
  9971 ;;		line 1099 in file "newmain.c"
  9972 ;; Parameters:    Size  Location     Type
  9973 ;;		None
  9974 ;; Auto vars:     Size  Location     Type
  9975 ;;		None
  9976 ;; Return value:  Size  Location     Type
  9977 ;;                  1    wreg      void 
  9978 ;; Registers used:
  9979 ;;		None
  9980 ;; Tracked objects:
  9981 ;;		On entry : 0/0
  9982 ;;		On exit  : 0/0
  9983 ;;		Unchanged: 0/0
  9984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9985 ;;      Params:         0       0       0       0       0       0       0
  9986 ;;      Locals:         0       0       0       0       0       0       0
  9987 ;;      Temps:          0       0       0       0       0       0       0
  9988 ;;      Totals:         0       0       0       0       0       0       0
  9989 ;;Total ram usage:        0 bytes
  9990 ;; Hardware stack levels used:    1
  9991 ;; This function calls:
  9992 ;;		Nothing
  9993 ;; This function is called by:
  9994 ;;		_main
  9995 ;;		_write_display
  9996 ;;		_read_switch
  9997 ;; This function uses a non-reentrant model
  9998 ;;
  9999                           
 10000                           	psect	text20
 10001  004E80                     __ptext20:
 10002                           	opt stack 0
 10003  004E80                     _MyStopI2C:
 10004                           	opt stack 29
 10005                           
 10006                           ;newmain.c: 1101: SSPCON2bits.PEN = 1;
 10007                           
 10008                           ;incstack = 0
 10009  004E80  84C5               	bsf	4037,2,c	;volatile
 10010  004E82  0012               	return		;funcret
 10011  004E84                     __end_of_MyStopI2C:
 10012                           	opt stack 0
 10013                           tblptru	equ	0xFF8
 10014                           tblptrh	equ	0xFF7
 10015                           tblptrl	equ	0xFF6
 10016                           tablat	equ	0xFF5
 10017                           prodh	equ	0xFF4
 10018                           prodl	equ	0xFF3
 10019                           postinc0	equ	0xFEE
 10020                           wreg	equ	0xFE8
 10021                           postinc1	equ	0xFE6
 10022                           fsr1h	equ	0xFE2
 10023                           fsr1l	equ	0xFE1
 10024                           indf2	equ	0xFDF
 10025                           postinc2	equ	0xFDE
 10026                           postdec2	equ	0xFDD
 10027                           fsr2h	equ	0xFDA
 10028                           fsr2l	equ	0xFD9
 10029                           status	equ	0xFD8
 10030                           
 10031 ;; *************** function _MyStartI2C *****************
 10032 ;; Defined at:
 10033 ;;		line 1095 in file "newmain.c"
 10034 ;; Parameters:    Size  Location     Type
 10035 ;;		None
 10036 ;; Auto vars:     Size  Location     Type
 10037 ;;		None
 10038 ;; Return value:  Size  Location     Type
 10039 ;;                  1    wreg      void 
 10040 ;; Registers used:
 10041 ;;		None
 10042 ;; Tracked objects:
 10043 ;;		On entry : 0/0
 10044 ;;		On exit  : 0/0
 10045 ;;		Unchanged: 0/0
 10046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10047 ;;      Params:         0       0       0       0       0       0       0
 10048 ;;      Locals:         0       0       0       0       0       0       0
 10049 ;;      Temps:          0       0       0       0       0       0       0
 10050 ;;      Totals:         0       0       0       0       0       0       0
 10051 ;;Total ram usage:        0 bytes
 10052 ;; Hardware stack levels used:    1
 10053 ;; This function calls:
 10054 ;;		Nothing
 10055 ;; This function is called by:
 10056 ;;		_main
 10057 ;;		_write_display
 10058 ;;		_read_switch
 10059 ;; This function uses a non-reentrant model
 10060 ;;
 10061                           
 10062                           	psect	text21
 10063  004E7C                     __ptext21:
 10064                           	opt stack 0
 10065  004E7C                     _MyStartI2C:
 10066                           	opt stack 29
 10067                           
 10068                           ;newmain.c: 1097: SSPCON2bits.SEN = 1;
 10069                           
 10070                           ;incstack = 0
 10071  004E7C  80C5               	bsf	4037,0,c	;volatile
 10072  004E7E  0012               	return		;funcret
 10073  004E80                     __end_of_MyStartI2C:
 10074                           	opt stack 0
 10075                           tblptru	equ	0xFF8
 10076                           tblptrh	equ	0xFF7
 10077                           tblptrl	equ	0xFF6
 10078                           tablat	equ	0xFF5
 10079                           prodh	equ	0xFF4
 10080                           prodl	equ	0xFF3
 10081                           postinc0	equ	0xFEE
 10082                           wreg	equ	0xFE8
 10083                           postinc1	equ	0xFE6
 10084                           fsr1h	equ	0xFE2
 10085                           fsr1l	equ	0xFE1
 10086                           indf2	equ	0xFDF
 10087                           postinc2	equ	0xFDE
 10088                           postdec2	equ	0xFDD
 10089                           fsr2h	equ	0xFDA
 10090                           fsr2l	equ	0xFD9
 10091                           status	equ	0xFD8
 10092                           
 10093 ;; *************** function _set_led *****************
 10094 ;; Defined at:
 10095 ;;		line 1035 in file "newmain.c"
 10096 ;; Parameters:    Size  Location     Type
 10097 ;;  i               1    wreg     unsigned char 
 10098 ;; Auto vars:     Size  Location     Type
 10099 ;;  i               1   18[COMRAM] unsigned char 
 10100 ;;  led             2   16[COMRAM] int 
 10101 ;;  matrix          2   14[COMRAM] int 
 10102 ;; Return value:  Size  Location     Type
 10103 ;;                  1    wreg      void 
 10104 ;; Registers used:
 10105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10106 ;; Tracked objects:
 10107 ;;		On entry : 0/0
 10108 ;;		On exit  : 0/0
 10109 ;;		Unchanged: 0/0
 10110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10111 ;;      Params:         0       0       0       0       0       0       0
 10112 ;;      Locals:         5       0       0       0       0       0       0
 10113 ;;      Temps:          8       0       0       0       0       0       0
 10114 ;;      Totals:        13       0       0       0       0       0       0
 10115 ;;Total ram usage:       13 bytes
 10116 ;; Hardware stack levels used:    1
 10117 ;; Hardware stack levels required when called:    1
 10118 ;; This function calls:
 10119 ;;		___wmul
 10120 ;; This function is called by:
 10121 ;;		_main
 10122 ;;		_animation0
 10123 ;;		_animation1
 10124 ;;		_animation2
 10125 ;;		_animation3
 10126 ;;		_animation4
 10127 ;;		_animation5
 10128 ;;		_animation6
 10129 ;;		_animation7
 10130 ;; This function uses a non-reentrant model
 10131 ;;
 10132                           
 10133                           	psect	text22
 10134  005204                     __ptext22:
 10135                           	opt stack 0
 10136  005204                     _set_led:
 10137                           	opt stack 29
 10138                           
 10139                           ;incstack = 0
 10140                           ;set_led@i stored from wreg
 10141  005204  6E55               	movwf	set_led@i,c
 10142                           
 10143                           ;newmain.c: 1037: int matrix=i>>4;
 10144  005206  C055  F049         	movff	set_led@i,??_set_led
 10145  00520A  3A49               	swapf	??_set_led,f,c
 10146  00520C  0E0F               	movlw	15
 10147  00520E  1649               	andwf	??_set_led,f,c
 10148  005210  5049               	movf	??_set_led,w,c
 10149  005212  6E51               	movwf	set_led@matrix,c
 10150  005214  6A52               	clrf	set_led@matrix+1,c
 10151                           
 10152                           ;newmain.c: 1038: int led=i&0b1111;
 10153  005216  C055  F049         	movff	set_led@i,??_set_led
 10154  00521A  0E0F               	movlw	15
 10155  00521C  1649               	andwf	??_set_led,f,c
 10156  00521E  5049               	movf	??_set_led,w,c
 10157  005220  6E53               	movwf	set_led@led,c
 10158  005222  6A54               	clrf	set_led@led+1,c
 10159                           
 10160                           ;newmain.c: 1039: matrices[matrix].display_buffer[ledLUT[led]>>4]|=(1<<(ledLUT[led]&0x0f
      +                          ));
 10161  005224  0EEF               	movlw	low _ledLUT
 10162  005226  2453               	addwf	set_led@led,w,c
 10163  005228  6EF6               	movwf	tblptrl,c
 10164  00522A  0E7F               	movlw	high _ledLUT
 10165  00522C  2054               	addwfc	set_led@led+1,w,c
 10166  00522E  6EF7               	movwf	tblptrh,c
 10167  005230                     	if	0	;There are less than 3 active tblptr bytes
 10168  005230                     	endif
 10169  005230  0008               	tblrd		*
 10170  005232  CFF5 F049          	movff	tablat,??_set_led
 10171  005236  0E0F               	movlw	15
 10172  005238  1649               	andwf	??_set_led,f,c
 10173  00523A  0E01               	movlw	1
 10174  00523C  6E4A               	movwf	(??_set_led+1)& (0+255),c
 10175  00523E  0E00               	movlw	0
 10176  005240  6E4B               	movwf	(??_set_led+2)& (0+255),c
 10177  005242  2A49               	incf	??_set_led,f,c
 10178  005244  D003               	goto	u3444
 10179  005246                     u3445:
 10180  005246  90D8               	bcf	status,0,c
 10181  005248  364A               	rlcf	??_set_led+1,f,c
 10182  00524A  364B               	rlcf	??_set_led+2,f,c
 10183  00524C                     u3444:
 10184  00524C  2E49               	decfsz	??_set_led,f,c
 10185  00524E  D7FB               	goto	u3445
 10186  005250  C051  F043         	movff	set_led@matrix,___wmul@multiplier
 10187  005254  C052  F044         	movff	set_led@matrix+1,___wmul@multiplier+1
 10188  005258  0E00               	movlw	0
 10189  00525A  6E46               	movwf	___wmul@multiplicand+1,c
 10190  00525C  0E1D               	movlw	29
 10191  00525E  6E45               	movwf	___wmul@multiplicand,c
 10192  005260  EC7C  F027         	call	___wmul	;wreg free
 10193  005264  0EEF               	movlw	low _ledLUT
 10194  005266  2453               	addwf	set_led@led,w,c
 10195  005268  6EF6               	movwf	tblptrl,c
 10196  00526A  0E7F               	movlw	high _ledLUT
 10197  00526C  2054               	addwfc	set_led@led+1,w,c
 10198  00526E  6EF7               	movwf	tblptrh,c
 10199  005270                     	if	0	;There are less than 3 active tblptr bytes
 10200  005270                     	endif
 10201  005270  0008               	tblrd		*
 10202  005272  CFF5 F04C          	movff	tablat,??_set_led+3
 10203  005276  384C               	swapf	??_set_led+3,w,c
 10204  005278  0B0F               	andlw	15
 10205  00527A  6E4D               	movwf	(??_set_led+4)& (0+255),c
 10206  00527C  6A4E               	clrf	(??_set_led+5)& (0+255),c
 10207  00527E  90D8               	bcf	status,0,c
 10208  005280  364D               	rlcf	??_set_led+4,f,c
 10209  005282  364E               	rlcf	??_set_led+5,f,c
 10210  005284  0E0D               	movlw	13
 10211  005286  264D               	addwf	??_set_led+4,f,c
 10212  005288  0E00               	movlw	0
 10213  00528A  224E               	addwfc	??_set_led+5,f,c
 10214  00528C  0E80               	movlw	low _matrices
 10215  00528E  6E4F               	movwf	(??_set_led+6)& (0+255),c
 10216  005290  0E00               	movlw	high _matrices
 10217  005292  6E50               	movwf	(??_set_led+7)& (0+255),c
 10218  005294  504D               	movf	??_set_led+4,w,c
 10219  005296  264F               	addwf	??_set_led+6,f,c
 10220  005298  504E               	movf	??_set_led+5,w,c
 10221  00529A  2250               	addwfc	??_set_led+7,f,c
 10222  00529C  5043               	movf	?___wmul,w,c
 10223  00529E  244F               	addwf	??_set_led+6,w,c
 10224  0052A0  6ED9               	movwf	fsr2l,c
 10225  0052A2  5044               	movf	?___wmul+1,w,c
 10226  0052A4  2050               	addwfc	??_set_led+7,w,c
 10227  0052A6  6EDA               	movwf	fsr2h,c
 10228  0052A8  504A               	movf	??_set_led+1,w,c
 10229  0052AA  12DE               	iorwf	postinc2,f,c
 10230  0052AC  504B               	movf	??_set_led+2,w,c
 10231  0052AE  12DD               	iorwf	postdec2,f,c
 10232  0052B0  0012               	return		;funcret
 10233  0052B2                     __end_of_set_led:
 10234                           	opt stack 0
 10235                           tblptru	equ	0xFF8
 10236                           tblptrh	equ	0xFF7
 10237                           tblptrl	equ	0xFF6
 10238                           tablat	equ	0xFF5
 10239                           prodh	equ	0xFF4
 10240                           prodl	equ	0xFF3
 10241                           postinc0	equ	0xFEE
 10242                           wreg	equ	0xFE8
 10243                           postinc1	equ	0xFE6
 10244                           fsr1h	equ	0xFE2
 10245                           fsr1l	equ	0xFE1
 10246                           indf2	equ	0xFDF
 10247                           postinc2	equ	0xFDE
 10248                           postdec2	equ	0xFDD
 10249                           fsr2h	equ	0xFDA
 10250                           fsr2l	equ	0xFD9
 10251                           status	equ	0xFD8
 10252                           
 10253 ;; *************** function _clr_led *****************
 10254 ;; Defined at:
 10255 ;;		line 1029 in file "newmain.c"
 10256 ;; Parameters:    Size  Location     Type
 10257 ;;  i               1    wreg     unsigned char 
 10258 ;; Auto vars:     Size  Location     Type
 10259 ;;  i               1   20[COMRAM] unsigned char 
 10260 ;;  led             2   18[COMRAM] int 
 10261 ;;  matrix          2   16[COMRAM] int 
 10262 ;; Return value:  Size  Location     Type
 10263 ;;                  1    wreg      void 
 10264 ;; Registers used:
 10265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10266 ;; Tracked objects:
 10267 ;;		On entry : 0/0
 10268 ;;		On exit  : 0/0
 10269 ;;		Unchanged: 0/0
 10270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10271 ;;      Params:         0       0       0       0       0       0       0
 10272 ;;      Locals:         5       0       0       0       0       0       0
 10273 ;;      Temps:         10       0       0       0       0       0       0
 10274 ;;      Totals:        15       0       0       0       0       0       0
 10275 ;;Total ram usage:       15 bytes
 10276 ;; Hardware stack levels used:    1
 10277 ;; Hardware stack levels required when called:    1
 10278 ;; This function calls:
 10279 ;;		___wmul
 10280 ;; This function is called by:
 10281 ;;		_main
 10282 ;;		_animation0
 10283 ;;		_animation1
 10284 ;;		_animation2
 10285 ;;		_animation3
 10286 ;;		_animation4
 10287 ;;		_animation5
 10288 ;;		_animation6
 10289 ;;		_animation7
 10290 ;; This function uses a non-reentrant model
 10291 ;;
 10292                           
 10293                           	psect	text23
 10294  0052B2                     __ptext23:
 10295                           	opt stack 0
 10296  0052B2                     _clr_led:
 10297                           	opt stack 29
 10298                           
 10299                           ;incstack = 0
 10300                           ;clr_led@i stored from wreg
 10301  0052B2  6E57               	movwf	clr_led@i,c
 10302                           
 10303                           ;newmain.c: 1031: int matrix=i>>4;
 10304  0052B4  C057  F049         	movff	clr_led@i,??_clr_led
 10305  0052B8  3A49               	swapf	??_clr_led,f,c
 10306  0052BA  0E0F               	movlw	15
 10307  0052BC  1649               	andwf	??_clr_led,f,c
 10308  0052BE  5049               	movf	??_clr_led,w,c
 10309  0052C0  6E53               	movwf	clr_led@matrix,c
 10310  0052C2  6A54               	clrf	clr_led@matrix+1,c
 10311                           
 10312                           ;newmain.c: 1032: int led=i&0b1111;
 10313  0052C4  C057  F049         	movff	clr_led@i,??_clr_led
 10314  0052C8  0E0F               	movlw	15
 10315  0052CA  1649               	andwf	??_clr_led,f,c
 10316  0052CC  5049               	movf	??_clr_led,w,c
 10317  0052CE  6E55               	movwf	clr_led@led,c
 10318  0052D0  6A56               	clrf	clr_led@led+1,c
 10319                           
 10320                           ;newmain.c: 1033: matrices[matrix].display_buffer[ledLUT[led]>>4]&=~(1<<(ledLUT[led]&0x0
      +                          f));
 10321  0052D2  0EEF               	movlw	low _ledLUT
 10322  0052D4  2455               	addwf	clr_led@led,w,c
 10323  0052D6  6EF6               	movwf	tblptrl,c
 10324  0052D8  0E7F               	movlw	high _ledLUT
 10325  0052DA  2056               	addwfc	clr_led@led+1,w,c
 10326  0052DC  6EF7               	movwf	tblptrh,c
 10327  0052DE                     	if	0	;There are less than 3 active tblptr bytes
 10328  0052DE                     	endif
 10329  0052DE  0008               	tblrd		*
 10330  0052E0  CFF5 F049          	movff	tablat,??_clr_led
 10331  0052E4  0E0F               	movlw	15
 10332  0052E6  1649               	andwf	??_clr_led,f,c
 10333  0052E8  0E01               	movlw	1
 10334  0052EA  6E4A               	movwf	(??_clr_led+1)& (0+255),c
 10335  0052EC  0E00               	movlw	0
 10336  0052EE  6E4B               	movwf	(??_clr_led+2)& (0+255),c
 10337  0052F0  2A49               	incf	??_clr_led,f,c
 10338  0052F2  D003               	goto	u3494
 10339  0052F4                     u3495:
 10340  0052F4  90D8               	bcf	status,0,c
 10341  0052F6  364A               	rlcf	??_clr_led+1,f,c
 10342  0052F8  364B               	rlcf	??_clr_led+2,f,c
 10343  0052FA                     u3494:
 10344  0052FA  2E49               	decfsz	??_clr_led,f,c
 10345  0052FC  D7FB               	goto	u3495
 10346  0052FE  1C4A               	comf	??_clr_led+1,w,c
 10347  005300  6E4C               	movwf	(??_clr_led+3)& (0+255),c
 10348  005302  1C4B               	comf	??_clr_led+2,w,c
 10349  005304  6E4D               	movwf	(??_clr_led+4)& (0+255),c
 10350  005306  C053  F043         	movff	clr_led@matrix,___wmul@multiplier
 10351  00530A  C054  F044         	movff	clr_led@matrix+1,___wmul@multiplier+1
 10352  00530E  0E00               	movlw	0
 10353  005310  6E46               	movwf	___wmul@multiplicand+1,c
 10354  005312  0E1D               	movlw	29
 10355  005314  6E45               	movwf	___wmul@multiplicand,c
 10356  005316  EC7C  F027         	call	___wmul	;wreg free
 10357  00531A  0EEF               	movlw	low _ledLUT
 10358  00531C  2455               	addwf	clr_led@led,w,c
 10359  00531E  6EF6               	movwf	tblptrl,c
 10360  005320  0E7F               	movlw	high _ledLUT
 10361  005322  2056               	addwfc	clr_led@led+1,w,c
 10362  005324  6EF7               	movwf	tblptrh,c
 10363  005326                     	if	0	;There are less than 3 active tblptr bytes
 10364  005326                     	endif
 10365  005326  0008               	tblrd		*
 10366  005328  CFF5 F04E          	movff	tablat,??_clr_led+5
 10367  00532C  384E               	swapf	??_clr_led+5,w,c
 10368  00532E  0B0F               	andlw	15
 10369  005330  6E4F               	movwf	(??_clr_led+6)& (0+255),c
 10370  005332  6A50               	clrf	(??_clr_led+7)& (0+255),c
 10371  005334  90D8               	bcf	status,0,c
 10372  005336  364F               	rlcf	??_clr_led+6,f,c
 10373  005338  3650               	rlcf	??_clr_led+7,f,c
 10374  00533A  0E0D               	movlw	13
 10375  00533C  264F               	addwf	??_clr_led+6,f,c
 10376  00533E  0E00               	movlw	0
 10377  005340  2250               	addwfc	??_clr_led+7,f,c
 10378  005342  0E80               	movlw	low _matrices
 10379  005344  6E51               	movwf	(??_clr_led+8)& (0+255),c
 10380  005346  0E00               	movlw	high _matrices
 10381  005348  6E52               	movwf	(??_clr_led+9)& (0+255),c
 10382  00534A  504F               	movf	??_clr_led+6,w,c
 10383  00534C  2651               	addwf	??_clr_led+8,f,c
 10384  00534E  5050               	movf	??_clr_led+7,w,c
 10385  005350  2252               	addwfc	??_clr_led+9,f,c
 10386  005352  5043               	movf	?___wmul,w,c
 10387  005354  2451               	addwf	??_clr_led+8,w,c
 10388  005356  6ED9               	movwf	fsr2l,c
 10389  005358  5044               	movf	?___wmul+1,w,c
 10390  00535A  2052               	addwfc	??_clr_led+9,w,c
 10391  00535C  6EDA               	movwf	fsr2h,c
 10392  00535E  504C               	movf	??_clr_led+3,w,c
 10393  005360  16DE               	andwf	postinc2,f,c
 10394  005362  504D               	movf	??_clr_led+4,w,c
 10395  005364  16DD               	andwf	postdec2,f,c
 10396  005366  0012               	return		;funcret
 10397  005368                     __end_of_clr_led:
 10398                           	opt stack 0
 10399                           tblptru	equ	0xFF8
 10400                           tblptrh	equ	0xFF7
 10401                           tblptrl	equ	0xFF6
 10402                           tablat	equ	0xFF5
 10403                           prodh	equ	0xFF4
 10404                           prodl	equ	0xFF3
 10405                           postinc0	equ	0xFEE
 10406                           wreg	equ	0xFE8
 10407                           postinc1	equ	0xFE6
 10408                           fsr1h	equ	0xFE2
 10409                           fsr1l	equ	0xFE1
 10410                           indf2	equ	0xFDF
 10411                           postinc2	equ	0xFDE
 10412                           postdec2	equ	0xFDD
 10413                           fsr2h	equ	0xFDA
 10414                           fsr2l	equ	0xFD9
 10415                           status	equ	0xFD8
 10416                           
 10417 ;; *************** function ___wmul *****************
 10418 ;; Defined at:
 10419 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
 10420 ;; Parameters:    Size  Location     Type
 10421 ;;  multiplier      2    0[COMRAM] unsigned int 
 10422 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10423 ;; Auto vars:     Size  Location     Type
 10424 ;;  product         2    4[COMRAM] unsigned int 
 10425 ;; Return value:  Size  Location     Type
 10426 ;;                  2    0[COMRAM] unsigned int 
 10427 ;; Registers used:
 10428 ;;		wreg, status,2, status,0, prodl, prodh
 10429 ;; Tracked objects:
 10430 ;;		On entry : 0/0
 10431 ;;		On exit  : 0/0
 10432 ;;		Unchanged: 0/0
 10433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10434 ;;      Params:         4       0       0       0       0       0       0
 10435 ;;      Locals:         2       0       0       0       0       0       0
 10436 ;;      Temps:          0       0       0       0       0       0       0
 10437 ;;      Totals:         6       0       0       0       0       0       0
 10438 ;;Total ram usage:        6 bytes
 10439 ;; Hardware stack levels used:    1
 10440 ;; This function calls:
 10441 ;;		Nothing
 10442 ;; This function is called by:
 10443 ;;		_main
 10444 ;;		_write_display
 10445 ;;		_clr_led
 10446 ;;		_set_led
 10447 ;;		_is_key_pressed
 10448 ;;		_was_key_pressed
 10449 ;;		_read_switch
 10450 ;;		_is_led
 10451 ;; This function uses a non-reentrant model
 10452 ;;
 10453                           
 10454                           	psect	text24
 10455  004EF8                     __ptext24:
 10456                           	opt stack 0
 10457  004EF8                     ___wmul:
 10458                           	opt stack 29
 10459                           
 10460                           ;incstack = 0
 10461  004EF8  5043               	movf	___wmul@multiplier,w,c
 10462  004EFA  0245               	mulwf	___wmul@multiplicand,c
 10463  004EFC  CFF3 F047          	movff	prodl,___wmul@product
 10464  004F00  CFF4 F048          	movff	prodh,___wmul@product+1
 10465  004F04  5043               	movf	___wmul@multiplier,w,c
 10466  004F06  0246               	mulwf	___wmul@multiplicand+1,c
 10467  004F08  50F3               	movf	prodl,w,c
 10468  004F0A  2648               	addwf	___wmul@product+1,f,c
 10469  004F0C  5044               	movf	___wmul@multiplier+1,w,c
 10470  004F0E  0245               	mulwf	___wmul@multiplicand,c
 10471  004F10  50F3               	movf	prodl,w,c
 10472  004F12  2648               	addwf	___wmul@product+1,f,c
 10473  004F14  C047  F043         	movff	___wmul@product,?___wmul
 10474  004F18  C048  F044         	movff	___wmul@product+1,?___wmul+1
 10475  004F1C  0012               	return	
 10476  004F1E                     __end_of___wmul:
 10477                           	opt stack 0
 10478                           tblptru	equ	0xFF8
 10479                           tblptrh	equ	0xFF7
 10480                           tblptrl	equ	0xFF6
 10481                           tablat	equ	0xFF5
 10482                           prodh	equ	0xFF4
 10483                           prodl	equ	0xFF3
 10484                           postinc0	equ	0xFEE
 10485                           wreg	equ	0xFE8
 10486                           postinc1	equ	0xFE6
 10487                           fsr1h	equ	0xFE2
 10488                           fsr1l	equ	0xFE1
 10489                           indf2	equ	0xFDF
 10490                           postinc2	equ	0xFDE
 10491                           postdec2	equ	0xFDD
 10492                           fsr2h	equ	0xFDA
 10493                           fsr2l	equ	0xFD9
 10494                           status	equ	0xFD8
 10495                           
 10496 ;; *************** function ___awdiv *****************
 10497 ;; Defined at:
 10498 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awdiv.c"
 10499 ;; Parameters:    Size  Location     Type
 10500 ;;  dividend        2    0[COMRAM] int 
 10501 ;;  divisor         2    2[COMRAM] int 
 10502 ;; Auto vars:     Size  Location     Type
 10503 ;;  quotient        2    6[COMRAM] int 
 10504 ;;  sign            1    5[COMRAM] unsigned char 
 10505 ;;  counter         1    4[COMRAM] unsigned char 
 10506 ;; Return value:  Size  Location     Type
 10507 ;;                  2    0[COMRAM] int 
 10508 ;; Registers used:
 10509 ;;		wreg, status,2, status,0
 10510 ;; Tracked objects:
 10511 ;;		On entry : 0/0
 10512 ;;		On exit  : 0/0
 10513 ;;		Unchanged: 0/0
 10514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10515 ;;      Params:         4       0       0       0       0       0       0
 10516 ;;      Locals:         4       0       0       0       0       0       0
 10517 ;;      Temps:          0       0       0       0       0       0       0
 10518 ;;      Totals:         8       0       0       0       0       0       0
 10519 ;;Total ram usage:        8 bytes
 10520 ;; Hardware stack levels used:    1
 10521 ;; This function calls:
 10522 ;;		Nothing
 10523 ;; This function is called by:
 10524 ;;		_main
 10525 ;; This function uses a non-reentrant model
 10526 ;;
 10527                           
 10528                           	psect	text25
 10529  00503C                     __ptext25:
 10530                           	opt stack 0
 10531  00503C                     ___awdiv:
 10532                           	opt stack 30
 10533                           
 10534                           ;incstack = 0
 10535  00503C  0E00               	movlw	0
 10536  00503E  6E48               	movwf	___awdiv@sign,c
 10537  005040  AE46               	btfss	___awdiv@divisor+1,7,c
 10538  005042  D006               	goto	l755
 10539  005044  6C45               	negf	___awdiv@divisor,c
 10540  005046  1E46               	comf	___awdiv@divisor+1,f,c
 10541  005048  B0D8               	btfsc	status,0,c
 10542  00504A  2A46               	incf	___awdiv@divisor+1,f,c
 10543  00504C  0E01               	movlw	1
 10544  00504E  6E48               	movwf	___awdiv@sign,c
 10545  005050                     l755:
 10546  005050  AE44               	btfss	___awdiv@dividend+1,7,c
 10547  005052  D006               	goto	l756
 10548  005054  6C43               	negf	___awdiv@dividend,c
 10549  005056  1E44               	comf	___awdiv@dividend+1,f,c
 10550  005058  B0D8               	btfsc	status,0,c
 10551  00505A  2A44               	incf	___awdiv@dividend+1,f,c
 10552  00505C  0E01               	movlw	1
 10553  00505E  1A48               	xorwf	___awdiv@sign,f,c
 10554  005060                     l756:
 10555  005060  0E00               	movlw	0
 10556  005062  6E4A               	movwf	___awdiv@quotient+1,c
 10557  005064  0E00               	movlw	0
 10558  005066  6E49               	movwf	___awdiv@quotient,c
 10559  005068  5045               	movf	___awdiv@divisor,w,c
 10560  00506A  1046               	iorwf	___awdiv@divisor+1,w,c
 10561  00506C  B4D8               	btfsc	status,2,c
 10562  00506E  D01C               	goto	l763
 10563  005070  0E01               	movlw	1
 10564  005072  6E47               	movwf	___awdiv@counter,c
 10565  005074  D004               	goto	l758
 10566  005076  90D8               	bcf	status,0,c
 10567  005078  3645               	rlcf	___awdiv@divisor,f,c
 10568  00507A  3646               	rlcf	___awdiv@divisor+1,f,c
 10569  00507C  2A47               	incf	___awdiv@counter,f,c
 10570  00507E                     l758:
 10571  00507E  AE46               	btfss	___awdiv@divisor+1,7,c
 10572  005080  D7FA               	goto	l759
 10573  005082                     u5820:
 10574  005082  90D8               	bcf	status,0,c
 10575  005084  3649               	rlcf	___awdiv@quotient,f,c
 10576  005086  364A               	rlcf	___awdiv@quotient+1,f,c
 10577  005088  5045               	movf	___awdiv@divisor,w,c
 10578  00508A  5C43               	subwf	___awdiv@dividend,w,c
 10579  00508C  5046               	movf	___awdiv@divisor+1,w,c
 10580  00508E  5844               	subwfb	___awdiv@dividend+1,w,c
 10581  005090  A0D8               	btfss	status,0,c
 10582  005092  D005               	goto	l762
 10583  005094  5045               	movf	___awdiv@divisor,w,c
 10584  005096  5E43               	subwf	___awdiv@dividend,f,c
 10585  005098  5046               	movf	___awdiv@divisor+1,w,c
 10586  00509A  5A44               	subwfb	___awdiv@dividend+1,f,c
 10587  00509C  8049               	bsf	___awdiv@quotient,0,c
 10588  00509E                     l762:
 10589  00509E  90D8               	bcf	status,0,c
 10590  0050A0  3246               	rrcf	___awdiv@divisor+1,f,c
 10591  0050A2  3245               	rrcf	___awdiv@divisor,f,c
 10592  0050A4  2E47               	decfsz	___awdiv@counter,f,c
 10593  0050A6  D7ED               	goto	u5820
 10594  0050A8                     l763:
 10595  0050A8  5048               	movf	___awdiv@sign,w,c
 10596  0050AA  B4D8               	btfsc	status,2,c
 10597  0050AC  D004               	goto	l764
 10598  0050AE  6C49               	negf	___awdiv@quotient,c
 10599  0050B0  1E4A               	comf	___awdiv@quotient+1,f,c
 10600  0050B2  B0D8               	btfsc	status,0,c
 10601  0050B4  2A4A               	incf	___awdiv@quotient+1,f,c
 10602  0050B6                     l764:
 10603  0050B6  C049  F043         	movff	___awdiv@quotient,?___awdiv
 10604  0050BA  C04A  F044         	movff	___awdiv@quotient+1,?___awdiv+1
 10605  0050BE  0012               	return	
 10606  0050C0                     __end_of___awdiv:
 10607                           	opt stack 0
 10608                           tblptru	equ	0xFF8
 10609                           tblptrh	equ	0xFF7
 10610                           tblptrl	equ	0xFF6
 10611                           tablat	equ	0xFF5
 10612                           prodh	equ	0xFF4
 10613                           prodl	equ	0xFF3
 10614                           postinc0	equ	0xFEE
 10615                           wreg	equ	0xFE8
 10616                           postinc1	equ	0xFE6
 10617                           fsr1h	equ	0xFE2
 10618                           fsr1l	equ	0xFE1
 10619                           indf2	equ	0xFDF
 10620                           postinc2	equ	0xFDE
 10621                           postdec2	equ	0xFDD
 10622                           fsr2h	equ	0xFDA
 10623                           fsr2l	equ	0xFD9
 10624                           status	equ	0xFD8
 10625                           
 10626 ;; *************** function _MyOpenI2C *****************
 10627 ;; Defined at:
 10628 ;;		line 1184 in file "newmain.c"
 10629 ;; Parameters:    Size  Location     Type
 10630 ;;  sync_mode       1    wreg     unsigned char 
 10631 ;;  slew            1    0[COMRAM] unsigned char 
 10632 ;; Auto vars:     Size  Location     Type
 10633 ;;  sync_mode       1    1[COMRAM] unsigned char 
 10634 ;; Return value:  Size  Location     Type
 10635 ;;                  1    wreg      void 
 10636 ;; Registers used:
 10637 ;;		wreg, status,2, status,0
 10638 ;; Tracked objects:
 10639 ;;		On entry : 0/0
 10640 ;;		On exit  : 0/0
 10641 ;;		Unchanged: 0/0
 10642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10643 ;;      Params:         1       0       0       0       0       0       0
 10644 ;;      Locals:         1       0       0       0       0       0       0
 10645 ;;      Temps:          0       0       0       0       0       0       0
 10646 ;;      Totals:         2       0       0       0       0       0       0
 10647 ;;Total ram usage:        2 bytes
 10648 ;; Hardware stack levels used:    1
 10649 ;; This function calls:
 10650 ;;		Nothing
 10651 ;; This function is called by:
 10652 ;;		_main
 10653 ;; This function uses a non-reentrant model
 10654 ;;
 10655                           
 10656                           	psect	text26
 10657  004EB8                     __ptext26:
 10658                           	opt stack 0
 10659  004EB8                     _MyOpenI2C:
 10660                           	opt stack 30
 10661                           
 10662                           ;incstack = 0
 10663                           ;MyOpenI2C@sync_mode stored from wreg
 10664  004EB8  6E44               	movwf	MyOpenI2C@sync_mode,c
 10665                           
 10666                           ;newmain.c: 1186: SSPSTAT &= 0x3F;
 10667  004EBA  0E3F               	movlw	63
 10668  004EBC  16C7               	andwf	4039,f,c	;volatile
 10669                           
 10670                           ;newmain.c: 1187: SSPCON1 = 0x00;
 10671  004EBE  0E00               	movlw	0
 10672  004EC0  6EC6               	movwf	4038,c	;volatile
 10673                           
 10674                           ;newmain.c: 1188: SSPCON2 = 0x00;
 10675  004EC2  0E00               	movlw	0
 10676  004EC4  6EC5               	movwf	4037,c	;volatile
 10677                           
 10678                           ;newmain.c: 1189: SSPCON1 |= sync_mode;
 10679  004EC6  5044               	movf	MyOpenI2C@sync_mode,w,c
 10680  004EC8  12C6               	iorwf	4038,f,c	;volatile
 10681                           
 10682                           ;newmain.c: 1190: SSPSTAT |= slew;
 10683  004ECA  5043               	movf	MyOpenI2C@slew,w,c
 10684  004ECC  12C7               	iorwf	4039,f,c	;volatile
 10685                           
 10686                           ;newmain.c: 1192: TRISCbits.TRISC3 = 1;
 10687  004ECE  8694               	bsf	3988,3,c	;volatile
 10688                           
 10689                           ;newmain.c: 1193: TRISCbits.TRISC4 = 1;
 10690  004ED0  8894               	bsf	3988,4,c	;volatile
 10691                           
 10692                           ;newmain.c: 1195: SSPCON1 |= 0b00100000;
 10693  004ED2  8AC6               	bsf	4038,5,c	;volatile
 10694  004ED4  0012               	return		;funcret
 10695  004ED6                     __end_of_MyOpenI2C:
 10696                           	opt stack 0
 10697                           tblptru	equ	0xFF8
 10698                           tblptrh	equ	0xFF7
 10699                           tblptrl	equ	0xFF6
 10700                           tablat	equ	0xFF5
 10701                           prodh	equ	0xFF4
 10702                           prodl	equ	0xFF3
 10703                           postinc0	equ	0xFEE
 10704                           wreg	equ	0xFE8
 10705                           postinc1	equ	0xFE6
 10706                           fsr1h	equ	0xFE2
 10707                           fsr1l	equ	0xFE1
 10708                           indf2	equ	0xFDF
 10709                           postinc2	equ	0xFDE
 10710                           postdec2	equ	0xFDD
 10711                           fsr2h	equ	0xFDA
 10712                           fsr2l	equ	0xFD9
 10713                           status	equ	0xFD8
 10714                           
 10715 ;; *************** function _MyCloseI2C *****************
 10716 ;; Defined at:
 10717 ;;		line 1103 in file "newmain.c"
 10718 ;; Parameters:    Size  Location     Type
 10719 ;;		None
 10720 ;; Auto vars:     Size  Location     Type
 10721 ;;		None
 10722 ;; Return value:  Size  Location     Type
 10723 ;;                  1    wreg      void 
 10724 ;; Registers used:
 10725 ;;		status,2, status,0
 10726 ;; Tracked objects:
 10727 ;;		On entry : 0/0
 10728 ;;		On exit  : 0/0
 10729 ;;		Unchanged: 0/0
 10730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10731 ;;      Params:         0       0       0       0       0       0       0
 10732 ;;      Locals:         0       0       0       0       0       0       0
 10733 ;;      Temps:          0       0       0       0       0       0       0
 10734 ;;      Totals:         0       0       0       0       0       0       0
 10735 ;;Total ram usage:        0 bytes
 10736 ;; Hardware stack levels used:    1
 10737 ;; This function calls:
 10738 ;;		Nothing
 10739 ;; This function is called by:
 10740 ;;		_main
 10741 ;; This function uses a non-reentrant model
 10742 ;;
 10743                           
 10744                           	psect	text27
 10745  004E78                     __ptext27:
 10746                           	opt stack 0
 10747  004E78                     _MyCloseI2C:
 10748                           	opt stack 30
 10749                           
 10750                           ;newmain.c: 1105: SSPCON1 &= 0xDF;
 10751                           
 10752                           ;incstack = 0
 10753  004E78  9AC6               	bcf	4038,5,c	;volatile
 10754  004E7A  0012               	return		;funcret
 10755  004E7C                     __end_of_MyCloseI2C:
 10756                           	opt stack 0
 10757                           tblptru	equ	0xFF8
 10758                           tblptrh	equ	0xFF7
 10759                           tblptrl	equ	0xFF6
 10760                           tablat	equ	0xFF5
 10761                           prodh	equ	0xFF4
 10762                           prodl	equ	0xFF3
 10763                           postinc0	equ	0xFEE
 10764                           wreg	equ	0xFE8
 10765                           postinc1	equ	0xFE6
 10766                           fsr1h	equ	0xFE2
 10767                           fsr1l	equ	0xFE1
 10768                           indf2	equ	0xFDF
 10769                           postinc2	equ	0xFDE
 10770                           postdec2	equ	0xFDD
 10771                           fsr2h	equ	0xFDA
 10772                           fsr2l	equ	0xFD9
 10773                           status	equ	0xFD8
 10774                           tblptru	equ	0xFF8
 10775                           tblptrh	equ	0xFF7
 10776                           tblptrl	equ	0xFF6
 10777                           tablat	equ	0xFF5
 10778                           prodh	equ	0xFF4
 10779                           prodl	equ	0xFF3
 10780                           postinc0	equ	0xFEE
 10781                           wreg	equ	0xFE8
 10782                           postinc1	equ	0xFE6
 10783                           fsr1h	equ	0xFE2
 10784                           fsr1l	equ	0xFE1
 10785                           indf2	equ	0xFDF
 10786                           postinc2	equ	0xFDE
 10787                           postdec2	equ	0xFDD
 10788                           fsr2h	equ	0xFDA
 10789                           fsr2l	equ	0xFD9
 10790                           status	equ	0xFD8
 10791                           
 10792                           	psect	rparam
 10793  0000                     tblptru	equ	0xFF8
 10794                           tblptrh	equ	0xFF7
 10795                           tblptrl	equ	0xFF6
 10796                           tablat	equ	0xFF5
 10797                           prodh	equ	0xFF4
 10798                           prodl	equ	0xFF3
 10799                           postinc0	equ	0xFEE
 10800                           wreg	equ	0xFE8
 10801                           postinc1	equ	0xFE6
 10802                           fsr1h	equ	0xFE2
 10803                           fsr1l	equ	0xFE1
 10804                           indf2	equ	0xFDF
 10805                           postinc2	equ	0xFDE
 10806                           postdec2	equ	0xFDD
 10807                           fsr2h	equ	0xFDA
 10808                           fsr2l	equ	0xFD9
 10809                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1538
    Data        0
    BSS         182
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     51     117
    BANK0           128      0     116
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(2) Largest target is 116
		 -> matrices(BANK0[116]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 116
		 -> matrices(BANK0[116]), 

    memcpy@s1	PTR const void  size(2) Largest target is 116
		 -> matrices.keys(BANK0[6]), matrices(BANK0[116]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 116
		 -> matrices.keys(BANK0[6]), matrices(BANK0[116]), 

    MygetsI2C@rdptr	PTR unsigned char  size(2) Largest target is 116
		 -> matrices(BANK0[116]), 

    sp__memcpy	PTR void  size(2) Largest target is 116
		 -> matrices(BANK0[116]), 


Critical Paths under _main in COMRAM

    _main->_animation6
    _was_key_pressed->___wmul
    _read_switch->_memcpy
    _memcpy->___wmul
    _MygetsI2C->___wmul
    _is_key_pressed->___wmul
    _animation7->_clr_led
    _animation6->_clr_led
    _animation5->_clr_led
    _animation4->_clr_led
    _animation3->_clr_led
    _animation2->_clr_led
    _animation1->_clr_led
    _animation0->_clr_led
    _write_display->___wmul
    _write_display->_write
    _write->_MyWriteI2C
    _MyWriteI2C->_MyIdleI2C
    _set_led->___wmul
    _clr_led->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0  118953
                                             36 COMRAM    15    15      0
                         _MyCloseI2C
                          _MyIdleI2C
                          _MyOpenI2C
                         _MyStartI2C
                          _MyStopI2C
                            ___awdiv
                             ___wmul
                         _animation0
                         _animation1
                         _animation2
                         _animation3
                         _animation4
                         _animation5
                         _animation6
                         _animation7
                            _clr_led
                     _is_key_pressed
                        _read_switch
                            _set_led
                    _was_key_pressed
                              _write
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _was_key_pressed                                     13    13      0    3311
                                              6 COMRAM    13    13      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _read_switch                                         14    14      0    4170
                                             17 COMRAM    14    14      0
                          _MyIdleI2C
                        _MyNotAckI2C
                         _MyStartI2C
                          _MyStopI2C
                          _MygetsI2C
                             ___wmul
                             _memcpy
                              _write
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6     371
                                              6 COMRAM    11     5      6
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _MygetsI2C                                            3     0      3     219
                                              6 COMRAM     3     0      3
                          _MyReadI2C
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _MyReadI2C                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MyNotAckI2C                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _is_key_pressed                                      13    13      0    3311
                                              6 COMRAM    13    13      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _animation7                                           5     5      0   11322
                                             21 COMRAM     5     5      0
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation6                                          15    14      1   10860
                                             21 COMRAM    15    14      1
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation5                                           8     6      2   11521
                                             21 COMRAM     8     6      2
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation4                                           6     5      1   11580
                                             21 COMRAM     6     5      1
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation3                                           5     5      0   11730
                                             21 COMRAM     5     5      0
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation2                                          12    10      2   12178
                                             21 COMRAM    12    10      2
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation1                                           8     7      1   10685
                                             21 COMRAM     8     7      1
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation0                                           9     8      1   11086
                                             21 COMRAM     9     8      1
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _write_display                                       10    10      0    3492
                                              6 COMRAM    10    10      0
                          _MyIdleI2C
                         _MyStartI2C
                          _MyStopI2C
                             ___wmul
                              _write
 ---------------------------------------------------------------------------------
 (2) _write                                                4     4      0      91
                                              2 COMRAM     4     4      0
                         _MyWriteI2C
 ---------------------------------------------------------------------------------
 (3) _MyWriteI2C                                           1     1      0      22
                                              1 COMRAM     1     1      0
                          _MyIdleI2C
 ---------------------------------------------------------------------------------
 (4) _MyIdleI2C                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MyStopI2C                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MyStartI2C                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_led                                             13    13      0    3311
                                              6 COMRAM    13    13      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _clr_led                                             15    15      0    3311
                                              6 COMRAM    15    15      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    3199
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1060
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _MyOpenI2C                                            2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _MyCloseI2C                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MyCloseI2C
   _MyIdleI2C
   _MyOpenI2C
   _MyStartI2C
   _MyStopI2C
   ___awdiv
   ___wmul
   _animation0
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation1
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation2
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation3
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation4
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation5
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation6
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation7
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _clr_led
     ___wmul
   _is_key_pressed
     ___wmul
   _read_switch
     _MyIdleI2C
     _MyNotAckI2C
     _MyStartI2C
     _MyStopI2C
     _MygetsI2C
       _MyReadI2C
       ___wmul (ARG)
     ___wmul
     _memcpy
       ___wmul (ARG)
     _write
       _MyWriteI2C
         _MyIdleI2C
   _set_led
     ___wmul
   _was_key_pressed
     ___wmul
   _write
     _MyWriteI2C
       _MyIdleI2C
   _write_display
     _MyIdleI2C
     _MyStartI2C
     _MyStopI2C
     ___wmul
     _write
       _MyWriteI2C
         _MyIdleI2C

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      74       5       90.6%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     33      75       1       92.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E9      15        0.0%
DATA                 0      0      E9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Jan 03 22:51:33 2018

    is_key_pressed@matrix 0051               _SSPSTATbits 000FC7              ___awdiv@sign 0048  
     ___wmul@multiplicand 0045               __CFG_BORV$3 000000              __CFG_CP0$OFF 000000  
            __CFG_CP1$OFF 000000              __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000  
                     l210 5BAE                       l211 5BA4                       l220 5C9A  
                     l212 5B5C                       l300 6E36                       l125 4F24  
                     l221 5C90                       l205 5B4A                       l301 6E5A  
                     l141 74B8                       l133 735C                       l126 4F42  
                     l230 5D1C                       l222 5C48                       l206 5B18  
                     l310 6F48                       l231 5D40                       l215 5C36  
                     l207 5AD0                       l311 6F6C                       l303 6EBC  
                     l151 7598                       l143 74DE                       l135 7416  
                     l216 5C04                       l320 705C                       l160 766A  
                     l233 5DA2                       l217 5BBC                       l241 554A  
                     l321 7080                       l305 6FDA                       l313 6FCE  
                     l401 5F36                       l153 75EE                       l137 742E  
                     l226 5CAE                       l242 556E                       l250 68EE  
                     l330 7168                       l306 6EDA                       l410 5FF8  
                     l402 5EB2                       l162 769C                       l154 762A  
                     l146 750E                       l331 718C                       l315 70EE  
                     l323 70E2                       l411 5F74                       l171 776C  
                     l155 761A                       l139 74A8                       l228 5CBA  
                     l244 55F6                       l252 693A                       l316 6FEE  
                     l308 6EE6                       l420 6036                       l404 5F12  
                     l500 57D0                       l180 7836                       l164 76B6  
                     l148 7562                       l237 54B6                       l253 6A60  
                     l261 6A54                       l341 72F4                       l333 71EE  
                     l413 5FD4                       l173 77BA                       l157 7784  
                     l149 7580                       l254 6954                       l334 7202  
                     l326 70FA                       l318 6FFA                       l350 64DE  
                     l422 6096                       l430 593C                       l190 795E  
                     l166 76EE                       l158 7650                       l239 54C2  
                     l263 6B76                       l271 6B6A                       l351 6500  
                     l407 5FFC                       l431 596C                       l183 78B4  
                     l175 77F6                       l167 770C                       l264 6A6C  
                     l256 6960                       l248 68E2                       l336 720E  
                     l328 7106                       l360 65EE                       l408 5F4E  
                     l432 59A8                       l192 7976                       l273 6C94  
                     l281 6C88                       l361 6612                       l345 656E  
                     l353 6562                       l417 6010                       l441 6154  
                     l185 78FA                       l177 78C8                       l169 7724  
                     l522 5014                       l274 6B8A                       l266 6A78  
                     l258 69C8                       l338 7270                       l370 6702  
                     l346 6470                       l450 6234                       l194 79C2  
                     l178 781E                       l291 6DA0                       l259 69EC  
                     l339 7292                       l371 6726                       l355 6680  
                     l363 6674                       l419 60BA                       l427 589C  
                     l443 6160                       l187 7936                       l524 5002  
                     l284 6CA2                       l276 6B96                       l268 6AE0  
                     l380 6816                       l356 6580                       l348 647C  
                     l460 634A                       l452 6240                       l196 79F0  
                     l269 6B02                       l381 6838                       l365 6794  
                     l373 6788                       l429 58E6                       l445 61C2  
                     l189 79DA                       l526 5010                       l286 6CAE  
                     l278 6BFE                       l366 6694                       l358 658C  
                     l390 5DCE                       l462 6356                       l454 62A2  
                     l438 6220                       l446 61E4                       l198 79FA  
                     l535 5038                       l519 4FEC                       l471 5384  
                     l279 6C20                       l295 6EC8                       l383 689A  
                     l455 62C6                       l288 6D16                       l296 6DC8  
                     l376 67A8                       l368 66A0                       l392 5E76  
                     l464 63B8                       l473 53DC                       l289 6D38  
                     l393 5DF4                       l465 63DC                       l449 633E  
                     l457 6328                       l561 4FA4                       l298 6DD4  
                     l378 67B4                       l570 4FCE                       l475 549A  
                     l395 5E52                       l467 643E                       l563 4FB0  
                     l389 5E7A                       l493 561E                       l398 5F3A  
                     l399 5E8C                       l559 4F92                       l496 56F6  
                     l762 509E                       l578 4EB0                       l498 574C  
                     l763 50A8                       l755 5050                       l764 50B6  
                     l756 5060                       l758 507E                       l759 5076  
            __CFG_CPB$OFF 000000              __CFG_CPD$OFF 000000                       prod 000FF3  
                     wreg 000FE8              __CFG_IESO$ON 000000              __CFG_LVP$OFF 000000  
            __CFG_WDT$OFF 000000                      l1015 4F7E                      l1016 4F5E  
                    l4003 660A                      l3301 57E4                      l3127 4F42  
                    l4031 6698                      l4025 668C                      l3411 5D38  
                    l4131 5DEC                      l4123 5DC6                      l3173 53CC  
                    l3183 5488                      l3431 54AE                      l4071 67A0  
                    l4207 5F6C                      l4049 671E                      l4161 5E84  
                    l4305 59A8                      l3611 6B8E                      l3515 6958  
                    l4411 622C                      l3195 4F5E                      l3283 573C  
                    l3437 54BA                      l3605 6B82                      l3509 694C  
                    l4077 67AC                      l4245 602E                      l4237 6008  
                    l3631 6C18                      l3535 69E4                      l3703 6DC0  
                    l4095 6830                      l3393 5CB2                      l3457 5566  
                    l3801 6FF2                      l4169 5EAA                      l4417 6238  
                    l3297 57D6                      l3387 5CA6                      l3563 6A70  
                    l3483 68DA                      l4435 62BE                      l3709 6DCC  
                    l4285 5894                      l4373 6158                      l4605 741E  
                    l3583 6AFA                      l3727 6E52                      l4199 5F46  
                    l4463 634E                      l4391 61DC                      l4367 614C  
                    l4711 7640                      l4703 7626                      l4615 7476  
                    l3489 68E6                      l3905 728A                      l4297 593C  
                    l4481 63D4                      l4625 7498                      l3659 6CA6  
                    l3819 7078                      l3755 6EDE                      l4803 780E  
                    l4643 74D6                      l4635 74B4                      l4619 747C  
                    l3845 70FE                      l3773 6F64                      l3749 6ED2  
                    l3933 6468                      l4653 74FE                      l3679 6D30  
                    l3863 7184                      l4823 78BA                      l4751 76FC  
                    l4559 734C                      l3881 71FA                      l4809 7826  
                    l4673 7588                      l4665 7568                      l3795 6FE6  
                    l3939 6474                      l4827 78C0                      l4771 7772  
                    l4667 7570                      l3957 64F8                      l4853 794E  
                    l4757 7714                      l4749 76F4                      l4693 760A  
                    l4685 75F4                      l4597 73EA                      l3887 7206  
                    l4871 79C8                      l4775 7778                      l4599 7406  
                    l3985 6584                      l4689 75FA                      l3979 6578  
                    l4859 7966                      l4875 79CE                      u4000 69CC  
                    u4110 6B6E                      u4030 6A58                      u5010 681A  
                    u3420 4EAE                      u5110 5E70                      u3360 5028  
                    u4240 6D1A                      u4160 6C02                      u4080 6AE4  
                    u4320 6E3A                      u5040 689E                      u3450 5382  
                    u4410 6F4C                      u5050 68A6                      u3444 524C  
                    u4500 7060                      u3540 4FC4                      u3620 57D6  
                    u3445 5246                      u3470 5488                      u4270 6DA4  
                    u4190 6C8C                      u4350 6EC0                      u3630 57E4  
                    u6030 75F4                      u4440 6FD2                      u5320 60B4  
                    u3560 4FD2                      u6200 7778                      u6040 75FA  
                    u3810 5DA6                      u4610 71F2                      u4530 70E6  
                    u5250 5FF2                      u5180 5F30                      u3644 5158  
                    u3580 561C                      u3645 5154                      u3494 52FA  
                    u3654 51FA                      u6310 78BA                      u6150 76F4  
                    u6070 7626                      u3495 52F4                      u3655 51F6  
                    u5360 58F6                      u6320 78C0                      u4650 7274  
                    u5610 6218                      u3780 5D20                      u3860 554E  
                    u3940 693E                      u4580 716C                      u4740 64E2  
                    u5380 597C                      u5700 632C                      u6420 79C8  
                    u3950 6942                      u4830 65F2                      u5710 6334  
                    u5550 6148                      u6430 79CE                      u6190 7772  
                    u4680 72F8                      u4920 6706                      u3890 55FA  
                    u4770 6566                      u5820 5082                      u4860 6678  
                    u6460 79F4                      u5900 747C                      u4950 678C  
                    u5750 63BC                      u5670 62A6                      u5590 61C6  
                    u6607 59B2                      u5920 74B4                      u6617 64EC  
                    u6537 733E                      u6707 69D6                      u6627 65FC  
                    u6547 7486                      u5780 6442                      u5860 73EA  
                    u6717 6AEE                      u6637 6710                      u6557 74BE  
                    u6727 6C0C                      u6647 6824                      u6567 61D0  
                    u6737 6D24                      u6657 6E44                      u6577 62B0  
                    u5890 7476                      u6747 5558                      u6667 6F56  
                    u6587 63C6                      u6757 5AF2                      u6677 706A  
                    u6597 5854                      u5990 7568                      u6767 5B7E  
                    u6687 7176                      u6777 5BDE                      u6697 727E  
                    u6787 5C6A                      u6797 5D2A              __CFG_WDTPS$1 000000  
__size_of_was_key_pressed 00A2                      _main 7300                      _temp 0001  
                    fsr2h 000FDA                      indf2 000FDF                      fsr1l 000FE1  
                    fsr2l 000FD9                      prodh 000FF4                      prodl 000FF3  
                    start 0000             __CFG_MCLRE$ON 000000              ___param_bank 000000  
         __end_of_Buttons 7F39                     ?_main 0043           __end_of___awdiv 50C0  
         ___awdiv@divisor 0045           ___awdiv@counter 0047             __CFG_PWRT$OFF 000000  
           __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000  
           __CFG_WRT3$OFF 000000            __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000  
          __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000           __end_of_clr_led 5368  
          __CFG_EBTR3$OFF 000000            write_display@i 0051            write_display@j 004F  
           __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000  
          __CFG_EBTRB$OFF 000000                     _arrow 79FD                     _count 0041  
                   _show5 7E39              ?_read_switch 0043                     main@h 0073  
                   main@i 0074                     main@j 0071                     main@m 0070  
                   main@n 006D                     _write 4F1E           __end_of_show0_1 7FB3  
         __end_of_show0_2 7F8B           __end_of_show0_3 7C4D           __end_of_show3_1 7E39  
         __end_of_show3_2 7F63           __end_of_show3_3 7FDF           __end_of_show4_1 7EF9  
         __end_of_show4_2 7DE9           __end_of_show4_3 7D89           __end_of_show4_4 7EB9  
         __end_of_show7_1 7CC1           __end_of_show7_2 7BD5             ??_MyNotAckI2C 0043  
         __end_of_set_led 52B2                     tablat 000FF5                     status 000FD8  
          __CFG_PBADEN$ON 000000           __initialization 4ED6              __end_of_main 79FC  
              _MyCloseI2C 4E78            MygetsI2C@rdptr 0049                    ??_main 0067  
           __activetblptr 000002          ___awdiv@dividend 0043                _MyStartI2C 4E7C  
                  ?_write 0043                _MyWriteI2C 4FDE        __size_of_MyIdleI2C 0012  
                  _SSPADD 000FC8                    _SSPBUF 000FC9        __size_of_MyReadI2C 001C  
     __end_of_MyNotAckI2C 4E8A            __CFG_XINST$OFF 000000        __size_of_MyOpenI2C 001E  
       ??_was_key_pressed 0049                    ___wmul 4EF8                 ??___awdiv 0047  
          __CFG_STVREN$ON 000000        __size_of_MyStopI2C 0004                    _ledLUT 7FEF  
                  _circle 7CC1                    _memcpy 4F4C                    clear_0 4EDC  
                  clear_1 4EE8          ___awdiv@quotient 0049                 ??_clr_led 0049  
      __size_of_MygetsI2C 004E              __mediumconst 79FC                    tblptrh 000FF7  
                  tblptrl 000FF6                 ??_set_led 0049                    tblptru 000FF8  
              __accesstop 0080   __end_of__initialization 4EEE             main@sync_mode 006B  
           ___rparam_used 000001            __pcstackCOMRAM 0043               ?_MyCloseI2C 0043  
           __end_of_arrow 7AFD             __end_of_show5 7E79             __end_of_write 4F4C  
       __end_of_MyIdleI2C 4E9C    __size_of_write_display 0134           MygetsI2C@length 004B  
       __end_of_MyReadI2C 4EB8         __end_of_MyOpenI2C 4ED6         __end_of_MyStopI2C 4E84  
             ?_MyStartI2C 0043                   ??_write 0045                __pbssBANK0 0080  
             _MyNotAckI2C 4E84               ?_MyWriteI2C 0043      __size_of_read_switch 01E6  
       __end_of_MygetsI2C 4FDE                   ?___wmul 0043                _animation0 5ABA  
              _animation1 549C                _animation2 68B2                _animation3 6DAC  
              _animation4 644A                _animation5 5DAE                _animation6 57E8  
              _animation7 60BE           is_key_pressed@k 0055                   ?_memcpy 0049  
 __size_of_is_key_pressed 00A2                   _SSPCON1 000FC6                   _SSPCON2 000FC5  
       is_key_pressed@led 0053                   _SSPSTAT 000FC7       __size_of_MyCloseI2C 0004  
           _write_display 5368                   _Buttons 7EF9                   __Hparam 0000  
                 __Lparam 0000                   ___awdiv 503C           __size_of___wmul 0026  
     __size_of_MyStartI2C 0004                   __pcinit 4ED6           __size_of_memcpy 0044  
                 __ramtop 0600                   __ptext0 7300                   __ptext1 5162  
                 __ptext2 5602                   __ptext3 4F4C                   __ptext4 4F90  
                 __ptext5 4E9C                   __ptext6 4E84                   __ptext7 50C0  
                 __ptext8 60BE                   __ptext9 57E8                   _clr_led 52B2  
     __size_of_MyWriteI2C 005E        MyWriteI2C@data_out 0044         __end_of_buttonLUT 7FEF  
                 _show0_1 7F8B                   _show0_2 7F63                   _show0_3 7BD5  
                 _show3_1 7DE9                   _show3_2 7F39                   _show3_3 7FCB  
                 _show4_1 7EB9                   _show4_2 7D89                   _show4_3 7D29  
                 _show4_4 7E79                   _show7_1 7C4D                   _show7_2 7AFD  
                 _set_led 5204           _was_key_pressed 5162      end_of_initialization 4EEE  
                 memcpy@d 004F                   memcpy@n 004D                   memcpy@s 0051  
           __Lmediumconst 79FC            ?_write_display 0043                   postdec2 000FDD  
                 postinc0 000FEE                   postinc1 000FE6                   postinc2 000FDE  
             ?_animation0 0058               ?_animation1 0058               ?_animation2 0058  
             ?_animation3 0043               ?_animation4 0058               ?_animation5 0058  
             ?_animation6 0058               ?_animation7 0043                clr_led@led 0055  
               _TRISCbits 000F94              read_switch@i 005E              read_switch@j 0060  
              main@column 006F              ??_MyCloseI2C 0043            __end_of___wmul 4F1E  
          __end_of_ledLUT 7FFF            __end_of_circle 7D29          _horizental_flash 7FB3  
          __end_of_memcpy 4F90   __end_of_was_key_pressed 5204       start_initialization 4ED6  
          _is_key_pressed 50C0                 _MyIdleI2C 4E8A                 _MyReadI2C 4E9C  
            ??_MyStartI2C 0043       __size_of_animation0 02F4       __size_of_animation1 0166  
     __size_of_animation2 04FA       __size_of_animation3 0554       __size_of_animation4 0468  
     __size_of_animation5 0310       __size_of_animation6 02D2           ??_write_display 0049  
     __size_of_animation7 038C                 _MyOpenI2C 4EB8        __end_of_MyCloseI2C 4E7C  
            ?_MyNotAckI2C 0043              ??_MyWriteI2C 0044          __CFG_OSC$INTIO67 000000  
               _MyStopI2C 4E80                 _MygetsI2C 4F90                  ??___wmul 0047  
        __CFG_LPT1OSC$OFF 000000                  ??_memcpy 004F        __end_of_MyStartI2C 4E80  
  __end_of_is_key_pressed 5162        __end_of_MyWriteI2C 503C               __pbssCOMRAM 0001  
      MyOpenI2C@sync_mode 0044                ?_MyIdleI2C 0043                ?_MyReadI2C 0043  
           ??_read_switch 0054                ?_MyOpenI2C 0043                ?_MyStopI2C 0043  
       __CFG_CCP2MX$PORTC 000000                ?_MygetsI2C 0049             __pmediumconst 79FC  
                ?___awdiv 0043             set_led@matrix 0051                  ?_clr_led 0043  
         ?_is_key_pressed 0043          ?_was_key_pressed 0043                  ?_set_led 0043  
               _buttonLUT 7FDF                set_led@led 0053            __size_of_write 002E  
          ___wmul@product 0047        was_key_pressed@led 0053                  _IPR1bits 000F9F  
                _PIE1bits 000F9D       __end_of_read_switch 57E8             animation2@col 005C  
           animation2@row 005F                  _PIR1bits 000F9E                  _PIR2bits 000FA1  
                _RCONbits 000FD0               write@status 0047              ??_animation0 0059  
            ??_animation1 0059              ??_animation2 005A              ??_animation3 0058  
            ??_animation4 0059              ??_animation5 005A              ??_animation6 0059  
            ??_animation7 0058         ___wmul@multiplier 0043               ??_MyIdleI2C 0043  
             ??_MyReadI2C 0043               ??_MyOpenI2C 0044        __end_of_animation0 5DAE  
      __end_of_animation1 5602        __end_of_animation2 6DAC        __end_of_animation3 7300  
      __end_of_animation4 68B2        __end_of_animation5 60BE        __end_of_animation6 5ABA  
      __end_of_animation7 644A  __end_of_horizental_flash 7FCB               ??_MyStopI2C 0043  
   was_key_pressed@matrix 0051      __size_of_MyNotAckI2C 0006                  __Hrparam 0000  
               memcpy@tmp 0053             MyOpenI2C@slew 0043                  __Lrparam 0000  
      __CFG_BOREN$SBORDIS 000000               ??_MygetsI2C 004C          __size_of___awdiv 0084  
        __size_of_clr_led 00B6                  __ptext10 5DAE                  __ptext11 644A  
                __ptext20 4E80                  __ptext12 6DAC                  __ptext21 4E7C  
                __ptext13 68B2                  __ptext22 5204                  __ptext14 549C  
                __ptext23 52B2                  __ptext15 5ABA                  __ptext24 4EF8  
                __ptext16 5368                  __ptext25 503C                  __ptext17 4F1E  
                __ptext26 4EB8                  __ptext18 4FDE                  __ptext27 4E78  
                __ptext19 4E8A          __size_of_set_led 00AE               _read_switch 5602  
           __size_of_main 06FC                  _matrices 0080           main@rightbutton 006E  
                clr_led@i 0057                  main@slew 006C                _INTCONbits 000FF2  
                memcpy@d1 0049                  memcpy@s1 004B             write@data_out 0046  
   __end_of_write_display 549C             clr_led@matrix 0053                  set_led@i 0055  
              _OSCCONbits 000FD3          was_key_pressed@k 0055                 write@data 0045  
             animation0@i 0060               animation0@j 005F               animation1@i 005E  
             animation0@m 005E               animation1@j 005F               animation0@n 0058  
             animation2@h 0059               animation2@i 0062               animation1@m 005C  
             animation2@j 0063               animation1@n 0058               animation2@m 005E  
             animation3@i 005B               animation3@j 005C               animation2@n 0058  
             animation4@h 0058               animation6@a 005E               animation4@i 005C  
             animation3@m 005A               animation6@b 0060               animation4@j 005D  
             animation6@c 0062               animation6@d 0064               animation1@x 005D  
             animation5@h 0059               animation5@i 005E               animation4@m 005B  
             animation5@j 005D               animation2@x 0061               animation5@m 005C  
             animation5@n 0058               animation7@h 005A               animation6@m 0066  
             animation7@i 005B               animation7@j 005C               animation6@n 0058  
             animation5@x 005F               animation6@x 005D          ??_is_key_pressed 0049  
             _SSPCON1bits 000FC6               _SSPCON2bits 000FC5  
